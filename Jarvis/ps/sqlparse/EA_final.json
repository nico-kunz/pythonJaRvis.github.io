{"__init__.format": ["filter_stack.FilterStack.run"], "__init__.parse": ["__init__.parsestream"], "__init__.parsestream": ["filter_stack.FilterStack.run"], "__init__.split": ["filter_stack.FilterStack.run"], "__main__": ["cli.main"], "aligned_indent.AlignedIndentFilter._next_token": ["sql.TokenList.token_next_by"], "aligned_indent.AlignedIndentFilter._process": ["__init__.format"], "aligned_indent.AlignedIndentFilter._process_case": ["sql.TokenList.token_next_by"], "aligned_indent.AlignedIndentFilter._process_default": ["utils.offset"], "aligned_indent.AlignedIndentFilter._process_identifierlist": ["sql.TokenList.insert_before"], "aligned_indent.AlignedIndentFilter._process_parenthesis": ["utils.indent"], "aligned_indent.AlignedIndentFilter._process_statement": ["aligned_indent.AlignedIndentFilter._process"], "aligned_indent.AlignedIndentFilter._split_kwds": ["sql.TokenList.insert_before"], "aligned_indent.AlignedIndentFilter.process": ["aligned_indent.AlignedIndentFilter._process"], "cli._error": ["__init__.format"], "cli.create_parser": ["__init__.format"], "cli.main": ["cli.create_parser"], "filter_stack.FilterStack.run": ["statement_splitter.StatementSplitter.__init__"], "formatter.build_filter_stack": ["filter_stack.FilterStack.enable_grouping"], "formatter.validate_options": ["__init__.format"], "grouping._group": ["sql.TokenList.token_next"], "grouping._group_matching": ["sql.TokenList.group_tokens"], "grouping.align_comments": ["sql.TokenList.token_prev"], "grouping.group_aliased": ["sql.TokenList.token_next_by"], "grouping.group_arrays": ["utils.imt"], "grouping.group_as": ["utils.imt"], "grouping.group_assignment": ["sql.TokenList.token_next_by"], "grouping.group_begin": ["grouping._group_matching"], "grouping.group_brackets": ["grouping._group_matching"], "grouping.group_case": ["grouping._group_matching"], "grouping.group_comments": ["utils.imt"], "grouping.group_comparison": ["utils.imt"], "grouping.group_for": ["grouping._group_matching"], "grouping.group_functions": ["sql.TokenList.token_next_by"], "grouping.group_identifier": ["sql.TokenList.token_next_by"], "grouping.group_identifier_list": ["utils.imt"], "grouping.group_if": ["grouping._group_matching"], "grouping.group_operator": ["utils.imt"], "grouping.group_order": ["utils.imt"], "grouping.group_parenthesis": ["grouping._group_matching"], "grouping.group_period": ["utils.imt"], "grouping.group_typecasts": ["sql.Token.match"], "grouping.group_typed_literal": ["utils.imt"], "grouping.group_tzcasts": ["sql.Token.match"], "grouping.group_values": ["sql.TokenList.token_next_by"], "grouping.group_where": ["sql.TokenList.token_next_by"], "lexer.Lexer.get_tokens": ["utils.consume"], "lexer.tokenize": ["lexer.Lexer.get_tokens"], "others.SerializerUnicode.process": ["utils.split_unquoted_newlines"], "others.SpacesAroundOperatorsFilter._process": ["sql.TokenList.token_prev"], "others.SpacesAroundOperatorsFilter.process": ["sql.TokenList.get_sublists"], "others.StripCommentsFilter._process": ["sql.TokenList.token_prev"], "others.StripCommentsFilter.process": ["sql.TokenList.get_sublists"], "others.StripWhitespaceFilter._stripws": ["__init__.format"], "others.StripWhitespaceFilter._stripws_identifierlist": ["others.StripWhitespaceFilter._stripws_default"], "others.StripWhitespaceFilter._stripws_parenthesis": ["others.StripWhitespaceFilter._stripws_default"], "others.StripWhitespaceFilter.process": ["sql.TokenList.get_sublists"], "output.OutputFilter.process": ["output.OutputFilter._process"], "output.OutputPHPFilter._process": ["__init__.split"], "output.OutputPythonFilter._process": ["__init__.split"], "reindent.ReindentFilter._get_offset": ["reindent.ReindentFilter._flatten_up_to_token"], "reindent.ReindentFilter._next_token": ["sql.TokenList.token_next_by"], "reindent.ReindentFilter._process": ["__init__.format"], "reindent.ReindentFilter._process_case": ["utils.offset"], "reindent.ReindentFilter._process_default": ["sql.TokenList.get_sublists"], "reindent.ReindentFilter._process_function": ["reindent.ReindentFilter._process_default"], "reindent.ReindentFilter._process_identifierlist": ["utils.offset"], "reindent.ReindentFilter._process_parenthesis": ["utils.offset"], "reindent.ReindentFilter._process_values": ["sql.TokenList.token_next_by"], "reindent.ReindentFilter._process_where": ["utils.indent"], "reindent.ReindentFilter._split_kwds": ["sql.TokenList.token_prev"], "reindent.ReindentFilter._split_statements": ["sql.TokenList.token_prev"], "reindent.ReindentFilter.process": ["reindent.ReindentFilter._process"], "right_margin.RightMarginFilter._process": ["right_margin.RightMarginFilter._process"], "sql.Case.get_cases": ["sql.Token.match"], "sql.Function.get_parameters": ["utils.imt"], "sql.Identifier.get_ordering": ["sql.TokenList.token_next_by"], "sql.Identifier.get_typecast": ["sql.TokenList.token_next_by"], "sql.Identifier.is_wildcard": ["sql.TokenList.token_next_by"], "sql.IdentifierList.get_identifiers": ["sql.Token.match"], "sql.NameAliasMixin.get_alias": ["sql.TokenList.token_next_by"], "sql.NameAliasMixin.get_real_name": ["sql.TokenList.token_next_by"], "sql.Statement.get_type": ["sql.TokenList.token_next"], "sql.Token.__repr__": ["sql.Token._get_repr_value"], "sql.Token._get_repr_name": ["__init__.split"], "sql.TokenList.__str__": ["sql.TokenList.flatten"], "sql.TokenList._get_first_name": ["utils.remove_quotes"], "sql.TokenList._pprint_tree": ["sql.TokenList._pprint_tree"], "sql.TokenList.get_name": ["sql.TokenList.get_real_name"], "sql.TokenList.get_parent_name": ["utils.remove_quotes"], "sql.TokenList.get_token_at_offset": ["sql.TokenList.flatten"], "sql.TokenList.has_alias": ["sql.TokenList.get_alias"], "sql.TokenList.insert_after": ["sql.TokenList.token_next"], "sql.TokenList.insert_before": ["sql.TokenList.token_index"], "sql.TokenList.token_first": ["utils.imt"], "sql.TokenList.token_index": ["sql.TokenList.token_index"], "sql.TokenList.token_matching": ["sql.TokenList._token_matching"], "sql.TokenList.token_next": ["utils.imt"], "sql.TokenList.token_next_by": ["utils.imt"], "sql.TokenList.token_not_matching": ["sql.TokenList._token_matching"], "sql.TokenList.token_prev": ["sql.TokenList.token_next"], "statement_splitter.StatementSplitter.__init__": ["statement_splitter.StatementSplitter._reset"], "statement_splitter.StatementSplitter.process": ["statement_splitter.StatementSplitter._reset"], "utils.imt": ["sql.Token.match"], "utils.recurse": ["sql.TokenList.get_sublists"], "utils.split_unquoted_newlines": ["sql.Token.match"]}