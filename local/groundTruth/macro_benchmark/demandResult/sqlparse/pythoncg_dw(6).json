{"sqlparse.utils": ["contextlib", "re.compile", "contextlib.contextmanager", "collections", "re"], "re": ["sre_compile.compile", "re.RegexFlag", "functools.lru_cache.decorating_function", "copyreg", "functools", "enum", "<builtin>.type", "re.Scanner", "sre_compile", "<builtin>.chr", "functools.lru_cache", "functools._lru_cache_wrapper.wrapper", "<builtin>.globals", "sre_parse", "copyreg.pickle"], "enum": ["types", "enum.EnumMeta", "enum.IntFlag", "enum.IntEnum", "enum._EnumDict", "enum.Enum", "<builtin>.object", "enum.auto", "enum.Flag"], "types": ["types.DynamicClassAttribute", "types._cell_factory", "types._c", "<builtin>.object", "types._ag", "types._GeneratorWrapper", "types._C", "types._g", "<builtin>.globals", "<builtin>.type"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "types._C": [], "<builtin>.object": [], "types.DynamicClassAttribute": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "enum.auto": [], "enum._EnumDict": [], "enum.EnumMeta": ["<builtin>.classmethod", "<builtin>.property", "<builtin>.staticmethod"], "<builtin>.classmethod": [], "<builtin>.staticmethod": [], "enum.Enum": ["<builtin>.classmethod", "types.DynamicClassAttribute.__init__"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.getattr": [], "<builtin>.bool": [], "enum.IntEnum": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["sre_constants", "sre_parse", "<builtin>.tuple"], "sre_parse": ["sre_parse.SubPattern", "sre_parse.Verbose", "sre_constants", "<builtin>.ord", "sre_parse.Tokenizer", "sre_parse.State", "<builtin>.frozenset"], "sre_constants": ["sre_constants._NamedIntConstant", "sre_constants._makecodes", "sre_constants.error"], "sre_constants.error": [], "sre_constants._NamedIntConstant": [], "sre_constants._makecodes": ["<str>.strip", "<str>.split", "<builtin>.globals", "<builtin>.enumerate"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "<builtin>.ord": [], "sre_parse.Verbose": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.SubPattern": [], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["functools.partialmethod", "abc", "functools.cached_property", "functools.partial", "reprlib", "<builtin>.object", "functools.singledispatchmethod", "collections", "collections.namedtuple", "functools._HashedSeq"], "abc": ["abc.abstractproperty", "abc.abstractclassmethod", "_py_abc", "abc.abstractstaticmethod", "abc.ABC"], "abc.abstractclassmethod": [], "abc.abstractstaticmethod": [], "abc.abstractproperty": [], "_py_abc": ["_weakrefset", "_py_abc.ABCMeta"], "_weakrefset": ["_weakrefset.WeakSet", "_weakrefset._IterationGuard"], "_weakrefset._IterationGuard": [], "_weakrefset.WeakSet": [], "_py_abc.ABCMeta": [], "abc.ABC": [], "collections": ["heapq", "collections._OrderedDictValuesView", "collections.OrderedDict", "collections.Counter", "reprlib", "collections._OrderedDictItemsView", "collections._OrderedDictKeysView", "keyword", "collections._Link", "operator", "collections.ChainMap", "collections.UserDict", "collections.UserList", "collections.UserString"], "operator": ["operator.attrgetter", "operator.methodcaller", "operator.itemgetter"], "operator.attrgetter": [], "operator.itemgetter": [], "operator.methodcaller": [], "keyword": ["<builtin>.frozenset"], "heapq": ["_heapq"], "_heapq": [], "reprlib": ["reprlib.Repr", "reprlib.Repr.__init__"], "reprlib.Repr": [], "reprlib.Repr.__init__": [], "collections._OrderedDictKeysView": [], "collections._OrderedDictItemsView": [], "collections._OrderedDictValuesView": [], "collections._Link": [], "collections.OrderedDict": ["<builtin>.classmethod", "reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr", "<builtin>.object"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.getattr", "<builtin>.set"], "<builtin>.set": [], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["<builtin>.classmethod", "reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr", "<builtin>.property"], "collections.UserDict": ["<builtin>.classmethod"], "collections.UserList": [], "collections.UserString": [], "functools.partial": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "functools.partialmethod": ["<builtin>.property"], "collections.namedtuple": ["<builtin>.list", "<builtin>.str", "<builtin>.TypeError", "<builtin>.dict", "<builtin>.repr", "<builtin>.set", "<builtin>.map", "<builtin>.tuple", "<builtin>.len", "<builtin>.classmethod", "<str>.split", "<builtin>.exec", "collections.<lambda1>", "_collections._tuplegetter", "<builtin>.enumerate", "<str>.join", "<builtin>.type", "<builtin>.ValueError", "<builtin>.zip", "<builtin>.isinstance", "<builtin>.reversed", "<str>.replace"], "<builtin>.isinstance": [], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.str": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "<builtin>.len": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<builtin>.repr": [], "<str>.join": [], "<builtin>.exec": [], "_collections._tuplegetter": [], "collections.<lambda1>": ["operator.itemgetter.__init__", "<builtin>.property"], "operator.itemgetter.__init__": [], "functools._HashedSeq": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": [], "re.RegexFlag": [], "<builtin>.chr": [], "sre_compile.compile": ["<builtin>.print", "<builtin>.tuple", "sre_compile.dis", "sre_compile._code", "sre_parse.parse", "sre_compile.isstring", "<map>.items"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.Tokenizer.__init__", "sre_parse.SubPattern.dump", "sre_parse.Tokenizer.error", "sre_parse.Tokenizer.seek", "sre_parse._parse_sub", "sre_parse.State.__init__", "sre_parse.fix_flags"], "sre_parse.Tokenizer.__init__": ["<builtin>.str", "<builtin>.isinstance", "sre_parse.Tokenizer.__next"], "sre_parse.Tokenizer.__next": ["sre_parse.Tokenizer.error", "<builtin>.len"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["sre_parse.Tokenizer.tell", "sre_parse.SubPattern.append", "<builtin>.len", "sre_parse.SubPattern.__init__", "<list>", "sre_parse.Tokenizer.match", "<list>.append", "<list>.extend"], "<list>": [], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "<list>.extend": [], "<list>.append": [], "sre_parse.SubPattern.append": ["<list>.append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.ValueError", "<builtin>.isinstance"], "sre_parse.SubPattern.dump": ["<builtin>.str", "<builtin>.isinstance", "<builtin>.print", "<builtin>.enumerate"], "<builtin>.print": [], "sre_compile._code": ["sre_compile._compile_info", "<list>.append", "sre_compile._compile"], "sre_compile._compile_info": ["sre_compile._optimize_charset", "<builtin>.len", "<list>", "<list>.extend", "sre_compile._compile_charset", "sre_compile._get_literal_prefix", "sre_parse.SubPattern.getwidth", "sre_compile._get_charset_prefix"], "sre_parse.SubPattern.getwidth": ["<builtin>.min", "<builtin>.max"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["<builtin>.len", "sre_compile._combine_flags", "<list>", "<list>.extend", "sre_compile._get_literal_prefix", "sre_compile._get_iscased"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["<builtin>.map", "sre_compile._combine_flags", "<list>", "<builtin>.any", "sre_compile._get_iscased", "<builtin>.range"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["sre_compile._bytes_to_codes", "<builtin>.map", "<builtin>.bytearray", "<builtin>.len", "sre_compile._mk_bitmap", "<list>.append", "<builtin>.bytes", "<builtin>.any", "<builtin>.range"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.len", "<builtin>.range"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["<list>", "sre_constants.error.__init__", "<list>.extend"], "sre_constants.error.__init__": ["<builtin>.isinstance", "<builtin>.super"], "<builtin>.super": [], "sre_compile._compile": ["<map>.get", "sre_compile._optimize_charset", "sre_compile._combine_flags", "<list>", "sre_compile._compile_charset", "sre_compile._simple", "sre_constants.error.__init__", "sre_compile._compile"], "<map>.get": [], "sre_compile._simple": ["sre_compile._simple", "<builtin>.len"], "sre_compile.dis": ["<builtin>.str", "<builtin>.len", "sre_compile.dis.dis_", "<builtin>.set"], "sre_compile.dis.dis_": ["<builtin>.ValueError", "<builtin>.map", "<builtin>.bin", "<builtin>.list", "<builtin>.str", "sre_compile._hex_code", "sre_compile.dis.dis_.print_2", "sre_compile.dis.dis_.print_", "sre_compile.dis.dis_", "<builtin>.chr", "<builtin>.range"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["functools._lru_cache_wrapper", "<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.callable", "functools.update_wrapper"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["_thread.RLock", "<builtin>.object"], "_thread.RLock": [], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools._lru_cache_wrapper", "functools.update_wrapper"], "functools._lru_cache_wrapper.wrapper": ["functools._make_key", "re._compile_repl"], "functools._make_key": ["functools._HashedSeq.__init__", "<builtin>.len", "<builtin>.type", "<builtin>.tuple"], "functools._HashedSeq.__init__": ["<builtin>.hash"], "<builtin>.hash": [], "re._compile_repl": ["sre_parse.parse_template"], "sre_parse.parse_template": ["<builtin>.IndexError", "sre_parse.Tokenizer.getuntil", "<builtin>.isinstance", "sre_parse.Tokenizer.__init__", "<builtin>.len", "<list>", "<builtin>.chr", "sre_parse.Tokenizer.error", "<builtin>.int", "sre_parse.parse_template.addgroup", "sre_parse.Tokenizer.match", "<list>.append", "sre_parse.Tokenizer.get", "<str>.isidentifier"], "sre_parse.Tokenizer.get": ["sre_parse.Tokenizer.__next"], "<builtin>.int": [], "sre_parse.parse_template.addgroup": ["sre_parse.Tokenizer.error", "<list>.append"], "sre_parse.Tokenizer.getuntil": ["sre_parse.Tokenizer.error", "<builtin>.len", "sre_parse.Tokenizer.__next"], "<str>.isidentifier": [], "<builtin>.IndexError": [], "copyreg": [], "copyreg.pickle": ["<builtin>.callable", "copyreg.constructor", "<builtin>.TypeError"], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "re.Scanner": [], "contextlib": ["contextlib._GeneratorContextManagerBase", "contextlib.nullcontext", "contextlib.closing", "contextlib._AsyncGeneratorContextManager", "contextlib.ExitStack", "contextlib._BaseExitStack", "types", "contextlib.redirect_stdout", "contextlib._GeneratorContextManager", "collections", "contextlib.ContextDecorator", "contextlib.suppress", "contextlib.redirect_stderr", "abc", "functools", "contextlib.AbstractContextManager", "contextlib.AsyncExitStack", "contextlib.AbstractAsyncContextManager", "contextlib._RedirectStream"], "contextlib.AbstractContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "abc.abstractmethod": [], "contextlib.AbstractAsyncContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.ContextDecorator": [], "contextlib._GeneratorContextManagerBase": [], "contextlib._GeneratorContextManager": [], "contextlib._AsyncGeneratorContextManager": [], "contextlib.closing": [], "contextlib._RedirectStream": [], "contextlib.redirect_stdout": [], "contextlib.redirect_stderr": [], "contextlib.suppress": [], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.ExitStack": [], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "contextlib.nullcontext": [], "re.compile": ["re._compile"], "re._compile": ["<builtin>.ValueError", "<builtin>.isinstance", "<builtin>.type", "<builtin>.TypeError", "<builtin>.len", "<builtin>.iter", "<builtin>.next", "sre_compile.compile", "sre_compile.isstring"], "<builtin>.iter": [], "<builtin>.next": [], "contextlib.contextmanager": ["functools.wraps"], "functools.wraps": [], "sqlparse.tokens": ["sqlparse.tokens._TokenType"], "sqlparse.tokens._TokenType": [], "sqlparse.sql": ["sqlparse.sql.IdentifierList", "sqlparse.sql.Identifier", "sqlparse.sql.Parenthesis", "sqlparse.sql.Values", "sqlparse.sql.TypedLiteral", "sqlparse.sql.Command", "sqlparse.sql.Statement", "sqlparse.sql.Token", "sqlparse.utils", "sqlparse.sql.Comparison", "sqlparse.sql.Function", "sqlparse.sql.If", "sqlparse.sql.TokenList", "sqlparse.sql.Operation", "sqlparse.sql.SquareBrackets", "sqlparse.sql.Comment", "sqlparse.sql.Having", "sqlparse.sql.Where", "sqlparse.sql.For", "sqlparse.sql.Assignment", "sqlparse.sql.NameAliasMixin", "sqlparse.tokens", "sqlparse.sql.Begin", "re", "sqlparse.sql.Case"], "sqlparse.sql.NameAliasMixin": [], "sqlparse.sql.Token": [], "sqlparse.sql.TokenList": ["<builtin>.property"], "sqlparse.sql.Statement": [], "sqlparse.sql.Identifier": [], "sqlparse.sql.IdentifierList": [], "sqlparse.sql.TypedLiteral": [], "sqlparse.sql.Parenthesis": ["<builtin>.property"], "sqlparse.sql.SquareBrackets": ["<builtin>.property"], "sqlparse.sql.Assignment": [], "sqlparse.sql.If": [], "sqlparse.sql.For": [], "sqlparse.sql.Comparison": ["<builtin>.property"], "sqlparse.sql.Comment": [], "sqlparse.sql.Where": [], "sqlparse.sql.Having": [], "sqlparse.sql.Case": [], "sqlparse.sql.Function": [], "sqlparse.sql.Begin": [], "sqlparse.sql.Operation": [], "sqlparse.sql.Values": [], "sqlparse.sql.Command": [], "sqlparse.keywords": ["sqlparse.tokens", "re", "re.compile"], "sqlparse.lexer": ["sqlparse.tokens", "sqlparse.utils", "sqlparse.lexer.Lexer", "io", "sqlparse.keywords"], "io": ["abc", "io.BufferedIOBase", "io.RawIOBase", "io.IOBase", "io.TextIOBase"], "io.IOBase": [], "io.RawIOBase": [], "io.BufferedIOBase": [], "io.TextIOBase": [], "sqlparse.lexer.Lexer": ["<builtin>.staticmethod"], "sqlparse.formatter": ["sqlparse.exceptions", "sqlparse.filters"], "sqlparse.filters": ["sqlparse.filters.tokens", "sqlparse.filters.output", "sqlparse.filters.reindent", "sqlparse.filters.aligned_indent", "sqlparse.filters.right_margin", "sqlparse.filters.others"], "sqlparse.filters.others": ["sqlparse.sql", "sqlparse.tokens", "sqlparse.utils", "sqlparse.filters.others.StripWhitespaceFilter", "sqlparse.filters.others.StripCommentsFilter", "re", "sqlparse.filters.others.SpacesAroundOperatorsFilter", "sqlparse.filters.others.SerializerUnicode"], "sqlparse.filters.others.StripCommentsFilter": ["<builtin>.staticmethod"], "sqlparse.filters.others.StripWhitespaceFilter": ["<builtin>.staticmethod"], "sqlparse.filters.others.SpacesAroundOperatorsFilter": ["<builtin>.staticmethod"], "sqlparse.filters.others.SerializerUnicode": ["<builtin>.staticmethod"], "sqlparse.filters.output": ["sqlparse.sql", "sqlparse.filters.output.OutputPythonFilter", "sqlparse.tokens", "sqlparse.filters.output.OutputFilter", "sqlparse.filters.output.OutputPHPFilter"], "sqlparse.filters.output.OutputFilter": [], "sqlparse.filters.output.OutputPythonFilter": [], "sqlparse.filters.output.OutputPHPFilter": [], "sqlparse.filters.tokens": ["sqlparse.filters.tokens._CaseFilter", "sqlparse.filters.tokens.IdentifierCaseFilter", "sqlparse.filters.tokens.KeywordCaseFilter", "sqlparse.tokens", "sqlparse.filters.tokens.TruncateStringFilter"], "sqlparse.filters.tokens._CaseFilter": [], "sqlparse.filters.tokens.KeywordCaseFilter": [], "sqlparse.filters.tokens.IdentifierCaseFilter": [], "sqlparse.filters.tokens.TruncateStringFilter": [], "sqlparse.filters.reindent": ["sqlparse.tokens", "sqlparse.sql", "sqlparse.utils", "sqlparse.filters.reindent.ReindentFilter"], "sqlparse.filters.reindent.ReindentFilter": ["<builtin>.property"], "sqlparse.filters.right_margin": ["sqlparse.tokens", "sqlparse.sql", "sqlparse.filters.right_margin.RightMarginFilter", "re"], "sqlparse.filters.right_margin.RightMarginFilter": [], "sqlparse.filters.aligned_indent": ["sqlparse.tokens", "sqlparse.sql", "sqlparse.utils", "sqlparse.filters.aligned_indent.AlignedIndentFilter"], "sqlparse.filters.aligned_indent.AlignedIndentFilter": [], "sqlparse.exceptions": ["sqlparse.exceptions.SQLParseError"], "sqlparse.exceptions.SQLParseError": [], "sqlparse.cli": ["io", "sqlparse.exceptions", "sqlparse", "argparse"], "argparse": ["argparse.FileType", "argparse.ArgumentParser", "argparse._AppendConstAction", "shutil", "argparse._ActionsContainer", "argparse.HelpFormatter", "argparse.RawTextHelpFormatter", "os", "argparse._ExtendAction", "argparse.Namespace", "argparse._StoreConstAction", "gettext", "argparse._HelpAction", "argparse._SubParsersAction", "argparse._StoreAction", "argparse.MetavarTypeHelpFormatter", "argparse._AppendAction", "argparse._CountAction", "argparse._VersionAction", "argparse.ArgumentTypeError", "argparse._MutuallyExclusiveGroup", "argparse.RawDescriptionHelpFormatter", "argparse.ArgumentDefaultsHelpFormatter", "argparse.Action", "re", "argparse._StoreTrueAction", "argparse._ArgumentGroup", "argparse._AttributeHolder", "argparse._StoreFalseAction", "argparse.ArgumentError"], "os": ["os._Environ", "ntpath", "os._Environ.__init__", "os._wrap_close", "abc", "posixpath", "os._createenviron", "os.PathLike", "os._exists", "<builtin>.ImportError", "os._AddedDllDirectory", "<list>.append", "<list>.extend", "<builtin>.set", "stat", "<builtin>.globals", "os._fscodec", "os._add"], "stat": [], "<builtin>.ImportError": [], "ntpath": ["stat", "os", "genericpath", "<builtin>.hasattr"], "genericpath": ["stat", "os"], "<builtin>.hasattr": [], "posixpath": ["stat", "os", "genericpath"], "os._exists": ["<builtin>.globals"], "os._add": [], "os._Environ": [], "os._createenviron": ["os._Environ.__init__", "os._createenviron.encodekey"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.TypeError"], "os._Environ.__init__": [], "os._fscodec": [], "os._wrap_close": [], "os.PathLike": ["<builtin>.classmethod", "abc.abstractmethod"], "os._AddedDllDirectory": [], "shutil": ["<builtin>.hasattr", "shutil.ExecError", "lzma", "fnmatch", "shutil.Error", "shutil.ReadError", "shutil._GiveupOnFastCopy", "zlib", "bz2", "shutil.SameFileError", "grp", "collections", "shutil.RegistryError", "os", "shutil.SpecialFileError", "<list>.append", "collections.namedtuple", "stat"], "fnmatch": ["posixpath", "functools.lru_cache.decorating_function", "functools", "os", "re", "functools.lru_cache", "functools._lru_cache_wrapper.wrapper"], "zlib": [], "bz2": ["_bz2", "warnings", "_compression", "<builtin>.object", "bz2.BZ2File", "threading", "os", "io"], "warnings": ["warnings._OptionError", "warnings._processoptions", "warnings.WarningMessage", "warnings.simplefilter", "warnings.catch_warnings", "<builtin>.hasattr", "warnings.filterwarnings"], "warnings._OptionError": [], "warnings.WarningMessage": [], "warnings.catch_warnings": [], "warnings._processoptions": ["<builtin>.print", "warnings._setoption"], "warnings._setoption": ["<builtin>.len", "warnings._getcategory", "<builtin>.int", "re", "warnings._getaction", "re.escape", "warnings.filterwarnings"], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.__import__", "<builtin>.issubclass", "<builtin>.getattr"], "<builtin>.__import__": [], "<builtin>.issubclass": [], "re.escape": ["<builtin>.str", "<builtin>.isinstance"], "warnings.filterwarnings": ["re.compile", "warnings._add_filter", "<builtin>.isinstance", "<builtin>.issubclass", "re"], "warnings._add_filter": ["warnings._filters_mutated", "<list>.append", "<list>.insert", "<list>.remove"], "<list>.remove": [], "<list>.insert": [], "warnings._filters_mutated": [], "warnings.simplefilter": ["warnings._add_filter", "<builtin>.isinstance"], "_compression": ["io", "_compression.DecompressReader", "_compression.BaseStream"], "_compression.BaseStream": [], "_compression.DecompressReader": [], "threading": ["threading.Timer", "<list>.append", "traceback", "<builtin>.set", "<builtin>.hasattr", "threading._RLock", "threading.BoundedSemaphore", "threading.BrokenBarrierError", "_threading_local", "os", "collections.namedtuple", "_weakrefset", "threading._MainThread.__init__", "collections", "threading._MainThread", "threading.Event", "_weakrefset.WeakSet.__init__", "threading._DummyThread", "threading.Semaphore", "itertools.count", "threading.Barrier", "threading.Condition", "threading.Thread"], "threading._RLock": [], "threading.Condition": [], "threading.Semaphore": [], "threading.BoundedSemaphore": [], "threading.Event": [], "threading.Barrier": ["<builtin>.property"], "threading.BrokenBarrierError": [], "itertools.count": [], "_weakrefset.WeakSet.__init__": ["_weakrefset.WeakSet.update", "_weakref.ref", "<builtin>.set"], "_weakref.ref": [], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet.add", "_weakrefset.WeakSet._commit_removals"], "_weakrefset.WeakSet._commit_removals": [], "_weakrefset.WeakSet.add": ["_weakref.ref", "_weakrefset.WeakSet._commit_removals"], "threading.Thread": ["<builtin>.property"], "traceback": ["traceback.TracebackException", "linecache", "collections", "traceback.StackSummary", "traceback.FrameSummary"], "linecache": ["tokenize", "functools", "os"], "tokenize": ["tokenize.TokenInfo", "<builtin>.map", "tokenize.group", "codecs", "tokenize._all_string_prefixes", "re.compile", "<builtin>.any", "tokenize.TokenError", "collections.namedtuple", "tokenize.maybe", "tokenize.Untokenizer", "collections", "tokenize.StopTokenizing", "re", "<builtin>.set", "io", "token", "<builtin>.sorted"], "codecs": ["encodings", "codecs.IncrementalEncoder", "codecs.IncrementalDecoder", "codecs.CodecInfo", "codecs.StreamWriter", "codecs.Codec", "codecs.BufferedIncrementalDecoder", "codecs.StreamReader", "codecs.BufferedIncrementalEncoder", "codecs.StreamRecoder", "codecs.StreamReaderWriter", "<builtin>.SystemError"], "<builtin>.SystemError": [], "codecs.CodecInfo": [], "codecs.Codec": [], "codecs.IncrementalEncoder": [], "codecs.BufferedIncrementalEncoder": [], "codecs.IncrementalDecoder": [], "codecs.BufferedIncrementalDecoder": [], "codecs.StreamWriter": [], "codecs.StreamReader": [], "codecs.StreamReaderWriter": [], "codecs.StreamRecoder": [], "encodings": ["encodings.CodecRegistryError", "codecs"], "encodings.CodecRegistryError": [], "token": ["<builtin>.isinstance", "<builtin>.globals", "<list>.extend"], "<str>.replace": [], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "<builtin>.sorted": [], "tokenize.TokenError": [], "tokenize.StopTokenizing": [], "tokenize.Untokenizer": [], "traceback.FrameSummary": ["<builtin>.property"], "traceback.StackSummary": ["<builtin>.classmethod"], "traceback.TracebackException": ["<builtin>.classmethod"], "threading.Timer": [], "threading._MainThread": [], "threading._DummyThread": [], "threading._MainThread.__init__": ["threading.Thread.__init__", "threading.Event.set", "threading.Thread._set_ident", "threading.Thread._set_tstate_lock", "threading.Thread._set_native_id"], "threading.Thread.__init__": ["threading.current_thread", "threading._newname", "<builtin>.str", "_weakrefset.WeakSet.add", "threading._make_invoke_excepthook", "threading.Event.__init__"], "threading._newname": [], "threading.current_thread": ["_thread.get_ident", "threading._DummyThread.__init__"], "_thread.get_ident": [], "threading._DummyThread.__init__": ["threading.Thread._set_ident", "threading._newname", "threading.Thread.__init__", "threading.Thread._set_native_id"], "threading.Thread._set_ident": ["_thread.get_ident"], "threading.Thread._set_native_id": [], "threading.Event.__init__": ["threading.Condition.__init__"], "threading.Condition.__init__": ["_collections.deque", "threading.RLock"], "threading.RLock": ["threading._RLock.__init__", "_thread.RLock"], "threading._RLock.__init__": [], "_collections.deque": [], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "<builtin>.RuntimeError": [], "threading.Thread._set_tstate_lock": [], "threading.Event.set": [], "_threading_local": ["contextlib", "_threading_local.local", "contextlib.contextmanager", "threading", "_threading_local._localimpl", "weakref"], "weakref": ["_weakrefset", "weakref.KeyedRef", "weakref.WeakKeyDictionary", "weakref.finalize", "weakref.WeakMethod", "weakref.WeakValueDictionary"], "weakref.WeakMethod": [], "weakref.WeakValueDictionary": [], "weakref.KeyedRef": [], "weakref.WeakKeyDictionary": [], "weakref.finalize": ["<builtin>.classmethod", "weakref.finalize._Info", "<builtin>.property"], "weakref.finalize._Info": [], "_threading_local._localimpl": [], "_threading_local.local": [], "_bz2": [], "bz2.BZ2File": ["<builtin>.property"], "lzma": ["lzma.LZMAFile", "_lzma", "_compression", "os", "io"], "_lzma": [], "lzma.LZMAFile": ["<builtin>.property"], "grp": [], "shutil.Error": [], "shutil.SameFileError": [], "shutil.SpecialFileError": [], "shutil.ExecError": [], "shutil.ReadError": [], "shutil.RegistryError": [], "shutil._GiveupOnFastCopy": [], "gettext": ["gettext.GNUTranslations", "locale", "re.compile", "ntpath.join", "gettext.NullTranslations", "os", "re", "<builtin>.enumerate", "posixpath.join"], "locale": ["encodings", "re.compile", "<map>.setdefault", "functools", "re", "functools.wraps", "encodings.aliases", "<builtin>.hasattr", "<builtin>.globals", "<builtin>.sorted", "<map>.items"], "encodings.aliases": [], "<map>.setdefault": [], "ntpath.join": ["<builtin>.map", "<builtin>.isinstance", "os._fspath", "ntpath.splitdrive", "genericpath._check_arg_types"], "os._fspath": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.hasattr", "<str>.format", "<builtin>.type"], "<str>.format": [], "ntpath.splitdrive": ["<str>.find", "<str>.replace", "<builtin>.isinstance", "<builtin>.len", "os._fspath"], "genericpath._check_arg_types": ["<builtin>.isinstance", "<builtin>.TypeError"], "posixpath.join": ["os._fspath", "<builtin>.map", "genericpath._check_arg_types", "posixpath._get_sep"], "posixpath._get_sep": ["<builtin>.isinstance"], "gettext.NullTranslations": [], "gettext.GNUTranslations": [], "argparse._AttributeHolder": [], "argparse.HelpFormatter": ["argparse.HelpFormatter._Section"], "argparse.HelpFormatter._Section": [], "argparse.RawDescriptionHelpFormatter": [], "argparse.RawTextHelpFormatter": [], "argparse.ArgumentDefaultsHelpFormatter": [], "argparse.MetavarTypeHelpFormatter": [], "argparse.ArgumentError": [], "argparse.ArgumentTypeError": [], "argparse.Action": [], "argparse._StoreAction": [], "argparse._StoreConstAction": [], "argparse._StoreTrueAction": [], "argparse._StoreFalseAction": [], "argparse._AppendAction": [], "argparse._AppendConstAction": [], "argparse._CountAction": [], "argparse._HelpAction": [], "argparse._VersionAction": [], "argparse._SubParsersAction": ["argparse._SubParsersAction._ChoicesPseudoAction"], "argparse._SubParsersAction._ChoicesPseudoAction": [], "argparse._ExtendAction": [], "argparse.FileType": [], "argparse.Namespace": [], "argparse._ActionsContainer": [], "argparse._ArgumentGroup": [], "argparse._MutuallyExclusiveGroup": [], "argparse.ArgumentParser": [], "sqlparse": ["sqlparse.sql", "sqlparse.formatter", "sqlparse.filters", "sqlparse.cli", "sqlparse.tokens", "sqlparse.engine"], "sqlparse.engine": ["sqlparse.engine.grouping", "sqlparse.engine.filter_stack", "sqlparse.engine.statement_splitter"], "sqlparse.engine.grouping": ["sqlparse.sql", "sqlparse.tokens", "sqlparse.utils.recurse.wrap", "sqlparse.utils", "sqlparse.utils.recurse"], "sqlparse.utils.recurse": [], "sqlparse.utils.recurse.wrap": [], "sqlparse.engine.filter_stack": ["sqlparse.engine.grouping", "sqlparse.lexer", "sqlparse.engine.filter_stack.FilterStack", "sqlparse.engine.statement_splitter"], "sqlparse.engine.statement_splitter": ["sqlparse.tokens", "sqlparse.sql", "sqlparse.engine.statement_splitter.StatementSplitter"], "sqlparse.engine.statement_splitter.StatementSplitter": [], "sqlparse.engine.filter_stack.FilterStack": [], "sqlparse.__main__": ["sqlparse.cli.main", "sqlparse.cli"], "sqlparse.cli.main": ["sqlparse.cli.create_parser", "<builtin>.open", "sqlparse.formatter.validate_options", "<builtin>.vars", "sqlparse.format", "argparse.ArgumentParser.parse_args", "_io.TextIOWrapper", "sqlparse.cli._error"], "sqlparse.cli.create_parser": ["argparse._ActionsContainer.add_argument", "argparse._ActionsContainer.add_argument_group", "argparse.ArgumentParser.__init__"], "argparse.ArgumentParser.__init__": ["<builtin>.super", "gettext.gettext", "posixpath.basename", "argparse._ActionsContainer.add_argument", "ntpath.basename", "argparse._ActionsContainer._add_container_actions", "argparse._ActionsContainer.register", "argparse._ActionsContainer.add_argument_group"], "ntpath.basename": ["ntpath.split"], "ntpath.split": ["os._fspath", "ntpath._get_bothseps", "ntpath.splitdrive", "<builtin>.len"], "ntpath._get_bothseps": ["<builtin>.isinstance"], "posixpath.basename": ["os._fspath", "posixpath._get_sep"], "gettext.gettext": ["gettext.dgettext"], "gettext.dgettext": ["<map>.get", "gettext.NullTranslations.gettext", "gettext.translation"], "gettext.translation": ["warnings.catch_warnings.__init__", "ntpath.abspath", "gettext.NullTranslations.__init__", "<map>.get", "<map>.setdefault", "warnings", "<builtin>.open", "warnings.warn", "copy", "gettext.find", "copy.copy", "posixpath.abspath", "<builtin>.FileNotFoundError"], "gettext.find": ["ntpath.join", "<list>.append", "posixpath.join", "genericpath.exists", "gettext._expand_lang"], "gettext._expand_lang": ["locale.normalize", "<list>.append", "<list>.reverse", "<builtin>.range"], "locale.normalize": ["<map>.get", "<str>.replace", "locale._append_modifier", "locale._replace_encoding"], "locale._append_modifier": ["locale._replace_encoding"], "locale._replace_encoding": ["encodings.normalize_encoding", "<map>.get", "<str>.replace", "<str>.lower"], "encodings.normalize_encoding": ["<builtin>.str", "<builtin>.isinstance", "<list>.append"], "<str>.lower": [], "<list>.reverse": [], "genericpath.exists": [], "gettext.NullTranslations.__init__": ["gettext.NullTranslations._parse"], "gettext.NullTranslations._parse": [], "<builtin>.FileNotFoundError": [], "ntpath.abspath": [], "posixpath.abspath": ["<builtin>.isinstance", "posixpath.isabs", "posixpath.join", "os._fspath", "posixpath.normpath"], "posixpath.isabs": ["os._fspath", "<str>.startswith", "posixpath._get_sep"], "posixpath.normpath": ["<list>.pop", "<builtin>.isinstance", "<list>.append", "os._fspath", "<str>.split", "<str>.startswith"], "<list>.pop": [], "<builtin>.open": [], "copy": ["types", "copyreg", "copy.Error", "<builtin>.getattr", "weakref", "<builtin>.type"], "copy.Error": [], "copy.copy": ["copy._copy_immutable", "<map>.get", "<builtin>.isinstance", "<builtin>.issubclass", "<builtin>.getattr", "copy._reconstruct", "<builtin>.type", "<map>"], "<map>": [], "copy._copy_immutable": [], "copy._reconstruct": ["copy.deepcopy", "<builtin>.id", "<builtin>.setattr", "<builtin>.isinstance", "<builtin>.len", "<builtin>.hasattr"], "copy.deepcopy": ["copy._keep_alive", "<builtin>.id", "copy._deepcopy_atomic", "<map>.get", "<builtin>.isinstance", "<builtin>.getattr", "<builtin>.issubclass", "copy._reconstruct", "<builtin>.type", "<map>"], "<builtin>.id": [], "copy._deepcopy_atomic": [], "copy._keep_alive": ["<builtin>.id"], "<builtin>.setattr": [], "warnings.warn": ["warnings.warn_explicit", "<builtin>.range", "<builtin>.isinstance", "<builtin>.TypeError", "warnings._is_internal_frame", "<builtin>.issubclass", "warnings._next_external_frame", "<builtin>.type"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["<builtin>.str", "<map>.get", "<builtin>.isinstance", "<builtin>.RuntimeError", "<builtin>.issubclass", "<builtin>.int", "warnings._showwarnmsg", "<map>.clear", "warnings.WarningMessage.__init__", "linecache.getlines", "linecache"], "<map>.clear": [], "linecache.getlines": ["linecache.clearcache", "linecache.updatecache", "<builtin>.len"], "linecache.updatecache": ["tokenize.open", "linecache.lazycache", "ntpath.join", "posixpath.isabs", "<builtin>.len", "posixpath.join", "<str>.endswith", "<str>.startswith", "ntpath.isabs"], "<str>.startswith": [], "<str>.endswith": [], "linecache.lazycache": ["<str>.endswith", "<builtin>.len", "<str>.startswith", "<builtin>.getattr"], "ntpath.isabs": ["ntpath._get_bothseps", "<builtin>.isinstance", "<str>.replace", "<builtin>.len", "os._fspath", "ntpath.splitdrive", "<str>.startswith"], "<str>.find": [], "tokenize.open": ["builtins.open", "_io.TextIOWrapper", "tokenize.detect_encoding"], "builtins.open": [], "tokenize.detect_encoding": ["tokenize.detect_encoding.find_cookie", "tokenize.detect_encoding.read_or_stop"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "_io.TextIOWrapper": [], "linecache.clearcache": [], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["<str>.strip", "tracemalloc", "linecache.getline", "linecache"], "linecache.getline": ["<builtin>.len", "linecache.getlines"], "tracemalloc": ["fnmatch", "posixpath", "pickle", "tracemalloc.Statistic", "tracemalloc.Trace", "functools", "tracemalloc._Traces", "tracemalloc.Traceback", "linecache", "tracemalloc.StatisticDiff", "tracemalloc.Frame", "tracemalloc.BaseFilter", "tracemalloc.Filter", "tracemalloc.Snapshot", "tracemalloc.DomainFilter", "collections.abc"], "collections.abc": ["collections.abc"], "pickle": ["pickle._Unpickler", "pickle._Stop", "<list>.append", "pickle._Pickler", "struct", "_compat_pickle", "codecs", "pickle.UnpicklingError", "<list>.extend", "io", "types", "pickle._Framer", "pickle.PickleError", "pickle._Unframer", "copyreg", "functools", "_pickle", "re", "pickle.PicklingError"], "struct": ["_struct"], "_struct": [], "_compat_pickle": ["<builtin>.dict", "<map>.update", "<builtin>.len", "<map>.items"], "<map>.update": [], "_pickle": [], "pickle.PickleError": [], "pickle.PicklingError": [], "pickle.UnpicklingError": [], "pickle._Stop": [], "pickle._Framer": [], "pickle._Unframer": [], "pickle._Pickler": ["<builtin>.type"], "pickle._Unpickler": [], "tracemalloc.Statistic": [], "tracemalloc.StatisticDiff": [], "tracemalloc.Frame": ["<builtin>.property"], "tracemalloc.Traceback": [], "tracemalloc.Trace": ["<builtin>.property"], "tracemalloc._Traces": [], "tracemalloc.BaseFilter": [], "tracemalloc.Filter": ["<builtin>.property"], "tracemalloc.DomainFilter": ["<builtin>.property"], "tracemalloc.Snapshot": ["<builtin>.staticmethod"], "warnings.catch_warnings.__init__": [], "gettext.NullTranslations.gettext": [], "argparse._ActionsContainer.add_argument_group": ["argparse._ArgumentGroup.__init__"], "argparse._ArgumentGroup.__init__": ["<builtin>.super"], "argparse._ActionsContainer.register": [], "argparse._ActionsContainer.add_argument": ["<builtin>.ValueError", "argparse._ActionsContainer._pop_action_class", "argparse._ActionsContainer._registry_get", "argparse._ActionsContainer._add_action", "argparse._ActionsContainer._get_positional_kwargs", "argparse._ActionsContainer._get_optional_kwargs", "<builtin>.len", "argparse.ArgumentParser._get_formatter", "<builtin>.callable", "<builtin>.hasattr", "argparse.ArgumentParser._add_action"], "argparse._ActionsContainer._get_optional_kwargs": ["<builtin>.ValueError", "gettext.gettext", "<builtin>.len", "<builtin>.dict", "<list>.append"], "argparse._ActionsContainer._get_positional_kwargs": ["<builtin>.dict", "gettext.gettext", "<builtin>.TypeError"], "argparse._ActionsContainer._pop_action_class": ["argparse._ActionsContainer._registry_get"], "argparse._ActionsContainer._registry_get": [], "argparse.ArgumentParser._get_formatter": [], "argparse._ActionsContainer._add_action": ["argparse._ActionsContainer._check_conflict"], "argparse._ActionsContainer._check_conflict": ["argparse._ActionsContainer._get_handler", "<list>.append"], "argparse._ActionsContainer._get_handler": ["<builtin>.ValueError", "gettext.gettext", "<builtin>.getattr"], "argparse.ArgumentParser._add_action": [], "argparse._ActionsContainer._add_container_actions": ["<builtin>.ValueError", "gettext.gettext", "<map>.get", "argparse._ActionsContainer.add_mutually_exclusive_group", "argparse._ActionsContainer.add_argument_group"], "argparse._ActionsContainer.add_mutually_exclusive_group": ["argparse._MutuallyExclusiveGroup.__init__"], "argparse._MutuallyExclusiveGroup.__init__": ["<builtin>.super"], "argparse.ArgumentParser.parse_args": ["argparse.ArgumentParser.parse_known_args", "argparse.ArgumentParser.error", "gettext.gettext"], "argparse.ArgumentParser.parse_known_args": ["<builtin>.setattr", "<builtin>.list", "argparse.Namespace.__init__", "argparse.ArgumentParser._parse_known_args", "<builtin>.str", "argparse.ArgumentParser.error", "<builtin>.getattr", "<list>.extend", "<builtin>.delattr", "<builtin>.hasattr"], "argparse.Namespace.__init__": ["<builtin>.setattr"], "argparse.ArgumentParser._parse_known_args": ["<builtin>.min", "argparse.ArgumentParser.error", "argparse.ArgumentParser._read_args_from_files", "<builtin>.getattr", "<list>.append", "<builtin>.set", "<builtin>.max", "argparse.ArgumentParser._parse_known_args.consume_optional", "<builtin>.iter", "<builtin>.hasattr", "gettext.gettext", "<builtin>.setattr", "<list>.extend", "argparse.ArgumentParser._parse_optional", "<map>.setdefault", "<builtin>.enumerate", "argparse.ArgumentParser._get_value", "<builtin>.isinstance", "argparse.ArgumentParser._get_positional_actions", "argparse.ArgumentParser._parse_known_args.consume_positionals"], "argparse.ArgumentParser._read_args_from_files": ["<builtin>.str", "argparse.ArgumentParser.error", "argparse.ArgumentParser._read_args_from_files", "<builtin>.open", "<list>.append", "<list>.extend", "argparse.ArgumentParser.convert_arg_line_to_args"], "argparse.ArgumentParser.convert_arg_line_to_args": [], "argparse.ArgumentParser.error": ["argparse.ArgumentParser.print_usage", "argparse.ArgumentParser.exit", "gettext.gettext"], "argparse.ArgumentParser.print_usage": ["argparse.ArgumentParser.format_usage", "argparse.ArgumentParser._print_message"], "argparse.ArgumentParser.format_usage": ["argparse.ArgumentParser._get_formatter"], "argparse.ArgumentParser._print_message": [], "argparse.ArgumentParser.exit": ["argparse.ArgumentParser._print_message"], "argparse.ArgumentParser._parse_optional": ["argparse.ArgumentParser._get_option_tuples", "argparse.ArgumentParser.error", "<builtin>.len", "gettext.gettext"], "argparse.ArgumentParser._get_option_tuples": ["argparse.ArgumentParser.error", "<list>.append", "gettext.gettext"], "argparse.ArgumentParser._get_positional_actions": [], "argparse.ArgumentParser._parse_known_args.consume_positionals": ["argparse.ArgumentParser._match_arguments_partial", "argparse.ArgumentParser._parse_known_args.take_action", "<builtin>.zip", "<builtin>.len"], "argparse.ArgumentParser._match_arguments_partial": ["<builtin>.len", "<list>.extend", "argparse.ArgumentParser._get_nargs_pattern", "<builtin>.range", "re.match"], "argparse.ArgumentParser._get_nargs_pattern": ["<str>.replace"], "re.match": ["re._compile"], "argparse.ArgumentParser._parse_known_args.take_action": ["argparse.ArgumentParser._get_values", "gettext.gettext", "<map>.get", "argparse.ArgumentError.__init__", "argparse._get_action_name"], "argparse.ArgumentParser._get_values": ["<list>.remove", "<builtin>.isinstance", "<builtin>.len", "argparse.ArgumentParser._check_value", "argparse.ArgumentParser._get_value"], "argparse.ArgumentParser._get_value": ["argparse._ActionsContainer._registry_get", "gettext.gettext", "<builtin>.str", "<builtin>.getattr", "argparse.ArgumentError.__init__", "<builtin>.repr", "<builtin>.callable"], "argparse.ArgumentError.__init__": ["argparse._get_action_name"], "argparse._get_action_name": [], "argparse.ArgumentParser._check_value": ["argparse.ArgumentError.__init__", "<builtin>.map", "gettext.gettext"], "argparse.ArgumentParser._parse_known_args.consume_optional": ["argparse.ArgumentParser._match_argument", "gettext.gettext", "argparse.ArgumentError.__init__", "<list>.append", "argparse.ArgumentParser._parse_known_args.take_action"], "argparse.ArgumentParser._match_argument": ["gettext.gettext", "<map>.get", "<builtin>.len", "argparse.ArgumentError.__init__", "argparse.ArgumentParser._get_nargs_pattern", "gettext.ngettext", "re.match"], "gettext.ngettext": ["gettext.dngettext"], "gettext.dngettext": ["<map>.get", "gettext.NullTranslations.ngettext", "gettext.translation"], "gettext.NullTranslations.ngettext": [], "<builtin>.delattr": [], "sqlparse.cli._error": [], "<builtin>.vars": [], "sqlparse.formatter.validate_options": ["<builtin>.int"], "sqlparse.format": ["sqlparse.engine.filter_stack.FilterStack.__init__", "sqlparse.formatter.validate_options", "<list>.append", "sqlparse.engine.filter_stack.FilterStack.run", "sqlparse.formatter.build_filter_stack"], "sqlparse.engine.filter_stack.FilterStack.__init__": [], "sqlparse.formatter.build_filter_stack": ["<list>.append", "sqlparse.engine.filter_stack.FilterStack.enable_grouping"], "sqlparse.engine.filter_stack.FilterStack.enable_grouping": [], "sqlparse.engine.filter_stack.FilterStack.run": ["sqlparse.engine.statement_splitter.StatementSplitter.__init__", "sqlparse.engine.grouping.group", "sqlparse.lexer.tokenize", "sqlparse.engine.statement_splitter.StatementSplitter.process"], "sqlparse.lexer.tokenize": ["sqlparse.lexer.Lexer.get_tokens"], "sqlparse.lexer.Lexer.get_tokens": ["<builtin>.isinstance", "<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.callable", "sqlparse.utils.consume", "<builtin>.type"], "sqlparse.utils.consume": ["_collections.deque"], "sqlparse.engine.statement_splitter.StatementSplitter.__init__": ["sqlparse.engine.statement_splitter.StatementSplitter._reset"], "sqlparse.engine.statement_splitter.StatementSplitter._reset": [], "sqlparse.engine.statement_splitter.StatementSplitter.process": ["<list>.append", "sqlparse.engine.statement_splitter.StatementSplitter._reset", "sqlparse.engine.statement_splitter.StatementSplitter._change_splitlevel", "<builtin>.all"], "sqlparse.engine.statement_splitter.StatementSplitter._change_splitlevel": ["<builtin>.max"], "<builtin>.all": [], "sqlparse.engine.grouping.group": [], "sqlparse.engine.grouping._group": ["<builtin>.list", "sqlparse.engine.grouping.group_comparison.post", "sqlparse.engine.grouping.group_arrays.match", "sqlparse.engine.grouping.group_arrays.valid_next", "sqlparse.engine.grouping.group_typed_literal.match", "sqlparse.engine.grouping.group_operator.valid", "sqlparse.engine.grouping.group_typecasts.post", "sqlparse.engine.grouping.group_typed_literal.post", "sqlparse.engine.grouping.group_typed_literal.match_to_extend", "sqlparse.engine.grouping.group_comparison.match", "sqlparse.engine.grouping.group_typecasts.valid", "sqlparse.engine.grouping.group_typed_literal.valid_prev", "sqlparse.engine.grouping.group_operator.post", "sqlparse.engine.grouping.group_comparison.valid", "sqlparse.engine.grouping.group_period.post", "sqlparse.engine.grouping.group_tzcasts.post", "sqlparse.engine.grouping.<lambda2>", "sqlparse.engine.grouping.group_assignment.match", "sqlparse.engine.grouping.group_identifier_list.match", "sqlparse.engine.grouping.group_period.match", "sqlparse.engine.grouping.group_as.match", "sqlparse.engine.grouping.group_typed_literal.valid_final", "sqlparse.engine.grouping.<lambda1>", "sqlparse.engine.grouping._group", "sqlparse.engine.grouping.group_tzcasts.match", "sqlparse.engine.grouping.group_arrays.post", "sqlparse.engine.grouping.group_as.valid_prev", "<builtin>.enumerate", "sqlparse.engine.grouping.group_identifier_list.valid", "sqlparse.engine.grouping.group_period.valid_prev", "sqlparse.engine.grouping.group_tzcasts.valid_next", "sqlparse.engine.grouping.group_as.post", "sqlparse.engine.grouping.group_tzcasts.valid_prev", "sqlparse.engine.grouping.group_operator.match", "<builtin>.isinstance", "sqlparse.engine.grouping.group_arrays.valid_prev", "sqlparse.engine.grouping.group_assignment.valid", "sqlparse.engine.grouping.group_typecasts.match", "sqlparse.engine.grouping.group_as.valid_next", "sqlparse.engine.grouping.group_period.valid_next", "sqlparse.engine.grouping.group_assignment.post", "sqlparse.engine.grouping.group_typed_literal.valid_next", "sqlparse.engine.grouping.group_identifier_list.post"], "sqlparse.engine.grouping.<lambda1>": [], "sqlparse.engine.grouping.<lambda2>": [], "sqlparse.engine.grouping._group_matching": ["<list>.pop", "<builtin>.list", "<builtin>.isinstance", "sqlparse.engine.grouping._group_matching", "<list>.append", "<builtin>.enumerate"], "sqlparse.engine.grouping.align_comments": ["<builtin>.isinstance"], "sqlparse.engine.grouping.group_aliased": ["<builtin>.isinstance"], "sqlparse.engine.grouping.group_arrays": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_arrays.match": ["<builtin>.isinstance"], "sqlparse.engine.grouping.group_arrays.valid_prev": ["sqlparse.utils.imt"], "sqlparse.utils.imt": ["<builtin>.any", "<builtin>.isinstance"], "sqlparse.engine.grouping.group_arrays.valid_next": [], "sqlparse.engine.grouping.group_arrays.post": [], "sqlparse.engine.grouping.group_as": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_as.match": [], "sqlparse.engine.grouping.group_as.valid_prev": [], "sqlparse.engine.grouping.group_as.valid_next": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_as.post": [], "sqlparse.engine.grouping.group_assignment": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_assignment.match": [], "sqlparse.engine.grouping.group_assignment.valid": [], "sqlparse.engine.grouping.group_assignment.post": [], "sqlparse.engine.grouping.group_begin": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_brackets": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_case": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_comparison": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_comparison.match": [], "sqlparse.engine.grouping.group_comparison.valid": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_comparison.post": [], "sqlparse.engine.grouping.group_for": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_functions": ["<builtin>.isinstance"], "sqlparse.engine.grouping.group_identifier_list": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_identifier_list.match": [], "sqlparse.engine.grouping.group_identifier_list.valid": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_identifier_list.post": [], "sqlparse.engine.grouping.group_if": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_operator": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_operator.match": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_operator.valid": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_operator.post": [], "sqlparse.engine.grouping.group_order": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_parenthesis": ["sqlparse.engine.grouping._group_matching"], "sqlparse.engine.grouping.group_period": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_period.match": [], "sqlparse.engine.grouping.group_period.valid_prev": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_period.valid_next": [], "sqlparse.engine.grouping.group_period.post": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_typecasts": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_typecasts.match": [], "sqlparse.engine.grouping.group_typecasts.valid": [], "sqlparse.engine.grouping.group_typecasts.post": [], "sqlparse.engine.grouping.group_typed_literal": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_typed_literal.match": ["sqlparse.utils.imt"], "sqlparse.engine.grouping.group_typed_literal.valid_prev": [], "sqlparse.engine.grouping.group_typed_literal.valid_next": [], "sqlparse.engine.grouping.group_typed_literal.post": [], "sqlparse.engine.grouping.group_typed_literal.match_to_extend": ["<builtin>.isinstance"], "sqlparse.engine.grouping.group_typed_literal.valid_final": [], "sqlparse.engine.grouping.group_tzcasts": ["sqlparse.engine.grouping._group"], "sqlparse.engine.grouping.group_tzcasts.match": [], "sqlparse.engine.grouping.group_tzcasts.valid_prev": [], "sqlparse.engine.grouping.group_tzcasts.valid_next": [], "sqlparse.engine.grouping.group_tzcasts.post": [], "sqlparse.engine.grouping.group_values": ["<builtin>.isinstance"], "sqlparse.filters.aligned_indent.AlignedIndentFilter.__init__": ["<builtin>.len"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._next_token": ["sqlparse.filters.aligned_indent.AlignedIndentFilter._next_token"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process": ["<str>.lower", "<builtin>.type", "<builtin>.getattr"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_case": ["<builtin>.map", "<builtin>.str", "<builtin>.len", "<builtin>.max", "sqlparse.sql.Token.__init__", "<builtin>.enumerate", "sqlparse.filters.aligned_indent.AlignedIndentFilter.nl"], "sqlparse.filters.aligned_indent.AlignedIndentFilter.nl": ["<builtin>.isinstance", "<builtin>.len", "sqlparse.sql.Token.__init__"], "sqlparse.sql.Token.__init__": ["<builtin>.str", "<str>.upper"], "<str>.upper": [], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_default": ["sqlparse.filters.aligned_indent.AlignedIndentFilter._split_kwds"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._split_kwds": ["<builtin>.str", "sqlparse.filters.aligned_indent.AlignedIndentFilter._next_token", "sqlparse.filters.aligned_indent.AlignedIndentFilter.nl"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_identifierlist": ["<builtin>.list", "sqlparse.filters.aligned_indent.AlignedIndentFilter.nl", "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_default"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_parenthesis": ["sqlparse.filters.aligned_indent.AlignedIndentFilter.nl"], "sqlparse.filters.aligned_indent.AlignedIndentFilter._process_statement": ["<builtin>.len", "sqlparse.sql.TokenList.__init__", "sqlparse.filters.aligned_indent.AlignedIndentFilter._process"], "sqlparse.sql.TokenList.__init__": ["<builtin>.str", "<builtin>.super", "<builtin>.setattr"], "sqlparse.filters.aligned_indent.AlignedIndentFilter.process": ["sqlparse.filters.aligned_indent.AlignedIndentFilter._process"], "sqlparse.filters.others.SerializerUnicode.process": ["sqlparse.utils.split_unquoted_newlines"], "sqlparse.utils.split_unquoted_newlines": ["<builtin>.str", "<str>.split", "<list>.append"], "sqlparse.filters.others.SpacesAroundOperatorsFilter._process": ["sqlparse.sql.Token.__init__"], "sqlparse.filters.others.SpacesAroundOperatorsFilter.process": ["sqlparse.filters.others.SpacesAroundOperatorsFilter.process", "sqlparse.filters.others.SpacesAroundOperatorsFilter._process"], "sqlparse.filters.others.StripCommentsFilter._process": ["sqlparse.filters.others.StripCommentsFilter._process._get_insert_token", "sqlparse.filters.others.StripCommentsFilter._process.get_next_comment"], "sqlparse.filters.others.StripCommentsFilter._process.get_next_comment": [], "sqlparse.filters.others.StripCommentsFilter._process._get_insert_token": ["re.search", "sqlparse.sql.Token.__init__"], "re.search": ["re._compile"], "sqlparse.filters.others.StripCommentsFilter.process": ["sqlparse.filters.others.StripCommentsFilter.process", "sqlparse.filters.others.StripCommentsFilter._process"], "sqlparse.filters.others.StripWhitespaceFilter._stripws": ["<str>.lower", "<builtin>.type", "<builtin>.getattr"], "sqlparse.filters.others.StripWhitespaceFilter._stripws_identifierlist": ["<builtin>.list", "sqlparse.filters.others.StripWhitespaceFilter._stripws_default"], "sqlparse.filters.others.StripWhitespaceFilter._stripws_default": [], "sqlparse.filters.others.StripWhitespaceFilter._stripws_parenthesis": ["sqlparse.filters.others.StripWhitespaceFilter._stripws_default"], "sqlparse.filters.others.StripWhitespaceFilter.process": ["sqlparse.filters.others.StripWhitespaceFilter._stripws", "sqlparse.filters.others.StripWhitespaceFilter.process"], "sqlparse.filters.output.OutputFilter.process": ["<builtin>.str", "sqlparse.filters.output.OutputFilter._process", "<builtin>.len"], "sqlparse.filters.output.OutputFilter._process": [], "sqlparse.filters.output.OutputPHPFilter._process": ["sqlparse.sql.Token.__init__"], "sqlparse.filters.output.OutputPythonFilter._process": ["<builtin>.len", "sqlparse.sql.Token.__init__"], "sqlparse.filters.reindent.ReindentFilter._flatten_up_to_token": ["<builtin>.next"], "sqlparse.filters.reindent.ReindentFilter._get_offset": ["sqlparse.filters.reindent.ReindentFilter._flatten_up_to_token", "<builtin>.map", "<builtin>.len"], "sqlparse.filters.reindent.ReindentFilter._next_token": ["sqlparse.filters.reindent.ReindentFilter._next_token"], "sqlparse.filters.reindent.ReindentFilter._process": ["<str>.lower", "<builtin>.type", "<builtin>.getattr"], "sqlparse.filters.reindent.ReindentFilter._process_case": ["<builtin>.iter", "sqlparse.filters.reindent.ReindentFilter._get_offset", "<builtin>.next"], "sqlparse.filters.reindent.ReindentFilter._process_default": ["sqlparse.filters.reindent.ReindentFilter._process", "sqlparse.filters.reindent.ReindentFilter._split_statements", "sqlparse.filters.reindent.ReindentFilter._split_kwds"], "sqlparse.filters.reindent.ReindentFilter._split_statements": ["sqlparse.filters.reindent.ReindentFilter.nl"], "sqlparse.filters.reindent.ReindentFilter.nl": ["sqlparse.sql.Token.__init__", "<builtin>.max"], "sqlparse.filters.reindent.ReindentFilter._split_kwds": ["<builtin>.str", "sqlparse.filters.reindent.ReindentFilter.nl", "sqlparse.filters.reindent.ReindentFilter._next_token"], "sqlparse.filters.reindent.ReindentFilter._process_function": ["sqlparse.filters.reindent.ReindentFilter._process_default"], "sqlparse.filters.reindent.ReindentFilter._process_identifierlist": ["sqlparse.filters.reindent.ReindentFilter._get_offset", "<builtin>.list", "<builtin>.len", "<builtin>.sum", "sqlparse.sql.Token.__init__", "sqlparse.filters.reindent.ReindentFilter._process_default", "<builtin>.next"], "<builtin>.sum": [], "sqlparse.filters.reindent.ReindentFilter._process_values": ["sqlparse.filters.reindent.ReindentFilter._get_offset", "sqlparse.filters.reindent.ReindentFilter.nl"], "sqlparse.filters.reindent.ReindentFilter._process_where": ["sqlparse.filters.reindent.ReindentFilter.nl"], "sqlparse.filters.reindent.ReindentFilter.process": ["sqlparse.filters.reindent.ReindentFilter._process", "<builtin>.str", "sqlparse.sql.Token.__init__"], "sqlparse.filters.right_margin.RightMarginFilter._process": ["<builtin>.str", "<builtin>.len", "re.search", "sqlparse.sql.Token.__init__", "sqlparse.filters.right_margin.RightMarginFilter._process", "<builtin>.type"], "sqlparse.filters.tokens.TruncateStringFilter.process": ["<builtin>.len"], "sqlparse.filters.tokens._CaseFilter.__init__": ["<builtin>.getattr"]}