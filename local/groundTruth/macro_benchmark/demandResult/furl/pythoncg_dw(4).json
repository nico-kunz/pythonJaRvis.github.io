{"furl": ["furl.__version__", "furl.furl", "<builtin>.dict", "<builtin>.globals"], "furl.furl": ["furl.furl.FragmentPathCompositionInterface", "furl.omdict1D", "furl.furl.furl", "furl.furl.static_vars", "furl.furl.static_vars.decorator", "re", "furl.furl.Path", "warnings", "six", "furl.furl.URLPathCompositionInterface", "furl.furl.Query", "re.compile", "copy", "furl.furl.QueryCompositionInterface", "furl.furl.PathCompositionInterface", "furl.common", "furl.compat", "re.escape", "abc", "posixpath", "furl.furl.FragmentCompositionInterface", "furl.furl.Fragment"], "re": ["functools.lru_cache.decorating_function", "re.Scanner", "<builtin>.globals", "sre_parse", "sre_compile.compile", "<builtin>.type", "enum", "sre_compile", "copyreg.pickle", "functools.lru_cache", "functools._lru_cache_wrapper.wrapper", "functools", "copyreg", "re.RegexFlag", "<builtin>.chr"], "enum": ["enum.Enum", "enum.IntFlag", "enum.auto", "enum.IntEnum", "enum.Flag", "<builtin>.object", "enum._EnumDict", "types", "enum.EnumMeta"], "types": ["types._C", "<builtin>.type", "types._cell_factory", "types._GeneratorWrapper", "<builtin>.globals", "types._ag", "types.DynamicClassAttribute", "types._g", "<builtin>.object", "types._c"], "<builtin>.type": [], "types._cell_factory": [], "types._g": [], "types._c": [], "types._ag": [], "types._C": [], "<builtin>.object": [], "types.DynamicClassAttribute": [], "types._GeneratorWrapper": ["<builtin>.property"], "<builtin>.property": [], "<builtin>.globals": [], "enum.auto": [], "enum._EnumDict": [], "enum.EnumMeta": ["<builtin>.property", "<builtin>.classmethod", "<builtin>.staticmethod"], "<builtin>.classmethod": [], "<builtin>.staticmethod": [], "enum.Enum": ["types.DynamicClassAttribute.__init__", "<builtin>.classmethod"], "types.DynamicClassAttribute.__init__": ["<builtin>.bool", "<builtin>.getattr"], "<builtin>.getattr": [], "<builtin>.bool": [], "enum.IntEnum": [], "enum.Flag": ["<builtin>.classmethod"], "enum.IntFlag": ["<builtin>.classmethod"], "sre_compile": ["<builtin>.tuple", "sre_parse", "sre_constants"], "sre_parse": ["<builtin>.frozenset", "sre_constants", "sre_parse.Verbose", "sre_parse.SubPattern", "sre_parse.Tokenizer", "sre_parse.State", "<builtin>.ord"], "sre_constants": ["sre_constants.error", "sre_constants._NamedIntConstant", "sre_constants._makecodes"], "sre_constants.error": [], "sre_constants._NamedIntConstant": [], "sre_constants._makecodes": ["<str>.split", "<builtin>.globals", "<builtin>.enumerate", "<str>.strip"], "<str>.strip": [], "<str>.split": [], "<builtin>.enumerate": [], "<builtin>.frozenset": [], "<builtin>.ord": [], "sre_parse.Verbose": [], "sre_parse.State": ["<builtin>.property"], "sre_parse.SubPattern": [], "sre_parse.Tokenizer": ["<builtin>.property"], "<builtin>.tuple": [], "functools": ["collections", "functools.cached_property", "reprlib", "functools.singledispatchmethod", "<builtin>.object", "collections.namedtuple", "functools.partial", "functools.partialmethod", "functools._HashedSeq", "abc"], "abc": ["abc.ABC", "abc.abstractproperty", "_py_abc", "abc.abstractstaticmethod", "abc.abstractclassmethod"], "abc.abstractclassmethod": [], "abc.abstractstaticmethod": [], "abc.abstractproperty": [], "_py_abc": ["_py_abc.ABCMeta", "_weakrefset"], "_weakrefset": ["_weakrefset._IterationGuard", "_weakrefset.WeakSet"], "_weakrefset._IterationGuard": [], "_weakrefset.WeakSet": [], "_py_abc.ABCMeta": [], "abc.ABC": [], "collections": ["operator", "collections.UserList", "collections.UserDict", "collections._OrderedDictKeysView", "keyword", "reprlib", "collections._OrderedDictValuesView", "collections.ChainMap", "collections._OrderedDictItemsView", "collections.UserString", "collections.Counter", "collections._Link", "heapq", "collections.OrderedDict"], "operator": ["operator.attrgetter", "operator.itemgetter", "operator.methodcaller"], "operator.attrgetter": [], "operator.itemgetter": [], "operator.methodcaller": [], "keyword": ["<builtin>.frozenset"], "heapq": ["_heapq"], "_heapq": [], "reprlib": ["reprlib.Repr", "reprlib.Repr.__init__"], "reprlib.Repr": [], "reprlib.Repr.__init__": [], "collections._OrderedDictKeysView": [], "collections._OrderedDictItemsView": [], "collections._OrderedDictValuesView": [], "collections._Link": [], "collections.OrderedDict": ["reprlib.recursive_repr", "<builtin>.classmethod", "reprlib.recursive_repr.decorating_function", "<builtin>.object"], "reprlib.recursive_repr": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.getattr", "<builtin>.set"], "<builtin>.set": [], "collections.Counter": ["<builtin>.classmethod"], "collections.ChainMap": ["<builtin>.property", "<builtin>.classmethod", "reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "collections.UserDict": ["<builtin>.classmethod"], "collections.UserList": [], "collections.UserString": [], "functools.partial": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "functools.partialmethod": ["<builtin>.property"], "collections.namedtuple": ["<str>.split", "<builtin>.type", "<builtin>.ValueError", "<str>.replace", "<str>.join", "<builtin>.TypeError", "<builtin>.enumerate", "<builtin>.repr", "<builtin>.zip", "<builtin>.list", "<builtin>.isinstance", "<builtin>.set", "<builtin>.str", "<builtin>.reversed", "<builtin>.classmethod", "<builtin>.len", "<builtin>.map", "<builtin>.exec", "_collections._tuplegetter", "<builtin>.tuple", "collections.<lambda1>", "<builtin>.dict"], "<builtin>.isinstance": [], "<builtin>.map": [], "<builtin>.list": [], "<builtin>.str": [], "<builtin>.TypeError": [], "<builtin>.ValueError": [], "<builtin>.len": [], "<builtin>.reversed": [], "<builtin>.zip": [], "<builtin>.dict": [], "<builtin>.repr": [], "<str>.join": [], "<builtin>.exec": [], "collections.<lambda1>": ["operator.itemgetter.__init__", "<builtin>.property"], "operator.itemgetter.__init__": [], "_collections._tuplegetter": [], "functools._HashedSeq": [], "functools.singledispatchmethod": ["<builtin>.property"], "functools.cached_property": [], "re.RegexFlag": [], "<builtin>.chr": [], "sre_compile.compile": ["sre_compile.dis", "sre_parse.parse", "sre_compile._code", "<builtin>.tuple", "sre_compile.isstring", "<builtin>.print", "<map>.items"], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_parse.parse": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.__init__", "sre_parse.State.__init__", "sre_parse._parse_sub", "sre_parse.fix_flags", "sre_parse.Tokenizer.seek", "sre_parse.SubPattern.dump"], "sre_parse.Tokenizer.__init__": ["sre_parse.Tokenizer.__next", "<builtin>.str", "<builtin>.isinstance"], "sre_parse.Tokenizer.__next": ["<builtin>.len", "sre_parse.Tokenizer.error"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.error", "sre_parse.Tokenizer.tell"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["<builtin>.len", "<list>.extend", "sre_parse.Tokenizer.tell", "sre_parse.SubPattern.append", "<list>", "<list>.append", "sre_parse.Tokenizer.match", "sre_parse.SubPattern.__init__"], "<list>": [], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "<list>.extend": [], "<list>.append": [], "sre_parse.SubPattern.append": ["<list>.append"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "sre_parse.fix_flags": ["<builtin>.ValueError", "<builtin>.isinstance"], "sre_parse.SubPattern.dump": ["<builtin>.print", "<builtin>.enumerate", "<builtin>.str", "<builtin>.isinstance"], "<builtin>.print": [], "sre_compile._code": ["<list>.append", "sre_compile._compile_info", "sre_compile._compile"], "sre_compile._compile_info": ["sre_compile._get_charset_prefix", "<builtin>.len", "<list>.extend", "sre_parse.SubPattern.getwidth", "sre_compile._get_literal_prefix", "<list>", "sre_compile._optimize_charset", "sre_compile._compile_charset"], "sre_parse.SubPattern.getwidth": ["<builtin>.max", "<builtin>.min"], "<builtin>.min": [], "<builtin>.max": [], "sre_compile._get_literal_prefix": ["<builtin>.len", "<list>.extend", "sre_compile._get_literal_prefix", "sre_compile._combine_flags", "<list>", "sre_compile._get_iscased"], "sre_compile._get_iscased": [], "sre_compile._combine_flags": [], "sre_compile._get_charset_prefix": ["<builtin>.map", "<builtin>.any", "sre_compile._combine_flags", "<list>", "sre_compile._get_iscased", "<builtin>.range"], "<builtin>.range": [], "<builtin>.any": [], "sre_compile._optimize_charset": ["<builtin>.len", "<builtin>.map", "<builtin>.any", "<builtin>.bytearray", "sre_compile._bytes_to_codes", "<list>.append", "<builtin>.bytes", "<builtin>.range", "sre_compile._mk_bitmap"], "<builtin>.bytearray": [], "sre_compile._mk_bitmap": ["<builtin>.len", "<builtin>.range"], "<builtin>.bytes": [], "sre_compile._bytes_to_codes": ["<builtin>.len", "<builtin>.memoryview"], "<builtin>.memoryview": [], "sre_compile._compile_charset": ["<list>", "<list>.extend", "sre_constants.error.__init__"], "sre_constants.error.__init__": ["<builtin>.super", "<builtin>.isinstance"], "<builtin>.super": [], "sre_compile._compile": ["sre_constants.error.__init__", "<map>.get", "sre_compile._combine_flags", "<list>", "sre_compile._compile", "sre_compile._optimize_charset", "sre_compile._simple", "sre_compile._compile_charset"], "<map>.get": [], "sre_compile._simple": ["<builtin>.len", "sre_compile._simple"], "sre_compile.dis": ["<builtin>.len", "sre_compile.dis.dis_", "<builtin>.set", "<builtin>.str"], "sre_compile.dis.dis_": ["sre_compile.dis.dis_", "<builtin>.map", "sre_compile.dis.dis_.print_", "sre_compile.dis.dis_.print_2", "<builtin>.list", "<builtin>.str", "<builtin>.ValueError", "sre_compile._hex_code", "<builtin>.range", "<builtin>.bin", "<builtin>.chr"], "<builtin>.bin": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<map>.items": [], "functools.lru_cache": ["<builtin>.callable", "functools._lru_cache_wrapper", "functools.update_wrapper", "<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.callable": [], "functools._lru_cache_wrapper": ["_thread.RLock", "<builtin>.object"], "_thread.RLock": [], "functools.update_wrapper": ["<builtin>.getattr"], "functools.lru_cache.decorating_function": ["functools.update_wrapper", "functools._lru_cache_wrapper"], "functools._lru_cache_wrapper.wrapper": ["re._compile_repl", "functools._make_key"], "functools._make_key": ["<builtin>.len", "<builtin>.type", "functools._HashedSeq.__init__", "<builtin>.tuple"], "functools._HashedSeq.__init__": ["<builtin>.hash"], "<builtin>.hash": [], "re._compile_repl": ["sre_parse.parse_template"], "sre_parse.parse_template": ["<builtin>.len", "sre_parse.Tokenizer.error", "sre_parse.Tokenizer.getuntil", "<builtin>.int", "sre_parse.parse_template.addgroup", "<builtin>.IndexError", "<list>", "<list>.append", "<builtin>.isinstance", "sre_parse.Tokenizer.match", "sre_parse.Tokenizer.__init__", "<str>.isidentifier", "sre_parse.Tokenizer.get", "<builtin>.chr"], "sre_parse.Tokenizer.get": ["sre_parse.Tokenizer.__next"], "<builtin>.int": [], "sre_parse.parse_template.addgroup": ["<list>.append", "sre_parse.Tokenizer.error"], "sre_parse.Tokenizer.getuntil": ["<builtin>.len", "sre_parse.Tokenizer.error", "sre_parse.Tokenizer.__next"], "<str>.isidentifier": [], "<builtin>.IndexError": [], "copyreg": [], "copyreg.pickle": ["<builtin>.callable", "copyreg.constructor", "<builtin>.TypeError"], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "re.Scanner": [], "warnings": ["<builtin>.hasattr", "warnings.filterwarnings", "warnings._OptionError", "warnings.catch_warnings", "warnings.WarningMessage", "warnings._processoptions", "warnings.simplefilter"], "warnings._OptionError": [], "warnings.WarningMessage": [], "warnings.catch_warnings": [], "warnings._processoptions": ["warnings._setoption", "<builtin>.print"], "warnings._setoption": ["<builtin>.len", "re", "warnings.filterwarnings", "<builtin>.int", "warnings._getcategory", "warnings._getaction", "re.escape"], "warnings._getaction": [], "warnings._getcategory": ["<builtin>.getattr", "<builtin>.__import__", "<builtin>.issubclass"], "<builtin>.__import__": [], "<builtin>.issubclass": [], "re.escape": ["<str>.translate", "<str>.encode", "<builtin>.str", "<builtin>.isinstance"], "warnings.filterwarnings": ["re", "re.compile", "<builtin>.isinstance", "warnings._add_filter", "<builtin>.issubclass"], "re.compile": ["re._compile"], "re._compile": ["<builtin>.len", "<builtin>.iter", "<builtin>.type", "sre_compile.compile", "sre_compile.isstring", "<builtin>.ValueError", "<builtin>.next", "<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.iter": [], "<builtin>.next": [], "warnings._add_filter": ["warnings._filters_mutated", "<list>.append", "<list>.insert", "<list>.remove"], "<list>.remove": [], "<list>.insert": [], "warnings._filters_mutated": [], "<builtin>.hasattr": [], "warnings.simplefilter": ["warnings._add_filter", "<builtin>.isinstance"], "copy": ["weakref", "<builtin>.getattr", "<builtin>.type", "copy.Error", "types", "copyreg"], "weakref": ["weakref.WeakKeyDictionary", "weakref.WeakMethod", "weakref.KeyedRef", "weakref.WeakValueDictionary", "weakref.finalize", "_weakrefset"], "weakref.WeakMethod": [], "weakref.WeakValueDictionary": [], "weakref.KeyedRef": [], "weakref.WeakKeyDictionary": [], "weakref.finalize": ["<builtin>.property", "<builtin>.classmethod", "weakref.finalize._Info"], "weakref.finalize._Info": [], "copy.Error": [], "posixpath": ["os", "stat", "genericpath"], "os": ["<builtin>.ImportError", "posixpath", "os._AddedDllDirectory", "<list>.extend", "<builtin>.set", "os._add", "os._Environ.__init__", "os.PathLike", "<builtin>.globals", "stat", "os._exists", "os._Environ", "os._createenviron", "os._fscodec", "<list>.append", "os._wrap_close", "ntpath", "abc"], "stat": [], "<builtin>.ImportError": [], "ntpath": ["<builtin>.hasattr", "os", "stat", "genericpath"], "genericpath": ["os", "stat"], "os._exists": ["<builtin>.globals"], "os._add": [], "os._Environ": [], "os._createenviron": ["os._createenviron.encodekey", "os._Environ.__init__"], "os._createenviron.encodekey": ["os._createenviron.encode"], "os._createenviron.encode": ["<builtin>.type", "<builtin>.TypeError", "<builtin>.isinstance"], "os._Environ.__init__": [], "os._fscodec": [], "os._wrap_close": [], "os.PathLike": ["<builtin>.classmethod", "abc.abstractmethod"], "abc.abstractmethod": [], "os._AddedDllDirectory": [], "six": ["six._SixMetaPathImporter.__init__", "operator.itemgetter.__init__", "operator", "six.Module_six_moves_urllib_error", "operator.methodcaller.__init__", "struct", "six.exec_", "<builtin>.int", "<builtin>.type", "six.Iterator", "six._SixMetaPathImporter._add_module", "six._SixMetaPathImporter", "six.Module_six_moves_urllib_request", "six._MovedItems", "functools", "six.MovedModule", "operator.attrgetter.__init__", "six._LazyDescr", "<builtin>.enumerate", "<builtin>.globals", "six.Module_six_moves_urllib_response", "six.Module_six_moves_urllib_parse", "<builtin>.isinstance", "<builtin>.getattr", "<builtin>.setattr", "six._add_doc", "six.Module_six_moves_urllib_robotparser", "io", "six.MovedAttribute", "<builtin>.len", "six._LazyModule", "importlib.util", "six.Module_six_moves_urllib", "six.X", "__future__", "types"], "__future__": ["__future__._Feature.__init__", "__future__._Feature"], "__future__._Feature": [], "__future__._Feature.__init__": [], "six.X": [], "importlib.util": ["warnings", "importlib.util.LazyLoader", "contextlib", "contextlib.contextmanager", "types", "importlib.util._LazyModule", "functools"], "contextlib": ["contextlib._GeneratorContextManagerBase", "contextlib._AsyncGeneratorContextManager", "contextlib.closing", "contextlib.ExitStack", "contextlib._RedirectStream", "functools", "contextlib.nullcontext", "contextlib.AsyncExitStack", "contextlib.redirect_stdout", "contextlib.AbstractAsyncContextManager", "contextlib.AbstractContextManager", "contextlib._GeneratorContextManager", "contextlib.ContextDecorator", "collections", "contextlib.suppress", "contextlib.redirect_stderr", "abc", "contextlib._BaseExitStack", "types"], "contextlib.AbstractContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.AbstractAsyncContextManager": ["<builtin>.classmethod", "abc.abstractmethod"], "contextlib.ContextDecorator": [], "contextlib._GeneratorContextManagerBase": [], "contextlib._GeneratorContextManager": [], "contextlib._AsyncGeneratorContextManager": [], "contextlib.closing": [], "contextlib._RedirectStream": [], "contextlib.redirect_stdout": [], "contextlib.redirect_stderr": [], "contextlib.suppress": [], "contextlib._BaseExitStack": ["<builtin>.staticmethod"], "contextlib.ExitStack": [], "contextlib.AsyncExitStack": ["<builtin>.staticmethod"], "contextlib.nullcontext": [], "contextlib.contextmanager": ["functools.wraps"], "functools.wraps": [], "importlib.util._LazyModule": [], "importlib.util.LazyLoader": ["<builtin>.classmethod", "<builtin>.staticmethod"], "six._LazyDescr": [], "six.MovedModule": [], "six._LazyModule": [], "six.MovedAttribute": [], "six._SixMetaPathImporter": [], "six._SixMetaPathImporter.__init__": [], "six._MovedItems": [], "<builtin>.setattr": [], "six._SixMetaPathImporter._add_module": [], "six.Module_six_moves_urllib_parse": [], "six.Module_six_moves_urllib_error": [], "six.Module_six_moves_urllib_request": [], "six.Module_six_moves_urllib_response": [], "six.Module_six_moves_urllib_robotparser": [], "six.Module_six_moves_urllib": ["six._SixMetaPathImporter._get_module"], "six._SixMetaPathImporter._get_module": [], "six.Iterator": [], "six._add_doc": [], "operator.attrgetter.__init__": ["<builtin>.map", "<str>.split", "<builtin>.tuple", "<builtin>.TypeError", "<builtin>.isinstance"], "operator.methodcaller.__init__": ["<builtin>.TypeError", "<builtin>.isinstance"], "struct": ["_struct"], "_struct": [], "io": ["io.IOBase", "io.TextIOBase", "io.RawIOBase", "abc", "io.BufferedIOBase"], "io.IOBase": [], "io.RawIOBase": [], "io.BufferedIOBase": [], "io.TextIOBase": [], "six.exec_": ["<builtin>.exec"], "furl.omdict1D": ["furl.common", "furl.omdict1D.omdict1D", "orderedmultidict"], "orderedmultidict": ["posixpath", "<builtin>.exec", "<builtin>.globals", "orderedmultidict.orderedmultidict", "posixpath.dirname", "posixpath.join", "<map>.items", "<builtin>.open", "<builtin>.dict"], "orderedmultidict.orderedmultidict": ["collections", "six", "orderedmultidict.itemlist", "__future__", "collections.abc", "<builtin>.object", "orderedmultidict.orderedmultidict.omdict"], "orderedmultidict.itemlist": ["orderedmultidict.itemlist.itemnode", "orderedmultidict.itemlist.itemlist", "__future__", "<builtin>.object"], "orderedmultidict.itemlist.itemnode": [], "orderedmultidict.itemlist.itemlist": [], "collections.abc": ["collections.abc"], "orderedmultidict.orderedmultidict.omdict": ["<builtin>.classmethod"], "posixpath.dirname": ["os._fspath", "<builtin>.len", "posixpath._get_sep"], "os._fspath": ["<builtin>.hasattr", "<builtin>.type", "<str>.format", "<builtin>.TypeError", "<builtin>.isinstance"], "<str>.format": [], "posixpath._get_sep": ["<builtin>.isinstance"], "posixpath.join": ["os._fspath", "<builtin>.map", "genericpath._check_arg_types", "posixpath._get_sep"], "genericpath._check_arg_types": ["<builtin>.TypeError", "<builtin>.isinstance"], "<builtin>.open": [], "furl.common": ["furl.compat", "<builtin>.object"], "furl.compat": ["collections", "<builtin>.list", "furl.compat.UnicodeMixin"], "furl.compat.UnicodeMixin": [], "furl.omdict1D.omdict1D": [], "<str>.translate": [], "<str>.encode": [], "furl.furl.static_vars": [], "furl.furl.static_vars.decorator": ["six.iteritems", "<builtin>.setattr"], "six.iteritems": [], "furl.furl.Path": ["<builtin>.property"], "furl.furl.PathCompositionInterface": ["<builtin>.property", "abc.abstractmethod"], "furl.furl.URLPathCompositionInterface": [], "furl.furl.FragmentPathCompositionInterface": [], "furl.furl.Query": ["<builtin>.property"], "furl.furl.QueryCompositionInterface": ["<builtin>.property"], "furl.furl.Fragment": [], "furl.furl.FragmentCompositionInterface": ["<builtin>.property"], "furl.furl.furl": ["<builtin>.property"], "furl.__version__": [], "furl.common.callable_attr": ["<builtin>.hasattr", "<builtin>.getattr", "<builtin>.callable"], "furl.common.is_iterable_but_not_string": ["furl.common.callable_attr", "<builtin>.isinstance"], "furl.furl.<lambda1>": ["<builtin>.len"], "furl.furl.Fragment.__bool__": ["<builtin>.bool"], "furl.furl.Fragment.__eq__": ["<builtin>.str"], "furl.furl.Fragment.__init__": ["furl.furl.FragmentPathCompositionInterface.__init__", "furl.furl.QueryCompositionInterface.__init__", "furl.furl.Fragment.load"], "furl.furl.FragmentPathCompositionInterface.__init__": ["furl.furl.PathCompositionInterface.__init__"], "furl.furl.PathCompositionInterface.__init__": ["furl.furl.Path.__init__"], "furl.furl.Path.__init__": ["furl.furl.Path.load"], "furl.furl.Path.load": ["<builtin>.len", "<list>.pop", "furl.furl.Path.<lambda1>", "furl.furl.PathCompositionInterface._force_absolute", "furl.furl.quacks_like_a_path_with_segments", "furl.common.is_iterable_but_not_string", "furl.furl.Path._segments_from_path"], "furl.furl.quacks_like_a_path_with_segments": ["<builtin>.hasattr", "furl.common.is_iterable_but_not_string"], "furl.furl.Path._segments_from_path": ["six.moves.urllib.parse.quote", "<str>.split", "furl.furl.utf8", "warnings.warn", "<list>.append", "furl.furl.Path._path_from_segments", "furl.furl.is_valid_encoded_path_segment", "six.moves.urllib.parse.unquote", "<builtin>.isinstance"], "furl.furl.is_valid_encoded_path_segment": [], "furl.furl.utf8": [], "six.moves.urllib.parse.quote": [], "furl.furl.Path._path_from_segments": ["furl.furl.utf8", "furl.furl.attemptstr", "six.moves.urllib.parse.quote"], "furl.furl.attemptstr": ["<builtin>.str"], "warnings.warn": ["<builtin>.type", "warnings._is_internal_frame", "warnings._next_external_frame", "<builtin>.isinstance", "<builtin>.range", "warnings.warn_explicit", "<builtin>.TypeError", "<builtin>.issubclass"], "warnings._is_internal_frame": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings.warn_explicit": ["warnings._showwarnmsg", "<map>.get", "<builtin>.int", "linecache.getlines", "<map>.clear", "<builtin>.str", "<builtin>.RuntimeError", "<builtin>.issubclass", "warnings.WarningMessage.__init__", "linecache", "<builtin>.isinstance"], "<map>.clear": [], "linecache": ["os", "functools", "tokenize"], "tokenize": ["<builtin>.map", "re", "collections", "tokenize._all_string_prefixes", "<builtin>.any", "<builtin>.set", "tokenize.maybe", "tokenize.group", "tokenize.Untokenizer", "token", "re.compile", "tokenize.TokenInfo", "tokenize.TokenError", "io", "collections.namedtuple", "<builtin>.sorted", "codecs", "tokenize.StopTokenizing"], "codecs": ["codecs.StreamWriter", "codecs.IncrementalDecoder", "codecs.StreamReader", "codecs.StreamRecoder", "codecs.StreamReaderWriter", "codecs.IncrementalEncoder", "<builtin>.SystemError", "encodings", "codecs.BufferedIncrementalDecoder", "codecs.Codec", "codecs.CodecInfo", "codecs.BufferedIncrementalEncoder"], "<builtin>.SystemError": [], "codecs.CodecInfo": [], "codecs.Codec": [], "codecs.IncrementalEncoder": [], "codecs.BufferedIncrementalEncoder": [], "codecs.IncrementalDecoder": [], "codecs.BufferedIncrementalDecoder": [], "codecs.StreamWriter": [], "codecs.StreamReader": [], "codecs.StreamReaderWriter": [], "codecs.StreamRecoder": [], "encodings": ["codecs", "encodings.CodecRegistryError"], "encodings.CodecRegistryError": [], "token": ["<builtin>.globals", "<list>.extend", "<builtin>.isinstance"], "<str>.replace": [], "tokenize.TokenInfo": ["<builtin>.property"], "tokenize.maybe": ["tokenize.group"], "tokenize.group": [], "tokenize._all_string_prefixes": [], "<builtin>.sorted": [], "tokenize.TokenError": [], "tokenize.StopTokenizing": [], "tokenize.Untokenizer": [], "linecache.getlines": ["<builtin>.len", "linecache.updatecache", "linecache.clearcache"], "linecache.updatecache": ["<builtin>.len", "<str>.startswith", "linecache.lazycache", "tokenize.open", "<str>.endswith", "ntpath.isabs", "posixpath.isabs", "ntpath.join", "posixpath.join"], "<str>.startswith": [], "<str>.endswith": [], "linecache.lazycache": ["<builtin>.len", "<str>.startswith", "<builtin>.getattr", "<str>.endswith"], "ntpath.isabs": ["<str>.startswith", "<builtin>.len", "ntpath.splitdrive", "ntpath._get_bothseps", "os._fspath", "<str>.replace", "<builtin>.isinstance"], "ntpath.splitdrive": ["<builtin>.len", "<str>.find", "os._fspath", "<str>.replace", "<builtin>.isinstance"], "<str>.find": [], "ntpath._get_bothseps": ["<builtin>.isinstance"], "posixpath.isabs": ["os._fspath", "<str>.startswith", "posixpath._get_sep"], "ntpath.join": ["<builtin>.map", "ntpath.splitdrive", "<str>.lower", "genericpath._check_arg_types", "os._fspath", "<builtin>.isinstance"], "<str>.lower": [], "tokenize.open": ["builtins.open", "tokenize.detect_encoding", "_io.TextIOWrapper"], "builtins.open": [], "tokenize.detect_encoding": ["tokenize.detect_encoding.find_cookie", "tokenize.detect_encoding.read_or_stop"], "tokenize.detect_encoding.read_or_stop": [], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "<builtin>.SyntaxError": [], "tokenize._get_normal_name": [], "_io.TextIOWrapper": [], "linecache.clearcache": [], "<builtin>.RuntimeError": [], "warnings.WarningMessage.__init__": [], "warnings._showwarnmsg": ["warnings._showwarnmsg_impl"], "warnings._showwarnmsg_impl": ["warnings._formatwarnmsg"], "warnings._formatwarnmsg": ["warnings._formatwarnmsg_impl"], "warnings._formatwarnmsg_impl": ["linecache", "linecache.getline", "<str>.strip"], "linecache.getline": ["<builtin>.len", "linecache.getlines"], "six.moves.urllib.parse.unquote": [], "<list>.pop": [], "furl.furl.QueryCompositionInterface.__init__": ["furl.furl.Query.__init__"], "furl.furl.Query.__init__": ["furl.furl.Query.load"], "furl.furl.Query.load": ["furl.furl.Query._items"], "furl.furl.Query._items": ["<builtin>.list", "furl.furl.Query._extract_items_from_querystr", "furl.common.callable_attr", "<builtin>.isinstance"], "furl.furl.Query._extract_items_from_querystr": ["furl.furl.is_valid_encoded_query_key", "<str>.split", "warnings.warn", "furl.furl.lget", "<list>.append", "furl.furl.is_valid_encoded_query_value", "six.moves.urllib.parse.unquote"], "furl.furl.lget": [], "furl.furl.is_valid_encoded_query_key": [], "furl.furl.is_valid_encoded_query_value": [], "furl.furl.Fragment.load": ["<str>.split", "furl.furl.Path.load", "furl.furl.Query.load", "<builtin>.len"], "furl.furl.Fragment.__repr__": ["<builtin>.str"], "furl.furl.Fragment.__setattr__": ["furl.furl.QueryCompositionInterface.__setattr__", "furl.furl.PathCompositionInterface.__setattr__"], "furl.furl.PathCompositionInterface.__setattr__": ["furl.furl.Path.load"], "furl.furl.QueryCompositionInterface.__setattr__": ["furl.furl.Query.load"], "furl.furl.Fragment.__str__": ["<builtin>.str"], "furl.furl.Fragment.asdict": ["<builtin>.str"], "furl.furl.Fragment.remove": ["furl.furl.Fragment.load"], "furl.furl.FragmentCompositionInterface.__init__": ["furl.furl.Fragment.__init__"], "furl.furl.FragmentCompositionInterface.fragmentstr": ["<builtin>.str", "warnings.warn"], "furl.furl.Path.__bool__": ["<builtin>.len"], "furl.furl.Path.__eq__": ["<builtin>.str"], "furl.furl.Path.__repr__": ["<builtin>.str"], "furl.furl.Path.__str__": ["<builtin>.list", "furl.furl.Path._path_from_segments"], "furl.furl.Path.__truediv__": ["copy.deepcopy", "furl.furl.Path.add"], "copy.deepcopy": ["<builtin>.getattr", "copy._reconstruct", "<map>.get", "<builtin>.type", "<builtin>.isinstance", "copy._deepcopy_atomic", "<map>", "copy._keep_alive", "<builtin>.id", "<builtin>.issubclass"], "<builtin>.id": [], "<map>": [], "copy._reconstruct": ["<builtin>.len", "<builtin>.hasattr", "<builtin>.setattr", "<builtin>.id", "copy.deepcopy", "<builtin>.isinstance"], "copy._deepcopy_atomic": [], "copy._keep_alive": ["<builtin>.id"], "furl.furl.Path.add": ["furl.furl.quacks_like_a_path_with_segments", "furl.furl.join_path_segments", "furl.furl.Path.load", "<list>.insert", "furl.common.is_iterable_but_not_string", "furl.furl.Path._segments_from_path"], "furl.furl.join_path_segments": ["<builtin>.len", "<list>.pop", "<list>.extend"], "furl.furl.PathCompositionInterface._force_absolute": [], "furl.furl.Path.<lambda1>": [], "furl.furl.Path.asdict": ["<builtin>.str"], "furl.furl.Path.isabsolute": ["furl.furl.PathCompositionInterface._force_absolute", "furl.furl.Path.<lambda1>"], "furl.furl.Path.normalize": ["<str>.startswith", "<builtin>.str", "furl.furl.Path.load", "<str>.lstrip", "posixpath.normpath"], "posixpath.normpath": ["<str>.startswith", "<list>.pop", "<str>.split", "os._fspath", "<list>.append", "<builtin>.isinstance"], "<str>.lstrip": [], "furl.furl.Path.remove": ["furl.furl.remove_path_segments", "furl.furl.Path.load", "furl.furl.Path._segments_from_path", "furl.common.is_iterable_but_not_string"], "furl.furl.remove_path_segments": ["<builtin>.len", "<list>.append", "<builtin>.list"], "furl.furl.Path.set": ["furl.furl.Path.load"]}