{
    "<string>": [
        "abc.ABCMeta.register"
    ],
    "__future__": [
        "__future__._Feature",
        "__future__._Feature.__init__"
    ],
    "__future__._Feature.__init__": [],
    "_collections_abc.ItemsView.__iter__": [
        "networkx.classes.coreviews.AdjacencyView.__getitem__",
        "networkx.classes.reportviews.NodeView.__iter__",
        "networkx.classes.coreviews.AtlasView.__getitem__",
        "networkx.classes.coreviews.AtlasView.__iter__",
        "networkx.classes.reportviews.NodeView.__getitem__"
    ],
    "_collections_abc.Mapping.__contains__": [
        "os._Environ.__getitem__"
    ],
    "_collections_abc.Mapping.get": [
        "os._Environ.__getitem__"
    ],
    "_collections_abc.Mapping.items": [
        "_collections_abc.MappingView.__init__"
    ],
    "_collections_abc.MutableMapping.clear": [
        "weakref.WeakKeyDictionary.popitem"
    ],
    "_collections_abc.__subclasshook__": [
        "_collections_abc._check_methods"
    ],
    "_compat_pickle": [
        "<map>.items",
        "<builtin>.len",
        "<map>.update",
        "<builtin>.dict"
    ],
    "_distutils_hack.DistutilsMetaFinder.find_spec": [
        "_distutils_hack.<lambda>"
    ],
    "_osx_support._check_for_unavailable_sdk": [
        "re.sub",
        "genericpath.exists",
        "re.match",
        "re.search",
        "<str>.group",
        "_osx_support._save_modified_value"
    ],
    "_osx_support._get_system_name_and_version": [
        "re.search",
        "_bootlocale.getpreferredencoding",
        "codecs.BufferedIncrementalDecoder.__init__",
        "codecs.BufferedIncrementalDecoder.decode"
    ],
    "_osx_support._get_system_version": [
        "re.search",
        "_osx_support._get_system_name_and_version",
        "<builtin>.open"
    ],
    "_osx_support._override_all_archs": [
        "re.sub",
        "_osx_support._save_modified_value",
        "_collections_abc.Mapping.__contains__"
    ],
    "_osx_support._remove_universal_flags": [
        "_osx_support._save_modified_value",
        "re.sub"
    ],
    "_osx_support._supports_universal_builds": [
        "_osx_support._get_system_name_and_version",
        "<builtin>.int",
        "<builtin>.bool",
        "_osx_support._get_system_version",
        "<str>.split",
        "<builtin>.tuple"
    ],
    "_osx_support.customize_config_vars": [
        "_osx_support._override_all_archs",
        "_osx_support._supports_universal_builds",
        "_osx_support._remove_universal_flags",
        "_osx_support._check_for_unavailable_sdk"
    ],
    "_osx_support.get_platform_osx": [
        "<builtin>.sorted",
        "<list>.get",
        "<map>.get",
        "<list>.strip",
        "<builtin>.len",
        "<builtin>.int",
        "<map>.strip",
        "_osx_support._get_system_version",
        "re.findall",
        "<builtin>.ValueError",
        "<builtin>.set",
        "<builtin>.tuple"
    ],
    "_py_abc": [
        "_weakrefset"
    ],
    "_weakrefset": [],
    "_weakrefset.WeakSet.__init__": [
        "_weakrefset.WeakSet.update",
        "<builtin>.set"
    ],
    "_weakrefset.WeakSet._commit_removals": [],
    "_weakrefset.WeakSet.add": [
        "_weakrefset.WeakSet._commit_removals"
    ],
    "_weakrefset.WeakSet.update": [
        "_weakrefset.WeakSet._commit_removals",
        "_weakrefset.WeakSet.add"
    ],
    "abc": [
        "_py_abc"
    ],
    "abc.ABCMeta.__instancecheck__": [
        "abc.ABCMeta.__subclasscheck__"
    ],
    "abc.ABCMeta.__subclasscheck__": [
        "os.__subclasshook__",
        "_collections_abc.__subclasshook__",
        "abc.ABCMeta.__subclasscheck__"
    ],
    "abc.ABCMeta.register": [
        "abc.ABCMeta.__subclasscheck__",
        "_abc._abc_register"
    ],
    "abc.__new__": [
        "typing.Generic.__init_subclass__"
    ],
    "ast": [
        "ast.Num",
        "ast.Bytes",
        "ast.Ellipsis",
        "<builtin>.type",
        "<builtin>.property",
        "ast.NodeTransformer",
        "ast.Str",
        "ast.NameConstant",
        "ast.NodeVisitor",
        "ast._ABC"
    ],
    "ast.literal_eval": [
        "ast.literal_eval._convert",
        "ast.parse",
        "<builtin>.isinstance"
    ],
    "ast.literal_eval._convert": [
        "<builtin>.zip",
        "<builtin>.isinstance",
        "<builtin>.list",
        "ast.literal_eval._convert_signed_num",
        "<builtin>.map",
        "<builtin>.dict",
        "<builtin>.set",
        "<builtin>.tuple",
        "ast.literal_eval._convert_num"
    ],
    "ast.literal_eval._convert_num": [
        "<builtin>.type",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.repr"
    ],
    "ast.literal_eval._convert_signed_num": [
        "<builtin>.isinstance",
        "ast.literal_eval._convert_num"
    ],
    "ast.parse": [
        "<builtin>.compile",
        "<builtin>.isinstance"
    ],
    "bisect": [],
    "calendar": [
        "calendar._localized_month.__init__",
        "calendar.Calendar.__init__",
        "calendar.LocaleTextCalendar",
        "calendar.IllegalMonthError",
        "calendar._localized_day.__init__",
        "datetime.datetime.date",
        "calendar.HTMLCalendar",
        "calendar.main",
        "calendar._localized_day",
        "calendar.LocaleHTMLCalendar",
        "calendar.IllegalWeekdayError",
        "calendar.TextCalendar",
        "calendar.Calendar",
        "<builtin>.range",
        "calendar.different_locale",
        "calendar._localized_month"
    ],
    "calendar.Calendar.__init__": [
        "calendar.Calendar.setfirstweekday"
    ],
    "calendar.Calendar.itermonthdays": [
        "<builtin>.range",
        "calendar.monthrange"
    ],
    "calendar.Calendar.itermonthdays2": [
        "calendar.Calendar.itermonthdays",
        "<builtin>.enumerate"
    ],
    "calendar.Calendar.monthdays2calendar": [
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.len",
        "calendar.Calendar.itermonthdays2"
    ],
    "codecs.BufferedIncrementalDecoder.__init__": [
        "codecs.IncrementalDecoder.__init__"
    ],
    "codecs.StreamReader.__next__": [
        "codecs.StreamReader.readline"
    ],
    "codecs.StreamReader.readline": [
        "<builtin>.len",
        "codecs.StreamReader.read",
        "<builtin>.isinstance"
    ],
    "codecs.StreamReaderWriter.__init__": [
        "codecs.StreamReader.__init__",
        "codecs.StreamWriter.__init__"
    ],
    "codecs.StreamReaderWriter.__next__": [
        "codecs.StreamReader.__next__",
        "<builtin>.next"
    ],
    "codecs.StreamReaderWriter.read": [
        "codecs.StreamReader.read"
    ],
    "codecs.open": [
        "codecs.StreamReaderWriter.__init__"
    ],
    "collections": [
        "keyword",
        "operator",
        "heapq"
    ],
    "collections.<lambda1>": [
        "operator.itemgetter.__init__",
        "<builtin>.property"
    ],
    "collections.ChainMap": [
        "reprlib.recursive_repr.decorating_function",
        "<builtin>.classmethod",
        "reprlib.recursive_repr",
        "<builtin>.property"
    ],
    "collections.Counter": [
        "<builtin>.classmethod"
    ],
    "collections.OrderedDict": [
        "reprlib.recursive_repr.decorating_function",
        "<builtin>.object",
        "<builtin>.classmethod",
        "reprlib.recursive_repr"
    ],
    "collections.OrderedDict.__init__": [],
    "collections.OrderedDict.move_to_end": [],
    "collections.OrderedDict.pop": [
        "<builtin>.KeyError"
    ],
    "collections.OrderedDict.values": [],
    "collections.UserDict": [
        "<builtin>.classmethod"
    ],
    "collections.abc": [],
    "collections.namedtuple": [
        "<builtin>.reversed",
        "<builtin>.type",
        "<builtin>.map",
        "<builtin>.dict",
        "<builtin>.set",
        "<builtin>.exec",
        "<str>.replace",
        "<builtin>.str",
        "<builtin>.TypeError",
        "<builtin>.repr",
        "<str>.split",
        "<builtin>.list",
        "<builtin>.enumerate",
        "<builtin>.classmethod",
        "<list>.split",
        "<builtin>.tuple",
        "<builtin>.zip",
        "<builtin>.isinstance",
        "<list>.replace",
        "<builtin>.len",
        "<str>.join",
        "<builtin>.ValueError"
    ],
    "contextlib.ContextDecorator.__call__": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "contextlib.ExitStack.__exit__": [
        "contextlib._exit_wrapper",
        "sys.exc_info",
        "contextlib.ExitStack.__exit__._fix_exception_context"
    ],
    "contextlib._BaseExitStack.callback": [
        "contextlib._create_cb_wrapper",
        "<builtin>.TypeError",
        "<builtin>.len",
        "warnings.warn",
        "contextlib._BaseExitStack._push_exit_callback"
    ],
    "contextlib.contextmanager": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "contextlib.inner": [
        "contextlib.ContextDecorator._recreate_cm",
        "numpy.core._ufunc_config.errstate.__exit__",
        "numpy.core._ufunc_config.errstate.__enter__"
    ],
    "copy": [
        "<builtin>.getattr",
        "copy.Error",
        "<builtin>.type"
    ],
    "copy._deepcopy_dict": [
        "<builtin>.id",
        "copy.deepcopy"
    ],
    "copy._reconstruct": [
        "copyreg.__newobj__",
        "<builtin>.isinstance",
        "<builtin>.hasattr",
        "<builtin>.len",
        "<builtin>.id",
        "<builtin>.setattr"
    ],
    "copy.copy": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "copy._reconstruct",
        "<builtin>.type",
        "<builtin>.issubclass",
        "copyreg._slotnames"
    ],
    "copy.deepcopy": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.type",
        "<builtin>.id",
        "copy._deepcopy_dict",
        "copy._deepcopy_atomic",
        "copy._keep_alive",
        "<builtin>.issubclass"
    ],
    "copyreg.pickle": [
        "<builtin>.callable",
        "copyreg.constructor",
        "<builtin>.TypeError"
    ],
    "ctypes": [
        "ctypes.c_long",
        "ctypes.py_object",
        "ctypes.c_double",
        "ctypes.c_float",
        "<builtin>.int",
        "ctypes.c_ushort",
        "ctypes.LibraryLoader",
        "ctypes.c_ulong",
        "ctypes._reset_cache",
        "ctypes.LibraryLoader.__init__",
        "ctypes.c_wchar",
        "ctypes.c_uint",
        "ctypes.c_bool",
        "ctypes.c_void_p",
        "<builtin>.Exception",
        "ctypes.CDLL.__init__",
        "ctypes.CDLL",
        "ctypes.c_ubyte",
        "ctypes.c_wchar_p",
        "ctypes.CFUNCTYPE",
        "ctypes._endian",
        "ctypes.c_short",
        "ctypes.PYFUNCTYPE",
        "ctypes.c_byte",
        "ctypes._check_size",
        "ctypes.c_char_p",
        "ctypes.c_longdouble",
        "ctypes.PyDLL",
        "ctypes.c_int",
        "ctypes.c_char"
    ],
    "ctypes.CDLL.__init__": [
        "ctypes._FuncPtr",
        "nt._getfullpathname",
        "sys.platform.startswith",
        "_ctypes.dlopen",
        "_ctypes.LoadLibrary"
    ],
    "ctypes.CFUNCTYPE": [
        "<builtin>.ValueError",
        "ctypes.CFunctionType"
    ],
    "ctypes.PYFUNCTYPE": [
        "ctypes.CFunctionType"
    ],
    "ctypes._endian": [
        "ctypes._endian._swapped_meta",
        "<builtin>.RuntimeError",
        "ctypes._endian.BigEndianStructure",
        "<builtin>.type"
    ],
    "current_flow_betweenness_subset": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "datetime": [
        "datetime.timedelta",
        "datetime.__new__",
        "datetime.datetime",
        "<list>.append",
        "datetime.timezone._create",
        "datetime.tzinfo",
        "datetime._days_before_year",
        "datetime.time",
        "datetime.timezone",
        "datetime.timedelta.__neg__",
        "datetime.date"
    ],
    "datetime.__new__": [
        "datetime._check_time_fields",
        "datetime._check_tzinfo_arg",
        "datetime._check_date_fields"
    ],
    "datetime._check_date_fields": [
        "datetime._check_int_field",
        "datetime._days_in_month",
        "<builtin>.ValueError"
    ],
    "datetime._check_time_fields": [
        "datetime._check_int_field",
        "<builtin>.ValueError"
    ],
    "datetime.timedelta.__neg__": [
        "datetime.__new__"
    ],
    "datetime.timezone": [
        "datetime.__new__",
        "<builtin>.staticmethod",
        "<builtin>.object",
        "<builtin>.classmethod",
        "datetime.timedelta.__neg__"
    ],
    "decimal": [
        "_pydecimal"
    ],
    "decoder": [
        "decoder.JSONDecoder",
        "decoder.JSONDecodeError",
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "decoder.JSONDecoder.decode": [
        "decoder.JSONDecoder.raw_decode"
    ],
    "email._parseaddr": [
        "email._parseaddr.AddrlistClass",
        "email._parseaddr.AddressList"
    ],
    "email._policybase": [
        "email.utils",
        "email._policybase.Compat32",
        "email._policybase._extend_docstrings",
        "email._policybase._PolicyBase",
        "email._policybase._PolicyBase.__init__",
        "abc.__new__",
        "email.email.header",
        "email._policybase.Policy"
    ],
    "email._policybase.Policy": [
        "abc.abstractmethod"
    ],
    "email._policybase._extend_docstrings": [
        "<builtin>.getattr",
        "email._policybase._append_doc"
    ],
    "email.base64mime": [
        "base64"
    ],
    "email.charset": [
        "email.charset.Charset"
    ],
    "email.encoders": [],
    "email.errors": [
        "email.errors.MultipartInvariantViolationDefect",
        "email.errors.FirstHeaderLineIsContinuationDefect",
        "email.errors.MessageParseError",
        "email.errors.HeaderDefect",
        "email.errors.StartBoundaryNotFoundDefect",
        "email.errors.MessageDefect",
        "email.errors.BoundaryError",
        "email.errors.HeaderParseError",
        "email.errors.NonPrintableDefect",
        "email.errors.CloseBoundaryNotFoundDefect",
        "email.errors.CharsetError",
        "email.errors.InvalidBase64CharactersDefect",
        "email.errors.MultipartConversionError",
        "email.errors.UndecodableBytesDefect",
        "email.errors.InvalidHeaderDefect",
        "email.errors.ObsoleteHeaderDefect",
        "email.errors.InvalidBase64LengthDefect",
        "email.errors.MissingHeaderBodySeparatorDefect",
        "email.errors.HeaderMissingRequiredValue",
        "email.errors.MisplacedEnvelopeHeaderDefect",
        "email.errors.NoBoundaryInMultipartDefect",
        "email.errors.MessageError",
        "email.errors.NonASCIILocalPartDefect",
        "email.errors.InvalidBase64PaddingDefect",
        "email.errors.InvalidMultipartContentTransferEncodingDefect"
    ],
    "email.feedparser": [
        "email._policybase",
        "re.compile",
        "email.feedparser.BytesFeedParser",
        "<builtin>.object",
        "email.feedparser.BufferedSubFile",
        "email.feedparser.FeedParser",
        "email.errors"
    ],
    "email.header": [
        "email.base64mime",
        "email.charset.Charset.__init__",
        "email.quoprimime",
        "email.header._Accumulator",
        "re.compile",
        "enum.IntFlag.__or__",
        "email.header._ValueFormatter",
        "email.header.Header",
        "email.charset"
    ],
    "email.parser": [
        "email.parser.BytesParser",
        "email.parser.Parser",
        "email.parser.HeaderParser",
        "email.parser.BytesHeaderParser",
        "email.feedparser"
    ],
    "email.utils": [
        "re.compile",
        "socket",
        "email._parseaddr"
    ],
    "encoder": [
        "encoder.JSONEncoder",
        "re.compile"
    ],
    "encodings.cp437.getregentry": [
        "codecs.__new__"
    ],
    "encodings.search_function": [
        "encodings.cp437.getregentry",
        "<builtin>.isinstance",
        "<builtin>.__import__",
        "<builtin>.len",
        "encodings.normalize_encoding",
        "<builtin>.callable"
    ],
    "enum.EnumMeta.__call__": [
        "enum.EnumMeta._create_",
        "enum.__new__"
    ],
    "enum.EnumMeta.__getattr__": [
        "<builtin>.AttributeError",
        "enum._is_dunder"
    ],
    "enum.EnumMeta._convert_": [
        "<builtin>.vars",
        "enum.__members__",
        "enum.<lambda>",
        "enum.EnumMeta.__setattr__",
        "enum.EnumMeta.__call__"
    ],
    "enum.EnumMeta._create_": [
        "<builtin>.isinstance",
        "enum.__prepare__",
        "enum.EnumMeta._get_mixins_",
        "enum._EnumDict.__setitem__",
        "enum.EnumMeta.__setattr__",
        "<builtin>.enumerate",
        "enum._generate_next_value_",
        "enum.__new__"
    ],
    "enum.EnumMeta._find_new_": [
        "enum.EnumMeta.__getattr__",
        "<builtin>.getattr"
    ],
    "enum.EnumMeta._get_mixins_": [
        "enum._find_data_type",
        "<builtin>.issubclass",
        "<builtin>.TypeError"
    ],
    "enum.IntFlag.__and__": [
        "enum.EnumMeta.__call__",
        "<builtin>.isinstance"
    ],
    "enum.IntFlag.__or__": [
        "enum.EnumMeta.__call__",
        "<builtin>.isinstance"
    ],
    "enum._EnumDict.__setitem__": [
        "enum._is_sunder",
        "<builtin>.super",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "enum._is_descriptor",
        "<builtin>.list",
        "<builtin>.len",
        "<builtin>.setattr",
        "enum._is_dunder",
        "<builtin>.ValueError",
        "<builtin>.set"
    ],
    "enum.__new__": [
        "enum.EnumMeta._get_mixins_",
        "enum._EnumDict.__setitem__",
        "enum.EnumMeta.__setattr__",
        "enum._missing_",
        "enum.EnumMeta._find_new_"
    ],
    "enum.__prepare__": [
        "enum._EnumDict.__init__",
        "enum.EnumMeta._get_mixins_",
        "enum._check_for_existing_members",
        "enum._EnumDict.__setitem__"
    ],
    "enum._create_pseudo_member_": [
        "enum._decompose"
    ],
    "enum._decompose": [
        "enum._power_of_two",
        "<builtin>.list",
        "types.DynamicClassAttribute.__get__",
        "enum.<lambda>",
        "<builtin>.len"
    ],
    "enum._missing_": [
        "enum._create_pseudo_member_"
    ],
    "enum._power_of_two": [
        "enum._high_bit"
    ],
    "fractions": [
        "abc.__new__",
        "re.compile",
        "enum.IntFlag.__or__",
        "fractions.Fraction"
    ],
    "fractions.Fraction": [
        "fractions.Fraction._operator_fallbacks"
    ],
    "functools.<lambda>": [
        "functools.singledispatchmethod.register"
    ],
    "functools.lru_cache.decorating_function": [
        "_functools._lru_cache_wrapper",
        "functools.update_wrapper"
    ],
    "functools.singledispatch": [
        "types.MappingProxyType",
        "<builtin>.getattr",
        "functools.update_wrapper",
        "weakref.WeakKeyDictionary.__init__"
    ],
    "functools.singledispatchmethod.register": [
        "_collections_abc.MutableMapping.clear"
    ],
    "gzip": [
        "gzip.BadGzipFile",
        "gzip._PaddedFile",
        "gzip.main",
        "gzip._GzipReader",
        "struct",
        "abc.__new__",
        "gzip.GzipFile"
    ],
    "hashlib": [
        "logging.exception",
        "logging",
        "hashlib.__get_builtin_constructor",
        "<builtin>.globals",
        "<builtin>.bytes",
        "<builtin>.range",
        "<builtin>.set",
        "hashlib.__get_openssl_constructor"
    ],
    "hashlib.__get_builtin_constructor": [
        "<builtin>.ValueError",
        "<map>.get"
    ],
    "hashlib.__get_openssl_constructor": [
        "<builtin>.getattr",
        "hashlib.__get_builtin_constructor"
    ],
    "hmac": [
        "<builtin>.range",
        "<builtin>.bytes",
        "<builtin>.frozenset",
        "hmac.HMAC"
    ],
    "html": [
        "re.compile"
    ],
    "inspect.BoundArguments.apply_defaults": [
        "inspect.parameters",
        "inspect.default",
        "_collections.OrderedDict"
    ],
    "inspect.Parameter.__init__": [
        "enum.EnumMeta.__call__",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.type",
        "<builtin>.ValueError"
    ],
    "inspect.Signature.__init__": [
        "inspect.name",
        "inspect.kind",
        "types.MappingProxyType",
        "inspect.default",
        "<builtin>.enumerate",
        "<builtin>.ValueError",
        "_collections.OrderedDict"
    ],
    "inspect.Signature._bind": [
        "inspect.BoundArguments.__init__",
        "inspect.name",
        "<builtin>.TypeError",
        "inspect.kind",
        "<builtin>.iter",
        "itertools.chain",
        "inspect.default",
        "inspect.parameters",
        "<builtin>.next",
        "_collections.OrderedDict",
        "<builtin>.tuple"
    ],
    "inspect.Signature.bind": [
        "inspect.Signature._bind"
    ],
    "inspect.Signature.replace": [
        "inspect.Signature.__init__",
        "<builtin>.type"
    ],
    "inspect._has_code_flag": [
        "functools._unwrap_partial",
        "inspect.ismethod",
        "inspect.isfunction",
        "<builtin>.bool"
    ],
    "inspect._is_wrapper": [
        "inspect.<lambda>"
    ],
    "inspect._signature_bound_method": [
        "inspect.kind",
        "inspect.Signature.replace",
        "<builtin>.ValueError",
        "inspect.parameters",
        "<builtin>.tuple"
    ],
    "inspect._signature_from_callable": [
        "inspect._signature_is_functionlike",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "inspect._signature_is_builtin",
        "inspect.isfunction",
        "inspect._signature_from_callable",
        "<builtin>.type",
        "inspect._signature_from_function",
        "inspect.unwrap",
        "inspect._signature_bound_method",
        "<builtin>.callable",
        "<builtin>.ValueError",
        "inspect._signature_get_user_defined_method",
        "<builtin>.tuple"
    ],
    "inspect._signature_from_function": [
        "<builtin>.getattr",
        "<list>.append",
        "<builtin>.TypeError",
        "inspect.Parameter.__init__",
        "<builtin>.len",
        "inspect.Signature.__init__",
        "<builtin>.enumerate",
        "inspect.isfunction"
    ],
    "inspect._signature_is_builtin": [
        "inspect.ismethoddescriptor",
        "inspect.isbuiltin",
        "<builtin>.isinstance"
    ],
    "inspect._signature_is_functionlike": [
        "<builtin>.callable",
        "<builtin>.getattr",
        "inspect.isclass",
        "<builtin>.isinstance"
    ],
    "inspect.args": [
        "inspect.kind",
        "inspect.parameters"
    ],
    "inspect.from_callable": [
        "inspect._signature_from_callable"
    ],
    "inspect.iscoroutinefunction": [
        "inspect._has_code_flag"
    ],
    "inspect.isgeneratorfunction": [
        "inspect._has_code_flag"
    ],
    "inspect.ismethoddescriptor": [
        "<builtin>.hasattr",
        "inspect.isclass",
        "<builtin>.type"
    ],
    "inspect.kwargs": [
        "inspect.kind",
        "inspect.parameters"
    ],
    "inspect.signature": [
        "inspect.from_callable"
    ],
    "inspect.unwrap": [
        "<builtin>.id",
        "<builtin>.ValueError",
        "<builtin>.len",
        "inspect._is_wrapper"
    ],
    "jieba": [
        "jieba.Tokenizer.__init__",
        "logging.StreamHandler.__init__",
        "logging.Logger.addHandler",
        "jieba.Tokenizer",
        "re.compile",
        "logging.Logger.setLevel",
        "logging.getLogger",
        "jieba.finalseg"
    ],
    "jieba.<lambda1>": [
        "posixpath.normpath",
        "posixpath.join",
        "ntpath.join",
        "ntpath.normpath"
    ],
    "jieba.Tokenizer": [
        "<builtin>.staticmethod"
    ],
    "jieba.Tokenizer.__init__": [
        "threading.RLock"
    ],
    "jieba.Tokenizer.calc": [
        "<builtin>.max",
        "math.log",
        "<builtin>.len"
    ],
    "jieba.Tokenizer.check_initialized": [
        "jieba.Tokenizer.initialize"
    ],
    "jieba.Tokenizer.get_DAG": [
        "<builtin>.len",
        "jieba.Tokenizer.check_initialized"
    ],
    "jieba.Tokenizer.get_dict_file": [
        "<builtin>.open",
        "jieba._compat.<lambda>"
    ],
    "jieba.Tokenizer.initialize": [
        "tempfile.gettempdir",
        "shutil.move",
        "posixpath.dirname",
        "threading.RLock",
        "time.time",
        "hashlib.md5",
        "marshal.load",
        "jieba.Tokenizer.get_dict_file",
        "<builtin>.open",
        "jieba.Tokenizer.gen_pfdict",
        "genericpath.isfile",
        "tempfile.mkstemp",
        "logging.Logger.debug",
        "marshal.dump",
        "posixpath.join"
    ],
    "jieba._compat": [
        "logging.StreamHandler.__init__",
        "pkg_resources",
        "logging.Logger.setLevel",
        "logging.getLogger"
    ],
    "jieba._compat.<lambda2>": [
        "posixpath.normpath",
        "ntpath.dirname",
        "posixpath.dirname",
        "<builtin>.open",
        "ntpath.join",
        "posixpath.join",
        "ntpath.normpath"
    ],
    "jieba._compat.resolve_filename": [
        "<builtin>.repr"
    ],
    "jieba._compat.strdecode": [
        "<builtin>.isinstance"
    ],
    "jieba.finalseg": [
        "<builtin>.set",
        "sys.platform.startswith",
        "re.compile",
        "jieba._compat",
        "jieba.finalseg.load_model"
    ],
    "jieba.finalseg.load_model": [
        "jieba._compat.<lambda1>",
        "jieba._compat.<lambda2>",
        "pickle._load"
    ],
    "jieba.lac_small.creator": [
        "jieba.lac_small.nets"
    ],
    "jieba.lac_small.predict": [
        "ntpath.dirname",
        "jieba.lac_small.reader_small",
        "posixpath.dirname",
        "ntpath.abspath",
        "posixpath.abspath",
        "ntpath.join",
        "jieba.lac_small.utils.init_checkpoint",
        "jieba.lac_small.reader_small.Dataset.__init__",
        "posixpath.join",
        "jieba.lac_small.creator",
        "jieba.lac_small.utils"
    ],
    "jieba.posseg": [
        "jieba.posseg.pair",
        "jieba.posseg.load_model",
        "jieba.posseg.POSTokenizer",
        "re.compile",
        "jieba.posseg.POSTokenizer.__init__",
        "jieba.posseg.viterbi",
        "jieba._compat"
    ],
    "jieba.posseg.viterbi": [
        "<builtin>.float"
    ],
    "jieba.posseg.POSTokenizer.__cut": [
        "jieba.Tokenizer.__init__",
        "jieba.posseg.pair.__init__",
        "<builtin>.len",
        "jieba.posseg.viterbi",
        "jieba.posseg.POSTokenizer.load_word_tag",
        "<builtin>.enumerate",
        "viterbi.viterbi"
    ],
    "jieba.posseg.POSTokenizer.__cut_DAG": [
        "jieba.posseg.POSTokenizer.__cut_detail",
        "<map>.get",
        "jieba.Tokenizer.calc",
        "jieba.posseg.pair.__init__",
        "<builtin>.len",
        "jieba.Tokenizer.get_DAG"
    ],
    "jieba.posseg.POSTokenizer.__cut_detail": [
        "jieba.posseg.POSTokenizer.__cut",
        "<str>.match",
        "jieba.posseg.pair.__init__",
        "jieba.posseg.pair.__iter__",
        "<str>.split"
    ],
    "jieba.posseg.POSTokenizer.__cut_internal": [
        "<str>.match",
        "jieba.posseg.POSTokenizer.makesure_userdict_loaded",
        "jieba.posseg.pair.__init__",
        "jieba.posseg.POSTokenizer.__cut_DAG_NO_HMM",
        "jieba._compat.strdecode",
        "jieba.posseg.POSTokenizer.__cut_DAG",
        "<str>.split"
    ],
    "jieba.posseg.POSTokenizer.__cut_DAG_NO_HMM": [
        "jieba.posseg.pair.__init__",
        "<str>.match",
        "<builtin>.len",
        "<map>.get"
    ],
    "jieba.posseg.POSTokenizer.__init__": [
        "jieba.Tokenizer.__init__",
        "jieba.posseg.POSTokenizer.load_word_tag",
        "jieba.Tokenizer.get_dict_file"
    ],
    "jieba.posseg.POSTokenizer.cut": [
        "jieba.posseg.POSTokenizer.__cut_internal",
        "jieba.posseg.pair.__iter__"
    ],
    "jieba.posseg.POSTokenizer.load_word_tag": [
        "<builtin>.ValueError",
        "jieba._compat.resolve_filename",
        "<builtin>.enumerate"
    ],
    "jieba.posseg.POSTokenizer.makesure_userdict_loaded": [
        "<map>.update"
    ],
    "jieba.posseg.cut": [
        "jieba.posseg.pair.__init__",
        "jieba._compat.strdecode",
        "jieba.posseg.POSTokenizer.cut",
        "jieba.lac_small.predict.get_result",
        "<builtin>.enumerate",
        "jieba.lac_small.predict"
    ],
    "jieba.posseg.load_model": [
        "jieba._compat.<lambda1>",
        "jieba._compat.<lambda2>",
        "pickle._load"
    ],
    "jieba.posseg.pair.__init__": [],
    "json": [
        "encoder.JSONEncoder.__init__",
        "decoder.JSONDecoder.__init__"
    ],
    "json.loads": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<str>.startswith",
        "warnings.warn",
        "decoder.JSONDecoder.decode",
        "<str>.decode"
    ],
    "json.scanner": [
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "linecache.getline": [
        "linecache.getlines",
        "<builtin>.len"
    ],
    "linecache.getlines": [
        "linecache.clearcache",
        "<builtin>.len",
        "linecache.updatecache"
    ],
    "linecache.lazycache": [
        "<str>.startswith",
        "<builtin>.getattr",
        "<builtin>.len",
        "<str>.endswith"
    ],
    "linecache.updatecache": [
        "tokenize.open",
        "linecache.lazycache",
        "os.stat",
        "<str>.endswith",
        "<builtin>.len",
        "<str>.startswith",
        "posixpath.isabs",
        "posixpath.join",
        "codecs.BufferedIncrementalDecoder.decode"
    ],
    "logging": [
        "logging.Formatter",
        "threading.RLock",
        "logging.StreamHandler.__init__",
        "logging.StringTemplateStyle",
        "logging.LoggerAdapter",
        "logging.StreamHandler",
        "logging.NullHandler",
        "logging.Formatter.__init__",
        "logging.Logger",
        "logging.Manager.__init__",
        "logging.RootLogger.__init__",
        "logging.LogRecord",
        "weakref.WeakValueDictionary.__init__",
        "string",
        "logging._StderrHandler.__init__",
        "logging.Manager",
        "logging.Filter",
        "_weakrefset.WeakSet.__init__",
        "logging.Handler",
        "<builtin>.hasattr",
        "logging.FileHandler",
        "logging.PlaceHolder",
        "logging.RootLogger",
        "logging.BufferingFormatter",
        "posixpath.normcase",
        "logging.Filterer",
        "logging._StderrHandler",
        "logging.PercentStyle",
        "logging.StrFormatStyle"
    ],
    "logging.FileHandler.__init__": [
        "logging.StreamHandler.__init__",
        "posixpath.abspath",
        "logging.Handler.__init__",
        "logging.FileHandler._open"
    ],
    "logging.FileHandler._open": [
        "<builtin>.open"
    ],
    "logging.FileHandler.emit": [
        "logging.StreamHandler.emit",
        "logging.FileHandler._open"
    ],
    "logging.Formatter.__init__": [
        "logging.PercentStyle.__init__",
        "<map>.keys",
        "logging.PercentStyle.validate",
        "<builtin>.ValueError"
    ],
    "logging.Formatter.format": [
        "logging.LogRecord.getMessage",
        "logging.Formatter.usesTime",
        "logging.Formatter.formatStack",
        "logging.Formatter.formatMessage",
        "logging.Formatter.formatException",
        "logging.Formatter.formatTime"
    ],
    "logging.Formatter.formatException": [
        "traceback.print_exception"
    ],
    "logging.Formatter.formatMessage": [
        "logging.PercentStyle.format"
    ],
    "logging.Formatter.usesTime": [
        "logging.PercentStyle.usesTime"
    ],
    "logging.Handler": [
        "<builtin>.property"
    ],
    "logging.Handler.__init__": [
        "logging._addHandlerRef",
        "logging.Filterer.__init__",
        "logging.Handler.createLock",
        "logging._checkLevel"
    ],
    "logging.Handler.acquire": [
        "threading._RLock.acquire"
    ],
    "logging.Handler.createLock": [
        "logging._register_at_fork_reinit_lock",
        "threading.RLock"
    ],
    "logging.Handler.emit": [
        "<builtin>.NotImplementedError"
    ],
    "logging.Handler.format": [
        "logging.Formatter.format"
    ],
    "logging.Handler.handle": [
        "logging.StreamHandler.emit",
        "logging.Handler.release",
        "logging.Handler.acquire",
        "logging.Filterer.filter"
    ],
    "logging.LogRecord.__init__": [
        "sys.modules.get",
        "<builtin>.isinstance",
        "os.getpid",
        "threading.name",
        "time.time",
        "<builtin>.hasattr",
        "logging.getLevelName",
        "threading.current_thread",
        "<builtin>.len",
        "<builtin>.int",
        "posixpath.splitext",
        "posixpath.basename"
    ],
    "logging.LogRecord.getMessage": [
        "<builtin>.str"
    ],
    "logging.Logger.__init__": [
        "logging.Filterer.__init__",
        "logging._checkLevel"
    ],
    "logging.Logger._log": [
        "<builtin>.isinstance",
        "<builtin>.type",
        "logging.Logger.handle",
        "logging.Logger.findCaller",
        "sys.exc_info",
        "logging.Logger.makeRecord"
    ],
    "logging.Logger.addHandler": [
        "logging._releaseLock",
        "<list>.append",
        "logging._acquireLock"
    ],
    "logging.Logger.callHandlers": [
        "sys.stderr.write",
        "logging.Handler.handle"
    ],
    "logging.Logger.debug": [
        "logging.Logger._log",
        "logging.Logger.isEnabledFor"
    ],
    "logging.Logger.findCaller": [
        "posixpath.normcase",
        "traceback.print_stack",
        "<builtin>.hasattr",
        "logging.<lambda>",
        "io.StringIO",
        "logging.currentframe"
    ],
    "logging.Logger.handle": [
        "logging.Logger.callHandlers",
        "logging.Filterer.filter"
    ],
    "logging.Logger.isEnabledFor": [
        "logging.disable",
        "logging._releaseLock",
        "logging.Logger.getEffectiveLevel",
        "logging._acquireLock"
    ],
    "logging.Logger.makeRecord": [
        "logging.LogRecord.__init__",
        "<builtin>.KeyError"
    ],
    "logging.Logger.setLevel": [
        "logging.Manager._clear_cache",
        "logging._checkLevel"
    ],
    "logging.Manager.__init__": [
        "logging.disable"
    ],
    "logging.LoggerAdapter": [
        "<builtin>.property"
    ],
    "logging.Manager._clear_cache": [
        "logging._releaseLock",
        "<builtin>.isinstance",
        "logging._acquireLock"
    ],
    "logging.Manager._fixupParents": [
        "logging.PlaceHolder.__init__",
        "<builtin>.isinstance"
    ],
    "logging.Manager.getLogger": [
        "<builtin>.isinstance",
        "logging._acquireLock",
        "<builtin>.TypeError",
        "logging.Logger.__init__",
        "logging.Manager._fixupParents",
        "logging._releaseLock",
        "logging.Manager._fixupChildren"
    ],
    "logging.PercentStyle": [
        "re.compile"
    ],
    "logging.PercentStyle.format": [
        "<builtin>.ValueError",
        "logging.PercentStyle._format"
    ],
    "logging.RootLogger.__init__": [
        "logging.Logger.__init__"
    ],
    "logging.StrFormatStyle": [
        "re.compile"
    ],
    "logging.StreamHandler.__init__": [
        "logging.Handler.__init__"
    ],
    "logging.StreamHandler.emit": [
        "logging.Handler.format",
        "logging.StreamHandler.flush",
        "logging.Handler.handleError"
    ],
    "logging.StreamHandler.flush": [
        "<builtin>.hasattr",
        "logging.Handler.release",
        "logging.Handler.acquire"
    ],
    "logging._StderrHandler": [
        "<builtin>.property"
    ],
    "logging._StderrHandler.__init__": [
        "logging.Handler.__init__"
    ],
    "logging._addHandlerRef": [
        "logging._releaseLock",
        "<list>.append",
        "logging._acquireLock"
    ],
    "logging._register_at_fork_reinit_lock": [
        "logging._releaseLock",
        "logging._acquireLock",
        "_weakrefset.WeakSet.add"
    ],
    "logging.disable": [
        "logging._checkLevel"
    ],
    "logging.getLogger": [
        "logging.Manager.getLogger"
    ],
    "logging.basicConfig": [
        "<map>.keys",
        "logging._acquireLock",
        "logging.StreamHandler.__init__",
        "logging.Logger.removeHandler",
        "logging.Logger.addHandler",
        "<builtin>.len",
        "logging.Formatter.__init__",
        "logging.Handler.setFormatter",
        "logging.FileHandler.__init__",
        "logging.Logger.setLevel",
        "<builtin>.ValueError"
    ],
    "logging.currentframe": [],
    "logging.error": [
        "logging.Logger.error",
        "logging.basicConfig",
        "<builtin>.len"
    ],
    "logging.Logger.removeHandler": [
        "<list>.remove",
        "logging._acquireLock"
    ],
    "logging._checkLevel": [
        "<builtin>.str",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "logging._acquireLock": [
        "threading._RLock.acquire"
    ],
    "logging.Logger.error": [
        "logging.Logger._log",
        "logging.Logger.isEnabledFor"
    ],
    "logging.exception": [
        "logging.error"
    ],
    "logging.getLevelName": [
        "<map>.get"
    ],
    "networkx": [
        "networkx.generators",
        "networkx.exception",
        "networkx.algorithms",
        "networkx.classes",
        "networkx.convert_matrix",
        "networkx.lazy_imports",
        "networkx.testing.test",
        "networkx.readwrite",
        "networkx.convert",
        "networkx.utils",
        "networkx.relabel",
        "networkx.drawing",
        "networkx.linalg"
    ],
    "networkx.algorithms": [
        "networkx.algorithms.simple_paths",
        "networkx.algorithms.moral",
        "networkx.algorithms.bridges",
        "networkx.algorithms.vitality",
        "networkx.algorithms.wiener",
        "networkx.algorithms.tree.decomposition",
        "networkx.algorithms.matching",
        "networkx.algorithms.link_prediction",
        "networkx.algorithms.minors",
        "networkx.algorithms.distance_measures",
        "networkx.algorithms.planar_drawing",
        "networkx.algorithms.regular",
        "networkx.algorithms.assortativity",
        "networkx.algorithms.mis",
        "networkx.algorithms.lowest_common_ancestors",
        "networkx.algorithms.cuts",
        "networkx.algorithms.bipartite",
        "networkx.algorithms.node_classification",
        "networkx.algorithms.boundary",
        "networkx.algorithms.richclub",
        "networkx.algorithms.swap",
        "networkx.algorithms.shortest_paths",
        "networkx.algorithms.centrality",
        "networkx.algorithms.coloring",
        "networkx.algorithms.d_separation",
        "networkx.algorithms.communicability_alg",
        "networkx.algorithms.reciprocity",
        "networkx.algorithms.tree.branchings",
        "networkx.algorithms.triads",
        "networkx.algorithms.covering",
        "networkx.algorithms.chordal",
        "networkx.algorithms.graph_hashing",
        "networkx.algorithms.tree",
        "networkx.algorithms.dag",
        "networkx.algorithms.hierarchy",
        "networkx.algorithms.operators",
        "networkx.algorithms.traversal",
        "networkx.algorithms.summarization",
        "networkx.algorithms.smetric",
        "networkx.algorithms.tree.recognition",
        "networkx.algorithms.tree.coding",
        "networkx.algorithms.dominating",
        "networkx.algorithms.community",
        "networkx.algorithms.cycles",
        "networkx.algorithms.distance_regular",
        "networkx.algorithms.hybrid",
        "networkx.algorithms.tree.operations",
        "networkx.algorithms.similarity",
        "networkx.algorithms.cluster",
        "networkx.algorithms.efficiency_measures",
        "networkx.algorithms.asteroidal",
        "networkx.algorithms.planarity",
        "networkx.algorithms.approximation",
        "networkx.algorithms.voronoi",
        "networkx.algorithms.sparsifiers",
        "networkx.algorithms.clique",
        "networkx.algorithms.dominance",
        "networkx.algorithms.chains",
        "networkx.algorithms.isomorphism",
        "networkx.algorithms.flow",
        "networkx.algorithms.link_analysis",
        "networkx.algorithms.isolate",
        "networkx.algorithms.structuralholes",
        "networkx.algorithms.graphical",
        "networkx.algorithms.polynomials",
        "networkx.algorithms.smallworld",
        "networkx.algorithms.non_randomness",
        "networkx.algorithms.connectivity",
        "networkx.algorithms.euler",
        "networkx.algorithms.core",
        "networkx.algorithms.tournament"
    ],
    "networkx.algorithms.approximation": [
        "networkx.algorithms.approximation.steinertree",
        "networkx.algorithms.approximation.connectivity",
        "networkx.algorithms.approximation.kcomponents",
        "networkx.algorithms.approximation.distance_measures",
        "networkx.algorithms.approximation.clustering_coefficient",
        "networkx.algorithms.approximation.treewidth",
        "networkx.algorithms.approximation.dominating_set",
        "networkx.algorithms.approximation.vertex_cover",
        "networkx.algorithms.approximation.clique",
        "networkx.algorithms.approximation.traveling_salesman",
        "networkx.algorithms.approximation.matching",
        "networkx.algorithms.approximation.maxcut"
    ],
    "networkx.algorithms.approximation.clique": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.algorithms.approximation.ramsey"
    ],
    "networkx.algorithms.approximation.clustering_coefficient": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "networkx.algorithms.approximation.distance_measures": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.approximation.dominating_set": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.approximation.kcomponents": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.approximation.kcomponents._AntiGraph": [
        "functools.cached_property.__init__"
    ],
    "networkx.algorithms.approximation.matching": [],
    "networkx.algorithms.approximation.maxcut": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.assortativity.correlation": [],
    "networkx.algorithms.assortativity.mixing": [
        "networkx.algorithms.assortativity.pairs"
    ],
    "networkx.algorithms.assortativity.neighbor_degree": [],
    "networkx.algorithms.assortativity.pairs": [],
    "networkx.algorithms.bipartite.basic": [],
    "networkx.algorithms.bipartite.covering": [
        "networkx.utils.decorator.dec",
        "networkx.algorithms.bipartite.matching",
        "networkx.utils.not_implemented_for"
    ],
    "networkx.algorithms.bipartite.matrix": [],
    "networkx.algorithms.bipartite.projection": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality": [
        "networkx.algorithms.centrality.second_order",
        "networkx.algorithms.centrality.reaching",
        "networkx.algorithms.centrality.percolation",
        "networkx.algorithms.centrality.voterank_alg",
        "networkx.algorithms.centrality.betweenness",
        "networkx.algorithms.centrality.degree_alg",
        "networkx.algorithms.centrality.current_flow_closeness",
        "networkx.algorithms.centrality.group",
        "networkx.algorithms.centrality.subgraph_alg",
        "networkx.algorithms.centrality.katz",
        "networkx.algorithms.centrality.current_flow_betweenness",
        "networkx.algorithms.centrality.eigenvector",
        "networkx.algorithms.centrality.trophic",
        "networkx.algorithms.centrality.betweenness_subset",
        "networkx.algorithms.centrality.load",
        "networkx.algorithms.centrality.harmonic",
        "networkx.algorithms.centrality.closeness",
        "networkx.algorithms.centrality.dispersion",
        "networkx.algorithms.centrality.current_flow_betweenness_subset"
    ],
    "networkx.algorithms.bipartite.redundancy": [],
    "networkx.algorithms.bipartite.spectral": [],
    "networkx.algorithms.bridges": [
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality.betweenness": [
        "networkx.utils.py_random_state",
        "networkx.algorithms.shortest_paths.weighted",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.centrality.betweenness_subset": [],
    "networkx.algorithms.centrality.closeness": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.centrality.current_flow_betweenness": [
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "networkx.utils.py_random_state"
    ],
    "networkx.algorithms.centrality.current_flow_closeness": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality.current_flow_betweenness_subset": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.centrality.degree_alg": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality.eigenvector": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality.flow_matrix": [
        "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian",
        "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian",
        "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian",
        "networkx.algorithms.centrality.flow_matrix.InverseLaplacian"
    ],
    "networkx.algorithms.centrality.harmonic": [],
    "networkx.algorithms.centrality.group": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.centrality.katz": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.centrality.load": [],
    "networkx.algorithms.centrality.reaching": [],
    "networkx.algorithms.centrality.subgraph_alg": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.chains": [
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.chordal": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.algorithms.chordal.NetworkXTreewidthBoundExceeded",
        "networkx.algorithms.components"
    ],
    "networkx.algorithms.clique": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.cluster": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.coloring.greedy_coloring": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "networkx.algorithms.coloring.greedy_coloring_with_interchange": [
        "networkx.algorithms.coloring.greedy_coloring_with_interchange.AdjEntry",
        "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node"
    ],
    "networkx.algorithms.coloring": [
        "networkx.algorithms.coloring.equitable_coloring",
        "networkx.algorithms.coloring.greedy_coloring"
    ],
    "networkx.algorithms.communicability_alg": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.community.asyn_fluid.asyn_fluidc": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "<builtin>.max",
        "networkx.utils.decorator.dec",
        "<builtin>.len",
        "<builtin>.iter",
        "networkx.algorithms.components.is_connected",
        "collections.Counter.__init__",
        "<builtin>.enumerate",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.groups"
    ],
    "networkx.algorithms.community": [
        "networkx.algorithms.community.louvain",
        "networkx.algorithms.community.label_propagation",
        "networkx.algorithms.community.centrality",
        "networkx.algorithms.community.asyn_fluid",
        "networkx.algorithms.community.lukes",
        "networkx.algorithms.community.modularity_max",
        "networkx.algorithms.community.kclique",
        "networkx.algorithms.community.kernighan_lin"
    ],
    "networkx.algorithms.community.asyn_lpa": [],
    "networkx.algorithms.community.centrality": [],
    "networkx.algorithms.community.community_generators": [],
    "networkx.algorithms.community.kclique": [],
    "networkx.algorithms.community.kernighan_lin": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.community.label_propagation": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "networkx.algorithms.community.quality": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "networkx.algorithms.community.quality.require_partition",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.algorithms.community.quality.NotAPartition"
    ],
    "networkx.algorithms.components": [
        "networkx.algorithms.components.strongly_connected",
        "networkx.algorithms.components.semiconnected",
        "networkx.algorithms.components.weakly_connected",
        "networkx.algorithms.components.biconnected",
        "networkx.algorithms.components.attracting",
        "networkx.algorithms.components.connected"
    ],
    "networkx.algorithms.community.quality.require_partition": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "networkx.algorithms.components.attracting": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.components.biconnected": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.components.connected": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.components.semiconnected": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.components.strongly_connected": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.components.weakly_connected": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.connectivity": [
        "networkx.algorithms.connectivity.cuts",
        "networkx.algorithms.connectivity.stoerwagner",
        "networkx.algorithms.connectivity.kcutsets",
        "networkx.algorithms.connectivity.edge_kcomponents",
        "networkx.algorithms.connectivity.connectivity",
        "networkx.algorithms.connectivity.edge_augmentation",
        "networkx.algorithms.connectivity.kcomponents",
        "networkx.algorithms.connectivity.disjoint_paths"
    ],
    "networkx.algorithms.connectivity.cuts": [],
    "networkx.algorithms.connectivity.edge_kcomponents": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.algorithms.connectivity.edge_kcomponents.EdgeComponentAuxGraph",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.connectivity.kcomponents": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.connectivity.kcutsets": [],
    "networkx.algorithms.connectivity.stoerwagner": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.connectivity.utils": [],
    "networkx.algorithms.core": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.covering": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.cycles": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.d_separation": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.dag": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.dag.topological_generations": [
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "networkx.NetworkXError",
        "networkx.classes.digraph.DiGraph.is_directed",
        "networkx.classes.digraph.DiGraph.successors",
        "<builtin>.len",
        "networkx.classes.digraph.DiGraph.in_degree",
        "<builtin>.RuntimeError",
        "networkx.algorithms.centrality.closeness.NetworkXError"
    ],
    "networkx.algorithms.dag.topological_sort": [
        "networkx.algorithms.dag.topological_generations"
    ],
    "networkx.algorithms.distance_measures": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.distance_regular": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.dominance": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.efficiency_measures": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.dominating": [],
    "networkx.algorithms.efficiency_measures.efficiency": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "networkx.shortest_path_length"
    ],
    "networkx.algorithms.flow": [
        "networkx.algorithms.flow.capacityscaling",
        "networkx.algorithms.flow.maxflow",
        "networkx.algorithms.flow.gomory_hu",
        "networkx.algorithms.flow.mincost",
        "networkx.algorithms.flow.networksimplex"
    ],
    "networkx.algorithms.euler": [],
    "networkx.algorithms.flow.boykovkolmogorov": [
        "networkx.algorithms.flow.utils"
    ],
    "networkx.algorithms.flow.capacityscaling": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.flow.dinitz_alg": [],
    "networkx.algorithms.flow.edmondskarp": [],
    "networkx.algorithms.flow.gomory_hu": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.flow.maxflow": [
        "networkx.algorithms.flow.boykovkolmogorov",
        "networkx.algorithms.flow.dinitz_alg",
        "networkx.algorithms.flow.shortestaugmentingpath",
        "networkx.algorithms.flow.preflowpush",
        "networkx.algorithms.flow.edmondskarp"
    ],
    "networkx.algorithms.flow.mincost": [],
    "networkx.algorithms.flow.networksimplex": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.isomorphism": [
        "networkx.algorithms.isomorphism.temporalisomorphvf2",
        "networkx.algorithms.isomorphism.isomorph",
        "networkx.algorithms.isomorphism.vf2userfunc",
        "networkx.algorithms.isomorphism.tree_isomorphism",
        "networkx.algorithms.isomorphism.ismags",
        "networkx.algorithms.isomorphism.matchhelpers"
    ],
    "networkx.algorithms.isomorphism.tree_isomorphism": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.link_analysis": [
        "networkx.algorithms.link_analysis.pagerank_alg",
        "networkx.algorithms.link_analysis.hits_alg"
    ],
    "networkx.algorithms.flow.product": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.link_analysis.pagerank_alg.pagerank_scipy": [
        "<builtin>.zip",
        "networkx.exception.PowerIterationFailedConvergence.__init__",
        "numpy.core.multiarray.where",
        "<builtin>.list",
        "networkx.convert_matrix.to_scipy_sparse_array",
        "scipy.sparse._compressed._cs_matrix.sum",
        "<builtin>.len",
        "numpy.core.fromnumeric.repeat",
        "numpy.core.numeric.where",
        "<builtin>.map",
        "warnings.warn",
        "<builtin>.range",
        "<builtin>.dict",
        "<builtin>.sum",
        "scipy.sparse._base.spmatrix.sum",
        "scipy.sparse._dia.dia_matrix.sum",
        "scipy.sparse"
    ],
    "networkx.algorithms.minors.contraction": [],
    "networkx.algorithms.moral": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.flow.shortestaugmentingpath": [],
    "networkx.algorithms.flow.utils": [
        "networkx.algorithms.flow.utils.GlobalRelabelThreshold",
        "networkx.algorithms.flow.utils.Level",
        "networkx.algorithms.flow.utils.CurrentEdge"
    ],
    "networkx.algorithms.graphical": [],
    "networkx.algorithms.hierarchy": [],
    "networkx.algorithms.hybrid": [],
    "networkx.algorithms.isolate": [],
    "networkx.algorithms.isomorphism.isomorph": [],
    "networkx.algorithms.isomorphism.isomorphvf2": [
        "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher",
        "networkx.algorithms.isomorphism.isomorphvf2.DiGMState",
        "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher",
        "networkx.algorithms.isomorphism.isomorphvf2.GMState"
    ],
    "networkx.algorithms.isomorphism.matchhelpers": [
        "networkx.algorithms.isomorphism.matchhelpers.copyfunc",
        "<str>.replace"
    ],
    "networkx.algorithms.isomorphism.temporalisomorphvf2": [
        "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingGraphMatcher",
        "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingDiGraphMatcher"
    ],
    "networkx.algorithms.isomorphism.vf2userfunc": [
        "networkx.algorithms.isomorphism.vf2userfunc.MultiDiGraphMatcher",
        "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher",
        "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher",
        "networkx.algorithms.isomorphism.vf2userfunc.MultiGraphMatcher"
    ],
    "networkx.algorithms.link_analysis.hits_alg": [],
    "networkx.algorithms.link_analysis.pagerank_alg": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.link_analysis.pagerank_alg.pagerank": [
        "networkx.utils.decorator.fun",
        "networkx.algorithms.link_analysis.pagerank_alg.pagerank_scipy",
        "networkx.classes.graph.Graph.is_directed",
        "networkx.classes.graph.Graph.__iter__",
        "networkx.classes.graph.Graph.number_of_nodes",
        "networkx.classes.coreviews.AtlasView.__getitem__",
        "networkx.classes.graph.Graph.__getitem__",
        "networkx.classes.graph.Graph.to_directed",
        "networkx.classes.graph.Graph.__len__",
        "networkx.classes.coreviews.AtlasView.__iter__"
    ],
    "networkx.algorithms.link_prediction": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.lowest_common_ancestors": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.matching": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.minors": [
        "networkx.algorithms.minors.contraction"
    ],
    "networkx.algorithms.mis": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "networkx.utils.py_random_state",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.non_randomness": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.operators": [
        "networkx.algorithms.operators.binary",
        "networkx.algorithms.operators.all",
        "networkx.algorithms.operators.product",
        "networkx.algorithms.operators.unary"
    ],
    "networkx.algorithms.operators.product": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.operators.all": [],
    "networkx.algorithms.operators.binary": [],
    "networkx.algorithms.operators.unary": [],
    "networkx.algorithms.reciprocity": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.richclub": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.shortest_paths": [
        "networkx.algorithms.shortest_paths.astar",
        "networkx.algorithms.shortest_paths.unweighted",
        "networkx.algorithms.shortest_paths.dense"
    ],
    "networkx.algorithms.shortest_paths.astar": [
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.shortest_paths.dense": [],
    "networkx.algorithms.shortest_paths.generic": [],
    "networkx.algorithms.shortest_paths.unweighted": [],
    "networkx.algorithms.shortest_paths.weighted": [],
    "networkx.algorithms.simple_paths": [
        "networkx.algorithms.simple_paths.PathBuffer",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.smetric": [],
    "networkx.algorithms.structuralholes": [],
    "networkx.algorithms.swap": [],
    "networkx.algorithms.tournament": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "networkx.utils.py_random_state",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.traversal.beamsearch": [],
    "networkx.algorithms.traversal.breadth_first_search": [],
    "networkx.algorithms.traversal.depth_first_search": [],
    "networkx.algorithms.tree": [],
    "networkx.algorithms.tree.branchings": [
        "networkx.algorithms.tree.branchings.Edmonds",
        "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey",
        "networkx.utils.py_random_state",
        "<builtin>.float",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state"
    ],
    "networkx.algorithms.tree.coding": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "coding.NotATree",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.tree.decomposition": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.algorithms.tree.mst": [
        "networkx.utils.not_implemented_for",
        "dataclasses",
        "networkx.utils.decorator.dec",
        "networkx.utils.py_random_state",
        "queue",
        "networkx.utils.decorators.argmap.__init__"
    ],
    "networkx.algorithms.tree.operations": [],
    "networkx.algorithms.tree.recognition": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.algorithms.triads": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec",
        "random",
        "<builtin>.enumerate",
        "networkx.utils.decorators.argmap.__init__"
    ],
    "networkx.classes": [
        "networkx.classes.graph",
        "networkx.classes.digraph",
        "networkx.classes.multidigraph",
        "networkx.classes.multigraph",
        "networkx.classes.function",
        "networkx.classes.ordered"
    ],
    "networkx.algorithms.vitality": [],
    "networkx.algorithms.voronoi": [],
    "networkx.algorithms.wiener": [],
    "networkx.classes.coreviews": [
        "networkx.classes.coreviews.UnionAdjacency",
        "networkx.classes.coreviews.UnionMultiAdjacency",
        "networkx.classes.coreviews.UnionAtlas",
        "networkx.classes.coreviews.AdjacencyView",
        "networkx.classes.coreviews.UnionMultiInner",
        "abc.__new__",
        "networkx.classes.coreviews.AtlasView",
        "networkx.classes.coreviews.FilterMultiAdjacency",
        "networkx.classes.coreviews.ReadOnlyGraph",
        "networkx.classes.coreviews.FilterMultiInner",
        "networkx.classes.coreviews.FilterAtlas",
        "networkx.classes.coreviews.MultiAdjacencyView",
        "networkx.classes.coreviews.FilterAdjacency"
    ],
    "networkx.classes.coreviews.AdjacencyView.__getitem__": [
        "networkx.classes.coreviews.AtlasView.__init__"
    ],
    "networkx.classes.digraph": [
        "networkx.classes.digraph.DiGraph"
    ],
    "networkx.classes.digraph.DiGraph.__init__": [
        "networkx.convert.to_networkx_graph"
    ],
    "networkx.classes.digraph.DiGraph.add_nodes_from": [
        "networkx.classes.coreviews.AtlasView.__iter__",
        "<builtin>.ValueError"
    ],
    "networkx.classes.digraph.DiGraph.adj": [
        "networkx.classes.coreviews.AtlasView.__init__"
    ],
    "networkx.classes.digraph.edges": [
        "networkx.classes.reportviews.OutEdgeView.__init__"
    ],
    "networkx.classes.digraph.out_degree": [
        "networkx.classes.reportviews.DiDegreeView.__init__"
    ],
    "networkx.classes.digraph.succ": [
        "networkx.classes.coreviews.AtlasView.__init__"
    ],
    "networkx.classes.filters": [
        "networkx.classes.filters.show_nodes"
    ],
    "networkx.classes.function": [
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.classes.graph": [
        "networkx.classes.graph.Graph"
    ],
    "networkx.classes.graph.Graph.__getitem__": [
        "networkx.classes.coreviews.AdjacencyView.__getitem__",
        "networkx.classes.digraph.DiGraph.adj"
    ],
    "networkx.classes.graph.Graph.adj": [
        "networkx.classes.coreviews.AtlasView.__init__"
    ],
    "networkx.classes.graph.Graph.nodes": [
        "networkx.classes.reportviews.NodeView.__init__"
    ],
    "networkx.classes.graph.Graph.to_directed": [
        "networkx.classes.graphviews.generic_graph_view",
        "networkx.classes.graph.Graph.to_directed_class",
        "networkx.classes.digraph.DiGraph.__init__",
        "networkx.classes.digraph.DiGraph.add_edges_from",
        "networkx.classes.digraph.DiGraph.add_nodes_from",
        "networkx.classes.graph.Graph.adj",
        "copy.deepcopy",
        "_collections_abc.Mapping.items"
    ],
    "networkx.classes.graphviews": [
        "networkx.classes.graphviews.SubMultiGraph",
        "networkx.classes.graphviews.DiGraphView",
        "networkx.classes.graphviews.ReverseView",
        "networkx.classes.graphviews.GraphView",
        "networkx.classes.graphviews.SubGraph",
        "networkx.classes.graphviews.MultiReverseView",
        "networkx.classes.graphviews.SubDiGraph",
        "networkx.classes.graphviews.MultiDiGraphView",
        "networkx.classes.graphviews.MultiGraphView",
        "networkx.classes.graphviews.SubMultiDiGraph"
    ],
    "networkx.classes.multidigraph": [
        "networkx.classes.multidigraph.MultiDiGraph"
    ],
    "networkx.classes.multigraph": [
        "networkx.classes.multigraph.MultiGraph"
    ],
    "networkx.classes.ordered": [
        "<list>.extend",
        "networkx.classes.ordered.OrderedMultiDiGraph",
        "networkx.classes.ordered.OrderedMultiGraph",
        "networkx.classes.ordered.OrderedGraph",
        "networkx.classes.ordered.OrderedDiGraph"
    ],
    "networkx.classes.reportviews": [
        "networkx.classes.reportviews.InDegreeView",
        "networkx.classes.reportviews.InEdgeDataView",
        "networkx.classes.reportviews.InEdgeView",
        "networkx.classes.reportviews.InMultiEdgeView",
        "networkx.classes.reportviews.OutMultiDegreeView",
        "networkx.classes.reportviews.MultiEdgeDataView",
        "networkx.classes.reportviews.OutEdgeDataView",
        "networkx.classes.reportviews.EdgeView",
        "networkx.classes.reportviews.OutMultiEdgeDataView",
        "networkx.classes.reportviews.EdgeDataView",
        "networkx.classes.reportviews.MultiEdgeView",
        "networkx.classes.reportviews.OutDegreeView",
        "networkx.classes.reportviews.DiMultiDegreeView",
        "networkx.classes.reportviews.OutMultiEdgeView",
        "networkx.classes.reportviews.NodeView",
        "networkx.classes.reportviews.InMultiEdgeDataView",
        "networkx.classes.reportviews.OutEdgeView",
        "networkx.classes.reportviews.InMultiDegreeView",
        "networkx.classes.reportviews.DiDegreeView",
        "networkx.classes.reportviews.MultiDegreeView",
        "networkx.classes.reportviews.NodeDataView",
        "abc.__new__",
        "networkx.classes.reportviews.DegreeView"
    ],
    "networkx.classes.reportviews.DiDegreeView.__call__": [
        "networkx.classes.reportviews.OutDegreeView.__getitem__",
        "networkx.classes.reportviews.DiDegreeView.__init__"
    ],
    "networkx.classes.reportviews.OutEdgeView.__call__": [
        "networkx.classes.reportviews.OutEdgeDataView.__init__"
    ],
    "networkx.classes.reportviews.OutEdgeView.__init__": [
        "<builtin>.hasattr",
        "networkx.classes.digraph.succ"
    ],
    "networkx.convert": [],
    "networkx.convert._prep_create_using": [
        "networkx.classes.digraph.DiGraph.clear",
        "networkx.classes.graph.Graph.__init__"
    ],
    "networkx.convert.from_dict_of_dicts": [
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "networkx.classes.digraph.DiGraph.add_edges_from",
        "networkx.classes.digraph.DiGraph.add_nodes_from",
        "_collections_abc.Mapping.items",
        "networkx.convert._prep_create_using",
        "<builtin>.set",
        "networkx.empty_graph"
    ],
    "networkx.convert.to_networkx_graph": [
        "networkx.convert.from_edgelist",
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "networkx.drawing.nx_agraph.from_agraph",
        "networkx.NetworkXError",
        "<builtin>.isinstance",
        "networkx.classes.graph.Graph.nodes",
        "<builtin>.hasattr",
        "<builtin>.TypeError",
        "networkx.convert.from_dict_of_dicts",
        "<builtin>.type",
        "_collections_abc.Mapping.items",
        "networkx.from_scipy_sparse_matrix",
        "warnings.warn",
        "networkx.from_numpy_array",
        "networkx.from_pandas_edgelist",
        "networkx.from_pandas_adjacency",
        "networkx.classes.digraph.DiGraph.adj"
    ],
    "networkx.convert_matrix": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.convert_matrix.from_numpy_matrix": [
        "networkx.classes.graph.Graph.add_edges_from",
        "networkx.convert_matrix.from_numpy_array",
        "networkx.classes.graph.Graph.add_nodes_from",
        "networkx.convert._prep_create_using",
        "warnings.warn",
        "networkx.classes.graph.Graph.is_multigraph"
    ],
    "networkx.drawing.layout": [
        "networkx.utils.np_random_state"
    ],
    "networkx.drawing.nx_agraph": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.drawing.nx_pydot": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.drawing.nx_pylab": [],
    "networkx.exception": [
        "networkx.exception.NetworkXNoPath",
        "networkx.exception.NetworkXUnbounded",
        "networkx.exception.NodeNotFound",
        "networkx.exception.NetworkXError",
        "networkx.exception.NetworkXUnfeasible",
        "networkx.exception.NetworkXPointlessConcept",
        "networkx.exception.NetworkXNoCycle",
        "networkx.exception.NetworkXNotImplemented",
        "networkx.exception.PowerIterationFailedConvergence",
        "networkx.exception.NetworkXException",
        "networkx.exception.AmbiguousSolution",
        "networkx.exception.ExceededMaxIterations",
        "networkx.exception.NetworkXAlgorithmError"
    ],
    "networkx.generators": [
        "networkx.utils.decorators.nodes_or_number",
        "networkx.utils.decorator.dec"
    ],
    "networkx.generators.atlas": [
        "posixpath.dirname",
        "posixpath.join",
        "posixpath.abspath"
    ],
    "networkx.generators.classic": [
        "numbers",
        "networkx.utils.decorators.nodes_or_number",
        "networkx.utils.decorator.dec"
    ],
    "networkx.generators.degree_seq": [
        "networkx.generators.degree_seq.DegreeSequenceRandomGraph"
    ],
    "networkx.generators.directed": [],
    "networkx.generators.duplication": [
        "networkx.utils.py_random_state"
    ],
    "networkx.generators.ego": [],
    "networkx.generators.expanders": [],
    "networkx.generators.geometric": [
        "networkx.utils.decorators.nodes_or_number",
        "bisect",
        "networkx.utils.decorator.dec",
        "networkx.utils.py_random_state"
    ],
    "networkx.generators.intersection": [
        "networkx.utils.py_random_state"
    ],
    "networkx.generators.joint_degree_seq": [],
    "networkx.generators.lattice": [
        "networkx.utils.nodes_or_number",
        "networkx.utils.decorator.dec"
    ],
    "networkx.generators.nonisomorphic_trees": [],
    "networkx.generators.random_clustered": [
        "networkx.utils.py_random_state"
    ],
    "networkx.generators.random_graphs": [
        "networkx.utils.py_random_state"
    ],
    "networkx.generators.small": [],
    "networkx.generators.social": [],
    "networkx.generators.stochastic": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.generators.stochastic.stochastic_graph": [
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "networkx.classes.digraph.edges",
        "networkx.classes.reportviews.DiDegreeView.__call__",
        "networkx.classes.reportviews.OutEdgeDataView.__iter__",
        "networkx.classes.digraph.DiGraph.__init__",
        "networkx.classes.reportviews.OutEdgeView.__call__",
        "networkx.classes.digraph.out_degree",
        "networkx.classes.multidigraph.MultiDiGraph",
        "networkx.classes.reportviews.OutDegreeView.__iter__",
        "<builtin>.dict"
    ],
    "networkx.generators.triads": [],
    "networkx.linalg.algebraicconnectivity": [
        "networkx.utils.np_random_state",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.linalg.algebraicconnectivity._LUSolver",
        "networkx.utils.decorator.dec",
        "re.compile",
        "networkx.linalg.algebraicconnectivity._CholeskySolver",
        "networkx.linalg.algebraicconnectivity._PCGSolver"
    ],
    "networkx.linalg.algebraicconnectivity._CholeskySolver": [],
    "networkx.linalg.algebraicconnectivity._LUSolver": [],
    "networkx.linalg.attrmatrix": [],
    "networkx.linalg.graphmatrix": [],
    "networkx.linalg.laplacianmatrix": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.linalg.modularitymatrix": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.linalg.spectrum": [],
    "networkx.readwrite.adjlist": [
        "networkx.utils.decorator.dec",
        "networkx.utils.decorators.open_file"
    ],
    "networkx.readwrite.edgelist": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.gexf": [
        "networkx.utils.decorator.dec",
        "networkx.readwrite.gexf.GEXF",
        "networkx.readwrite.gexf.GEXFReader",
        "networkx.readwrite.gexf.GEXFWriter",
        "xml.etree.ElementTree",
        "networkx.utils.open_file"
    ],
    "networkx.readwrite.gml": [
        "ast",
        "networkx.utils.decorator.dec",
        "ast.literal_eval",
        "html.entities",
        "typing",
        "networkx.utils.open_file"
    ],
    "networkx.readwrite.gpickle": [
        "pickle",
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.graph6": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.graphml": [
        "networkx.readwrite.graphml.IncrementalElement",
        "networkx.utils.decorator.dec",
        "networkx.readwrite.graphml.GraphMLWriterLxml",
        "networkx.readwrite.graphml.GraphML",
        "networkx.readwrite.graphml.GraphMLWriter",
        "networkx.readwrite.graphml.GraphMLReader",
        "networkx.utils.open_file"
    ],
    "networkx.readwrite.json_graph.adjacency": [
        "<builtin>.dict"
    ],
    "networkx.readwrite.json_graph.cytoscape": [],
    "networkx.readwrite.json_graph.jit": [
        "networkx.utils.not_implemented_for",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.json_graph.node_link": [
        "<builtin>.dict"
    ],
    "networkx.readwrite.leda": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.multiline_adjlist": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.nx_shp": [],
    "networkx.readwrite.nx_yaml": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.pajek": [
        "networkx.utils.open_file",
        "networkx.utils.decorator.dec"
    ],
    "networkx.readwrite.sparse6": [
        "networkx.utils.not_implemented_for",
        "networkx.readwrite.graph6",
        "networkx.utils.decorator.dec",
        "networkx.utils.open_file"
    ],
    "networkx.relabel": [],
    "networkx.release": [
        "networkx.release.get_info",
        "posixpath.abspath",
        "posixpath.split"
    ],
    "networkx.release.get_info": [
        "networkx.release.get_revision"
    ],
    "networkx.release.get_revision": [
        "posixpath.join",
        "genericpath.isdir"
    ],
    "networkx.utils.contextmanagers": [
        "contextlib.contextmanager"
    ],
    "networkx.utils.decorator": [
        "networkx.utils.decorator.FunctionMaker",
        "networkx.utils.decorator.decorator",
        "re.compile",
        "abc.__new__",
        "networkx.utils.decorator.ContextManager"
    ],
    "networkx.utils.decorator.dec": [
        "networkx.utils.decorator.decorate"
    ],
    "networkx.utils.decorator.decorate": [
        "inspect.iscoroutinefunction",
        "inspect.signature",
        "inspect.isgeneratorfunction"
    ],
    "networkx.utils.decorator.decorator": [
        "inspect.signature",
        "inspect.parameters",
        "inspect.Signature.replace"
    ],
    "networkx.utils.decorator.fix": [
        "inspect.Signature.bind",
        "inspect.args",
        "inspect.BoundArguments.apply_defaults",
        "inspect.kwargs"
    ],
    "networkx.utils.decorator.fun": [
        "networkx.utils.decorators.not_implemented_for._not_implemented_for",
        "networkx.utils.decorator.fix"
    ],
    "networkx.utils.decorators": [],
    "networkx.utils.decorators.nodes_or_number": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorator.decorator",
        "<builtin>.iter"
    ],
    "networkx.utils.decorators.not_implemented_for": [
        "<builtin>.set",
        "networkx.utils.decorator.decorator",
        "networkx.utils.decorators.argmap.__init__",
        "<builtin>.ValueError",
        "<builtin>.KeyError"
    ],
    "networkx.utils.decorators.not_implemented_for._not_implemented_for": [
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "networkx.classes.digraph.DiGraph.is_directed",
        "networkx.classes.graph.Graph.is_directed",
        "networkx.generators.stochastic.stochastic_graph",
        "networkx.algorithms.link_analysis.pagerank_alg.pagerank",
        "networkx.NetworkXNotImplemented",
        "networkx.classes.graph.Graph.is_multigraph"
    ],
    "networkx.utils.decorators.open_file": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorator.decorator"
    ],
    "networkx.utils.heaps": [
        "networkx.utils.heaps.PairingHeap",
        "networkx.utils.heaps.BinaryHeap",
        "networkx.utils.heaps.MinHeap"
    ],
    "networkx.utils.heaps.BinaryHeap": [
        "networkx.utils.heaps._inherit_doc",
        "networkx.utils.heaps.func"
    ],
    "networkx.utils.heaps.MinHeap": [
        "networkx.utils.heaps._Item"
    ],
    "networkx.utils.heaps.PairingHeap": [
        "networkx.utils.heaps._Node",
        "networkx.utils.heaps._inherit_doc",
        "networkx.utils.heaps.func"
    ],
    "networkx.utils.misc": [
        "uuid"
    ],
    "networkx.utils.random_sequence": [
        "networkx.utils.py_random_state"
    ],
    "networkx.utils.rcm": [],
    "networkx.utils.union_find": [
        "networkx.utils.union_find.UnionFind"
    ],
    "ntpath": [
        "<builtin>.hasattr",
        "genericpath"
    ],
    "ntpath.isabs": [
        "<str>.replace",
        "<builtin>.isinstance",
        "<builtin>.len",
        "ntpath.splitdrive",
        "<str>.startswith",
        "ntpath._get_bothseps"
    ],
    "ntpath.basename": [
        "ntpath.split"
    ],
    "ntpath.dirname": [
        "ntpath.split"
    ],
    "ntpath.expanduser": [
        "ntpath.dirname",
        "<builtin>.isinstance",
        "os._fscodec.fsdecode",
        "os._fscodec.fsencode",
        "os._fspath",
        "<builtin>.len",
        "<str>.startswith",
        "ntpath.join",
        "ntpath._get_bothseps"
    ],
    "inspect._signature_get_user_defined_method": [
        "<builtin>.getattr",
        "<builtin>.isinstance"
    ],
    "inspect.cleandoc": [
        "<builtin>.len",
        "<str>.expandtabs",
        "<builtin>.range",
        "<builtin>.min",
        "<str>.split"
    ],
    "logging.Filterer.filter": [
        "<builtin>.hasattr"
    ],
    "threading.RLock": [
        "_thread.RLock",
        "threading._RLock.__init__"
    ],
    "threading.current_thread": [
        "threading._DummyThread.__init__",
        "_thread.get_ident"
    ],
    "threading._RLock.acquire": [
        "_thread.get_ident"
    ],
    "inspect.isbuiltin": [
        "<builtin>.isinstance"
    ],
    "inspect.isclass": [
        "<builtin>.isinstance"
    ],
    "inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "functools.cached_property.__init__": [
        "_thread.RLock"
    ],
    "functools.update_wrapper": [
        "<builtin>.setattr",
        "<builtin>.getattr"
    ],
    "functools.lru_cache": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "functools._lru_cache_wrapper",
        "functools.update_wrapper",
        "<builtin>.callable"
    ],
    "calendar.Calendar": [
        "<builtin>.property"
    ],
    "ntpath.join": [
        "<str>.lower",
        "<builtin>.isinstance",
        "<map>.lower",
        "os._fspath",
        "ntpath.splitdrive",
        "genericpath._check_arg_types",
        "<builtin>.map"
    ],
    "ntpath.normcase": [
        "<str>.lower",
        "<str>.replace",
        "<builtin>.isinstance",
        "os._fspath"
    ],
    "ntpath.normpath": [
        "ntpath.splitdrive",
        "<str>.lstrip",
        "<str>.append",
        "<str>.endswith",
        "<str>.startswith",
        "<str>.split",
        "os._fspath",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "ntpath.realpath": [
        "<builtin>.len",
        "<builtin>.isinstance"
    ],
    "ntpath.split": [
        "ntpath._get_bothseps",
        "<builtin>.len",
        "ntpath.splitdrive"
    ],
    "ntpath.splitdrive": [
        "<str>.replace",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<str>.find"
    ],
    "ntpath.splitext": [
        "os._fspath",
        "genericpath._splitext",
        "<builtin>.isinstance"
    ],
    "numbers": [
        "abc.ABCMeta.register",
        "numbers.Number",
        "numbers.Rational",
        "abc.__new__",
        "numbers.Real",
        "numbers.Complex",
        "numbers.Integral"
    ],
    "numbers.Complex": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "numbers.Integral": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "numbers.Rational": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "numbers.Real": [
        "abc.abstractmethod",
        "<builtin>.property"
    ],
    "numpy": [
        "<list>.remove",
        "<builtin>.int",
        "<map>.update",
        "_collections_abc.Mapping.get",
        "numpy._pytesttester.PytestTester.__init__",
        "<builtin>.ImportError",
        "<builtin>.getattr",
        "<builtin>.str",
        "numpy._pytesttester",
        "warnings.filterwarnings",
        "numpy.__config__",
        "warnings.catch_warnings.__init__",
        "numpy.core.getlimits._register_known_types",
        "<builtin>.RuntimeError",
        "warnings.catch_warnings.__enter__",
        "warnings.catch_warnings.__exit__",
        "<builtin>.tuple",
        "numpy._mac_os_check",
        "<list>.extend",
        "<builtin>.len",
        "numpy._sanity_check"
    ],
    "numpy.__config__": [
        "os.add_dll_directory",
        "posixpath.dirname",
        "posixpath.join",
        "posixpath.isdir"
    ],
    "numpy._globals": [
        "numpy._globals.ModuleDeprecationWarning",
        "numpy._globals._NoValueType",
        "enum.__prepare__",
        "<builtin>.globals",
        "enum.EnumMeta.__setattr__",
        "<builtin>.RuntimeError",
        "numpy._globals._CopyMode",
        "numpy._globals.__new__",
        "numpy._globals.VisibleDeprecationWarning",
        "enum.__new__"
    ],
    "numpy._globals._CopyMode": [
        "enum._EnumDict.__setitem__"
    ],
    "numpy._mac_os_check": [],
    "numpy._pytesttester": [
        "numpy._pytesttester.PytestTester"
    ],
    "numpy._sanity_check": [
        "<builtin>.AssertionError",
        "<builtin>.RuntimeError",
        "numpy.core.numeric.ones",
        "<builtin>.abs"
    ],
    "numpy._version": [
        "numpy._version.NumpyVersion"
    ],
    "numpy._version.get_versions": [
        "json.loads"
    ],
    "numpy.compat._inspect.<lambda>": [
        "numpy._globals._NoValueType.__repr__"
    ],
    "numpy.compat._inspect.formatargspec": [
        "<list>.append",
        "numpy.compat._inspect.<lambda>",
        "<builtin>.len",
        "<builtin>.range",
        "numpy.compat._inspect.strseq"
    ],
    "numpy.compat._inspect.getargs": [
        "<builtin>.range",
        "<builtin>.list",
        "numpy.compat._inspect.iscode",
        "<builtin>.TypeError"
    ],
    "numpy.compat._inspect.getargspec": [
        "numpy.compat._inspect.getargs",
        "numpy.compat._inspect.isfunction",
        "numpy.compat._inspect.ismethod",
        "<builtin>.TypeError"
    ],
    "numpy.compat._pep440": [
        "numpy.compat._pep440.NegativeInfinity",
        "numpy.compat._pep440.InvalidVersion",
        "re.compile",
        "numpy.compat._pep440._BaseVersion",
        "numpy.compat._pep440.Infinity",
        "numpy.compat._pep440.Version",
        "collections.namedtuple",
        "numpy.compat._pep440.LegacyVersion"
    ],
    "numpy.compat._pep440.Version": [
        "re.compile",
        "enum.IntFlag.__or__",
        "<builtin>.property"
    ],
    "numpy.compat.py3k": [
        "numpy.compat.py3k.contextlib_nullcontext"
    ],
    "numpy.core": [
        "<builtin>.ImportError",
        "<list>.append",
        "_collections_abc.Mapping.__contains__",
        "<builtin>.hasattr",
        "os._Environ.__delitem__",
        "numpy.core.multiarray.set_typeDict",
        "<builtin>.type",
        "os._Environ.__setitem__",
        "copyreg.pickle",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.core._add_newdocs": [
        "numpy.core._add_newdocs.refer_to_array_attribute",
        "<str>.replace",
        "numpy.core.function_base.add_newdoc"
    ],
    "numpy.core._add_newdocs_scalars": [
        "numpy.core.function_base.add_newdoc",
        "numpy.core._add_newdocs_scalars.numericnumpy.core._type_aliases",
        "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type",
        "numpy.core.dtype"
    ],
    "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type": [
        "<builtin>.getattr",
        "platform.machine",
        "numpy.core.function_base.add_newdoc",
        "platform.system",
        "numpy.core.dtype",
        "<str>.strip"
    ],
    "numpy.core._add_newdocs_scalars.numericnumpy.core._type_aliases": [
        "numpy.core._add_newdocs_scalars.numericnumpy.core._type_aliases.type_aliases_gen"
    ],
    "numpy.core._asarray": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.decorator"
    ],
    "numpy.core._dtype": [],
    "numpy.core._dtype_ctypes": [],
    "numpy.core._dtype_ctypes.dtype_from_ctypes_type": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.NotImplementedError",
        "<builtin>.TypeError",
        "numpy.core._dtype_ctypes._from_ctypes_structure",
        "numpy.core._dtype_ctypes._from_ctypes_array",
        "numpy.core._dtype_ctypes._from_ctypes_union",
        "<builtin>.issubclass",
        "numpy.core._dtype_ctypes._from_ctypes_scalar"
    ],
    "numpy.core._exceptions": [
        "numpy.core._exceptions.AxisError",
        "numpy.core._exceptions._UFuncInputCastingError",
        "numpy.core._exceptions._ArrayMemoryError",
        "numpy.core._exceptions._UFuncNoLoopError",
        "numpy.core.overrides.decorator",
        "numpy.core._exceptions._UFuncBinaryResolutionError",
        "numpy.core._exceptions._UFuncCastingError",
        "numpy.core._exceptions.UFuncTypeError",
        "numpy.core._exceptions._UFuncOutputCastingError",
        "numpy.core._exceptions.TooHardError",
        "numpy.core.overrides.set_module",
        "numpy.core._exceptions._display_as_base"
    ],
    "numpy.core._internal": [
        "numpy.core._internal._ctypes",
        "<map>.keys",
        "numpy.core._internal._Stream",
        "numpy.core._internal.dummy_ctype",
        "re.compile",
        "numpy.core._internal._missing_ctypes",
        "platform.python_implementation"
    ],
    "numpy.core._internal._missing_ctypes": [
        "numpy.core._internal.c_void_p"
    ],
    "numpy.core._machar": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "<builtin>.print",
        "numpy.core._machar.MachAr"
    ],
    "numpy.core._methods": [
        "<map>.update"
    ],
    "numpy.core._methods._sum": [],
    "numpy.core._type_aliases": [
        "numpy.core.multiarray.typeinfo.items",
        "<builtin>.isinstance",
        "numpy.core._type_aliases._set_up_aliases",
        "<builtin>.list",
        "numpy.core._type_aliases._add_integer_aliases",
        "numpy.core._type_aliases._add_aliases",
        "<map>.items",
        "numpy.core._type_aliases._set_array_types",
        "numpy.core._type_aliases._add_types",
        "numpy.core._string_helpers.english_lower"
    ],
    "numpy.core._type_aliases._add_aliases": [
        "<map>.items",
        "numpy.core._type_aliases.bitname"
    ],
    "numpy.core._type_aliases._bits_of": [
        "<map>.values",
        "<builtin>.next",
        "<builtin>.ValueError",
        "numpy.core.multiarray.dtype"
    ],
    "numpy.core._type_aliases._set_array_types": [
        "numpy.core._type_aliases._add_array_type",
        "numpy.core.multiarray.dtype",
        "<builtin>.len"
    ],
    "numpy.core._type_aliases.bitname": [
        "numpy.core._dtype._kind_name",
        "numpy.core.multiarray.dtype",
        "numpy.core._type_aliases._bits_of"
    ],
    "numpy.core._ufunc_config": [
        "numpy.core.overrides.decorator",
        "numpy.core._ufunc_config._setdef",
        "<map>.items",
        "numpy.core._ufunc_config._unspecified",
        "numpy.core.overrides.set_module",
        "numpy.core._ufunc_config.errstate"
    ],
    "numpy.core._ufunc_config.errstate.__enter__": [
        "numpy.core._ufunc_config.seterrcall",
        "numpy.core._ufunc_config.seterr"
    ],
    "numpy.core._ufunc_config.errstate.__exit__": [
        "numpy.core._ufunc_config.seterrcall",
        "numpy.core._ufunc_config.seterr"
    ],
    "numpy.core._ufunc_config.seterr": [
        "numpy.core._ufunc_config.geterr",
        "numpy.core.umath.seterrobj",
        "numpy.core.umath.geterrobj"
    ],
    "numpy.core.arrayprint": [
        "numpy.core.arrayprint.IntegerFormat",
        "numpy.core.arrayprint.BoolFormat",
        "contextlib.contextmanager",
        "<list>.append",
        "<builtin>.getattr",
        "numpy.core.arrayprint.FloatingFormat",
        "numpy.core.arrayprint.SubArrayFormat",
        "numpy.core.arrayprint.ComplexFloatingFormat",
        "numpy.core.overrides.decorator",
        "numpy.core.arrayprint.StructuredVoidFormat",
        "numpy.core.arrayprint._recursive_guard.decorating_function",
        "numpy.core.arrayprint._TimelikeFormat",
        "numpy.core.arrayprint.DatetimeFormat",
        "numpy.core.arrayprint.TimedeltaFormat",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.array_function_dispatch",
        "<builtin>.issubclass",
        "numpy.core.arrayprint._recursive_guard"
    ],
    "numpy.core.arrayprint._array_str_implementation": [
        "numpy.ndarray.__getitem__",
        "<builtin>.str",
        "numpy.core.arrayprint.array2string",
        "numpy.core.arrayprint.wrapper",
        "numpy.core.arrayprint._guarded_repr_or_str"
    ],
    "numpy.core.arrayprint._recursive_guard.decorating_function": [
        "functools.update_wrapper",
        "_functools.partial",
        "<builtin>.set",
        "functools.wraps"
    ],
    "numpy.core.arrayprint.wrapper": [
        "numpy.core.arrayprint._guarded_repr_or_str"
    ],
    "numpy.core.defchararray": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.defchararray.chararray"
    ],
    "numpy.core.einsumfunc": [
        "numpy.core.overrides.decorator",
        "<builtin>.set",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.fromnumeric": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.fromnumeric._wrapreduction": [
        "<builtin>.getattr",
        "numpy.core._methods._any",
        "<builtin>.type"
    ],
    "numpy.core.fromnumeric.any": [
        "numpy.core.fromnumeric._wrapreduction"
    ],
    "numpy.core.function_base": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.function_base.vectorize",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.function_base._add_docstring": [
        "numpy.core.function_base._needs_add_docstring"
    ],
    "numpy.core.function_base.add_newdoc": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.__import__",
        "<builtin>.globals",
        "numpy.core.function_base._add_docstring",
        "<str>.strip"
    ],
    "numpy.core.function_base.linspace": [
        "numpy.core.numeric.arange",
        "numpy.core.numeric.asanyarray",
        "numpy.core.numeric.floor",
        "numpy.core.numerictypes.issubdtype",
        "numpy.core.numeric.ndim",
        "operator.index",
        "numpy.core.numeric.result_type",
        "numpy.core.numeric.isscalar",
        "numpy.core.numeric.issubdtype",
        "<builtin>.float",
        "numpy.core.numeric.any",
        "numpy.core.numeric.moveaxis",
        "<builtin>.ValueError"
    ],
    "numpy.core.getlimits": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.set_module",
        "<builtin>.dict",
        "numpy.core.getlimits.iinfo",
        "numpy.core.getlimits.finfo",
        "numpy.core.getlimits.MachArLike"
    ],
    "numpy.core.getlimits.MachArLike.__init__": [
        "numpy.core.getlimits.MachArLike._float_to_str",
        "numpy.core.umath.log10",
        "numpy.core.umath.nextafter",
        "<builtin>.int",
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits.MachArLike._float_to_float"
    ],
    "numpy.core.getlimits.MachArLike._float_to_float": [
        "numpy.core.getlimits.MachArLike._float_conv",
        "numpy.core.getlimits._fr1"
    ],
    "numpy.core.getlimits.MachArLike._float_to_str": [
        "numpy.core.numeric.array",
        "numpy.core.arrayprint._array_str_implementation",
        "numpy.core.getlimits._fr0"
    ],
    "numpy.core.getlimits.MachArLike._str_smallest_subnormal": [
        "numpy.core.getlimits.MachArLike.smallest_subnormal",
        "numpy.core.getlimits.MachArLike._float_to_str"
    ],
    "numpy.core.getlimits.MachArLike.smallest_subnormal": [
        "numpy.core.getlimits.MachArLike._float_to_float"
    ],
    "numpy.core.getlimits.__new__": [
        "numpy.core.numerictypes.obj2sctype",
        "numpy.core.getlimits.finfo._init"
    ],
    "numpy.core.getlimits._register_known_types": [
        "numpy.core.numeric.errstate",
        "numpy.core.umath.exp2",
        "numpy.core.umath.nextafter",
        "numpy.core._ufunc_config.errstate.__exit__",
        "numpy.core._ufunc_config.errstate.__init__",
        "numpy.core._ufunc_config.errstate.__enter__",
        "numpy.core.getlimits._register_type",
        "numpy.core.getlimits.MachArLike.__init__"
    ],
    "numpy.core.getlimits.finfo._init": [
        "<builtin>.getattr",
        "numpy.core.numeric.dtype",
        "numpy.core.getlimits.MachArLike._str_smallest_subnormal",
        "<builtin>.setattr",
        "numpy.core.getlimits.MachArLike.smallest_subnormal",
        "numpy.core.getlimits._get_machar"
    ],
    "numpy.core.memmap": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.memmap.memmap"
    ],
    "numpy.core.multiarray": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_from_dispatcher"
    ],
    "numpy.core.numeric": [
        "numpy.core.overrides.decorator",
        "<builtin>.type",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_array_function_like_doc",
        "numpy.core.numeric.ComplexWarning",
        "numpy.core.numeric.extend_all"
    ],
    "numpy.core.numeric.ones": [
        "numpy.core.multiarray.empty",
        "numpy.core.multiarray.copyto"
    ],
    "numpy.core.numeric.zeros_like": [],
    "numpy.core.numerictypes": [
        "<list>.append",
        "<builtin>.sorted",
        "numpy.core.numerictypes._construct_lookups",
        "numpy.core.overrides.decorator",
        "numpy.core.numerictypes._typedict",
        "<builtin>.len",
        "numpy.core.numerictypes._scalar_type_key",
        "<builtin>.globals",
        "numpy.core.numerictypes._register_types",
        "numpy.core.overrides.set_module",
        "<builtin>.tuple"
    ],
    "numpy.core.numerictypes._register_types": [
        "abc.ABCMeta.register",
        "numbers.Complex.register",
        "numbers.Real.register",
        "numbers.Number.register",
        "numbers.Integral.register"
    ],
    "numpy.core.numerictypes.issubdtype": [
        "<builtin>.issubclass",
        "numpy.core.multiarray.dtype",
        "numpy.core.numerictypes.issubclass_"
    ],
    "numpy.core.overrides": [
        "os.environ.get",
        "<builtin>.int",
        "<builtin>.bool",
        "_collections_abc.Mapping.get",
        "collections.namedtuple",
        "numpy.core._multiarray_umath.add_docstring"
    ],
    "numpy.core.overrides.decorator": [
        "functools.wraps",
        "numpy.core.overrides.decorator",
        "functools.update_wrapper",
        "numpy.core.overrides.verify_matching_signatures",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.overrides.verify_matching_signatures": [
        "numpy.compat._inspect.getargspec",
        "<builtin>.len",
        "<builtin>.bool",
        "<builtin>.RuntimeError"
    ],
    "numpy.core.records": [
        "numpy.core.records.recarray",
        "numpy.core.records.record",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.set_module",
        "numpy.core.records.format_parser"
    ],
    "numpy.core.shape_base": [
        "<builtin>.getattr",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.core.umath": [],
    "numpy.ctypeslib": [
        "numpy.core._internal._getintp_ctype",
        "numpy.ctypeslib._concrete_ndptr",
        "numpy.ctypeslib._ndptr",
        "numpy.ctypeslib._get_scalar_type_map"
    ],
    "numpy.ctypeslib._get_scalar_type_map": [
        "numpy.dtype"
    ],
    "numpy.fft": [
        "<list>.copy",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.fft._pocketfft": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib": [
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.lib._datasource": [
        "numpy.lib._datasource._FileOpeners.__init__",
        "numpy.core.overrides.decorator",
        "numpy.lib._datasource.Repository",
        "numpy.lib._datasource._FileOpeners",
        "numpy.lib._datasource.DataSource",
        "numpy.core.overrides.set_module"
    ],
    "numpy.lib._iotools": [
        "numpy.lib._iotools.ConverterError",
        "numpy.lib._iotools.StringConverter",
        "numpy.lib._iotools.LineSplitter",
        "numpy.lib._iotools.ConverterLockError",
        "numpy.lib._iotools.ConversionWarning",
        "numpy.lib._iotools.NameValidator"
    ],
    "numpy.lib.arraypad": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.arraysetops": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.arrayterator": [
        "numpy.lib.arrayterator.Arrayterator"
    ],
    "numpy.lib.format": [
        "<builtin>.len"
    ],
    "numpy.lib.histograms": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.index_tricks": [
        "numpy.lib.index_tricks.CClass.__init__",
        "numpy.lib.index_tricks.OGridClass.__init__",
        "numpy.lib.index_tricks.OGridClass",
        "numpy.lib.index_tricks.MGridClass.__init__",
        "numpy.core.overrides.decorator",
        "numpy.lib.index_tricks.AxisConcatenator",
        "numpy.lib.index_tricks.RClass",
        "numpy.lib.index_tricks.IndexExpression.__init__",
        "numpy.lib.index_tricks.ndenumerate",
        "numpy.core.overrides.set_module",
        "numpy.lib.index_tricks.nd_grid",
        "numpy.lib.index_tricks.CClass",
        "numpy.lib.index_tricks.RClass.__init__",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.lib.index_tricks.ndindex",
        "numpy.lib.index_tricks.IndexExpression",
        "numpy.lib.index_tricks.MGridClass"
    ],
    "numpy.lib.index_tricks.CClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.index_tricks.MGridClass.__init__": [
        "numpy.lib.index_tricks.nd_grid.__init__",
        "<builtin>.super"
    ],
    "numpy.lib.index_tricks.OGridClass.__init__": [
        "numpy.lib.index_tricks.nd_grid.__init__",
        "<builtin>.super"
    ],
    "numpy.lib.index_tricks.RClass.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.lib.mixins": [
        "numpy.lib.mixins.NDArrayOperatorsMixin"
    ],
    "numpy.lib.mixins.NDArrayOperatorsMixin": [
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._numeric_methods",
        "numpy.lib.mixins._unary_method",
        "numpy.lib.mixins._binary_method"
    ],
    "numpy.lib.mixins._numeric_methods": [
        "numpy.lib.mixins._reflected_binary_method",
        "numpy.lib.mixins._inplace_binary_method",
        "numpy.lib.mixins._binary_method"
    ],
    "numpy.lib.nanfunctions": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.npyio": [
        "<builtin>.sorted",
        "numpy.lib.npyio.NpzFile",
        "numpy.core.overrides.decorator",
        "numpy.lib.npyio.BagObj",
        "abc.__new__",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_array_function_like_doc"
    ],
    "numpy.lib.polynomial": [
        "numpy.core.overrides.decorator",
        "re.compile",
        "numpy.lib.polynomial.Polynomial",
        "abc.__new__",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.array_function_dispatch",
        "warnings.simplefilter",
        "numpy.lib.polynomial.RankWarning",
        "numpy.lib.polynomial.poly1d"
    ],
    "numpy.lib.polynomial.polyfit": [
        "numeric.asarray",
        "numpy.lib.twodim_base.vander",
        "<builtin>.TypeError",
        "numpy.core.getlimits.__new__",
        "numpy.linalg.lstsq",
        "<builtin>.len",
        "<builtin>.int",
        "numpy.core._methods._sum",
        "warnings.warn",
        "numeric.sqrt",
        "numpy.linalg.inv",
        "numpy.core.dot",
        "<builtin>.ValueError",
        "numpy.core.finfo",
        "numeric.outer"
    ],
    "numpy.lib.polynomial.polyval": [
        "numeric.asanyarray",
        "<builtin>.isinstance",
        "numeric.asarray"
    ],
    "numpy.lib.scimath": [
        "numeric.log",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.shape_base": [
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.stride_tricks": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.lib.stride_tricks.DummyArray"
    ],
    "numpy.lib.twodim_base": [
        "numpy.core.getlimits.iinfo.__init__",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.set_array_function_like_doc"
    ],
    "numpy.lib.type_check": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "numpy.lib.ufunclike": [
        "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y",
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.decorator"
    ],
    "numpy.lib.ufunclike._deprecate_out_named_y": [
        "functools.update_wrapper",
        "_functools.partial",
        "functools.wraps"
    ],
    "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y": [
        "numpy.lib.ufunclike._fix_out_named_y",
        "numpy.lib.ufunclike._deprecate_out_named_y"
    ],
    "numpy.lib.ufunclike._fix_out_named_y": [
        "functools.update_wrapper",
        "_functools.partial",
        "functools.wraps"
    ],
    "numpy.lib.utils": [
        "numpy.core.overrides.decorator",
        "re.compile",
        "numpy.core.overrides.set_module",
        "numpy.lib.utils._Deprecate"
    ],
    "numpy.linalg": [
        "<list>.copy",
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.linalg.linalg": [
        "numpy.core.overrides.decorator",
        "numpy.linalg.linalg.LinAlgError",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core.overrides.set_module",
        "numpy.linalg.linalg._determine_error_states"
    ],
    "numpy.linalg.linalg._commonType": [
        "numpy.linalg.linalg._realType",
        "<builtin>.issubclass",
        "numpy.linalg.linalg.isComplexType",
        "<builtin>.TypeError"
    ],
    "numpy.linalg.linalg._determine_error_states": [
        "numpy.core.errstate",
        "numpy.core._ufunc_config.errstate.__exit__",
        "numpy.core._ufunc_config.errstate.__init__",
        "numpy.core._ufunc_config.errstate.__enter__",
        "numpy.core.geterrobj"
    ],
    "numpy.linalg.linalg.inv": [
        "numpy.linalg.linalg._commonType",
        "numpy.linalg.linalg._assert_stacked_2d",
        "numpy.linalg.linalg._makearray",
        "numpy.linalg.linalg._assert_stacked_square",
        "numpy.linalg._umath_linalg.inv",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.linalg.linalg.isComplexType"
    ],
    "numpy.linalg.linalg.lstsq": [
        "numpy.linalg.linalg.isComplexType",
        "numpy.core.array",
        "numpy.linalg.linalg._commonType",
        "<builtin>.max",
        "numpy.linalg.linalg._makearray",
        "numpy.linalg.linalg._realType",
        "warnings.warn",
        "numpy.linalg.linalg._assert_2d",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "numpy.core.zeros",
        "numpy.core.finfo"
    ],
    "numpy.ma": [
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.ma.core": [
        "numpy.ma.core.MaskedArrayFutureWarning",
        "numpy.ma.core._DomainGreater.__init__",
        "numpy.ma.core.MAError",
        "numpy.ma.core.mvoid",
        "numpy.ma.core._frommethod",
        "<builtin>.dict",
        "numpy.ma.core._DomainSafeDivide",
        "numpy.ma.core._convert2ma.__init__",
        "numpy.ma.core.doc_note",
        "numpy.ma.core._DomainCheckInterval.__init__",
        "numpy.ma.core._DomainTan.__init__",
        "numpy.ma.core._MaskedBinaryOperation",
        "numpy.ma.core._MaskedUnaryOperation.__init__",
        "numpy.ma.core._DomainGreater",
        "numpy.ma.core._DomainSafeDivide.__init__",
        "numpy.ma.core._MaskedUnaryOperation",
        "numpy.ma.core._MaskedPrintOption",
        "numpy.ma.core._DomainGreaterEqual",
        "numpy.ma.core._DomainCheckInterval",
        "textwrap.dedent",
        "numpy.ma.core._extrema_operation",
        "numpy.ma.core._MaskedUFunc",
        "numpy.ma.core.MaskedArray",
        "numpy.ma.core._MaskedPrintOption.__init__",
        "numpy.ma.core.__new__",
        "<builtin>.complex",
        "numpy.ma.core._extrema_operation.__init__",
        "numpy.ma.core.MaskError",
        "numpy.ma.core._DomainGreaterEqual.__init__",
        "numpy.ma.core._DomainedBinaryOperation.__init__",
        "numpy.ma.core.MaskedIterator",
        "numpy.ma.core._DomainTan",
        "numpy.ma.core._frommethod.__init__",
        "numpy.ma.core._DomainedBinaryOperation",
        "numpy.datetime64",
        "numpy.ma.core.MaskedConstant",
        "numpy.ma.core._MaskedBinaryOperation.__init__",
        "numpy.ma.core._convert2ma"
    ],
    "numpy.ma.core.MaskedArray": [
        "numpy.ma.core._arraymethod",
        "<builtin>.property"
    ],
    "numpy.ma.core.MaskedArray.__array_finalize__": [
        "<builtin>.isinstance",
        "numpy.ma.core.getmask",
        "numpy.ma.core.make_mask_descr",
        "numpy.ma.core.MaskedConstant.__setattr__",
        "numpy.ma.core.dtype",
        "numpy.ma.core.MaskedArray._update_from",
        "numpy.ma.core._check_fill_value",
        "numpy.ma.core.getmaskarray",
        "numpy.ma.core.shape"
    ],
    "numpy.ma.core.MaskedArray.view": [
        "numpy.ma.core.MaskedConstant.__array_finalize__",
        "<builtin>.getattr",
        "numpy.ma.core.getmask",
        "numpy.ma.core.MaskedConstant.__setattr__",
        "numpy.ndarray.view",
        "<builtin>.issubclass"
    ],
    "numpy.ma.core.MaskedConstant.__array_finalize__": [
        "<builtin>.super",
        "numpy.ma.core.MaskedConstant.__has_singleton",
        "numpy.ma.core.MaskedArray.__array_finalize__"
    ],
    "numpy.ma.core.MaskedConstant.__setattr__": [
        "<builtin>.AttributeError",
        "<builtin>.super",
        "numpy.ma.core.MaskedConstant.__has_singleton"
    ],
    "numpy.ma.core._DomainedBinaryOperation.__init__": [
        "numpy.ma.core._MaskedUFunc.__init__",
        "<builtin>.super"
    ],
    "numpy.ma.core._MaskedBinaryOperation.__init__": [
        "numpy.ma.core._MaskedUFunc.__init__",
        "<builtin>.super"
    ],
    "numpy.ma.core._MaskedUFunc.__init__": [
        "numpy.numpy.ma.core._internal._ufunc_doc_signature_formatter"
    ],
    "numpy.ma.core._MaskedUnaryOperation.__init__": [
        "numpy.ma.core._MaskedUFunc.__init__",
        "<builtin>.super"
    ],
    "numpy.ma.core.__new__": [
        "numpy.ma.core.MaskedArray.view",
        "numpy.ma.core.make_mask_descr",
        "numpy.ma.core.dtype",
        "numpy.ma.core.__new__",
        "numpy.ma.core.MaskedConstant.__has_singleton",
        "numpy.ma.core.shape",
        "numpy.ma.core.MaskedArray.__array_finalize__"
    ],
    "numpy.ma.core._convert2ma.__init__": [
        "<builtin>.getattr",
        "numpy.ma.core._convert2ma.getdoc"
    ],
    "numpy.ma.core._convert2ma.getdoc": [
        "numpy.ma.core.get_object_signature",
        "numpy.ma.core._convert2ma._replace_return_type",
        "<builtin>.getattr"
    ],
    "numpy.ma.core._extrema_operation.__init__": [
        "numpy.ma.core._MaskedUFunc.__init__",
        "<builtin>.super"
    ],
    "numpy.ma.core._frommethod.__init__": [
        "numpy.ma.core._frommethod.getdoc"
    ],
    "numpy.ma.core._frommethod.getdoc": [
        "numpy.ma.core.get_object_signature",
        "<builtin>.getattr"
    ],
    "numpy.ma.core._replace_dtype_fields": [
        "numpy.ma.core._replace_dtype_fields_recursive"
    ],
    "numpy.ma.core.doc_note": [
        "re.split",
        "inspect.cleandoc"
    ],
    "numpy.ma.core.get_object_signature": [
        "numpy.compat._inspect.getargspec",
        "numpy.compat._inspect.formatargspec"
    ],
    "numpy.ma.core.make_mask_descr": [
        "numpy.ma.core._replace_dtype_fields"
    ],
    "numpy.ma.extras": [
        "numpy.ma.extras.mr_class.__init__",
        "numpy.ma.extras._fromnxfunction_single",
        "core.doc_note",
        "numpy.ma.extras.mr_class",
        "numpy.ma.extras._fromnxfunction",
        "numpy.ma.extras.MAxisConcatenator",
        "numpy.ma.extras._fromnxfunction_seq",
        "numpy.ma.extras._fromnxfunction_allargs",
        "numpy.ma.extras._fromnxfunction.__init__",
        "numpy.ma.extras._fromnxfunction_args",
        "numpy.apply_over_axes.__doc__.find"
    ],
    "numpy.ma.extras._fromnxfunction.__init__": [
        "numpy.ma.extras._fromnxfunction.getdoc"
    ],
    "numpy.ma.extras._fromnxfunction.getdoc": [
        "<builtin>.getattr",
        "core.doc_note",
        "core.get_object_signature"
    ],
    "numpy.ma.extras.mr_class.__init__": [
        "numpy.lib.index_tricks.AxisConcatenator.__init__"
    ],
    "numpy.matrixlib": [
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.matrixlib.defmatrix": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.matrixlib.defmatrix.matrix"
    ],
    "numpy.polynomial": [
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.polynomial._polybase": [
        "abc.__new__",
        "numpy.polynomial._polybase.ABCPolyBase"
    ],
    "numpy.polynomial._polybase.ABCPolyBase": [
        "<builtin>.classmethod",
        "abc.abstractmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "numpy.polynomial.chebyshev": [
        "numpy.array",
        "abc.__new__",
        "numpy.polynomial.chebyshev.Chebyshev"
    ],
    "numpy.polynomial.hermite": [
        "abc.__new__",
        "numpy.array",
        "numpy.polynomial.hermite.Hermite"
    ],
    "numpy.polynomial.hermite_e": [
        "abc.__new__",
        "numpy.array",
        "numpy.polynomial.hermite_e.HermiteE"
    ],
    "numpy.polynomial.laguerre": [
        "abc.__new__",
        "numpy.polynomial.laguerre.Laguerre",
        "numpy.array"
    ],
    "numpy.polynomial.legendre": [
        "numpy.array",
        "abc.__new__",
        "numpy.polynomial.legendre.Legendre"
    ],
    "numpy.polynomial.polyutils": [
        "numpy.polynomial.polyutils.RankWarning"
    ],
    "numpy.random": [
        "numpy._pytesttester.PytestTester.__init__"
    ],
    "numpy.random._pickle": [],
    "os._Environ.__delitem__": [
        "os.encode",
        "<builtin>.KeyError"
    ],
    "os._Environ.__getitem__": [
        "os.encode",
        "<builtin>.KeyError",
        "os.decode"
    ],
    "os._Environ.__setitem__": [
        "os.encode"
    ],
    "os.__subclasshook__": [
        "_collections_abc._check_methods"
    ],
    "os.get_exec_path": [
        "os._Environ.__getitem__",
        "<builtin>.isinstance",
        "_collections_abc.Mapping.get",
        "warnings.catch_warnings.__enter__",
        "warnings.simplefilter",
        "warnings.catch_warnings.__init__",
        "warnings.catch_warnings.__exit__",
        "<builtin>.ValueError"
    ],
    "os.getenv": [
        "_collections_abc.Mapping.get"
    ],
    "pathlib": [
        "pathlib.PurePath",
        "pathlib._Flavour.__init__",
        "pathlib._Accessor",
        "pathlib._PosixFlavour",
        "pathlib.Path",
        "abc.ABCMeta.register",
        "pathlib._PreciseSelector",
        "pathlib._RecursiveWildcardSelector",
        "pathlib.PosixPath",
        "functools.lru_cache.decorating_function",
        "pathlib._Selector",
        "<builtin>.hasattr",
        "pathlib._Flavour",
        "pathlib._WindowsFlavour",
        "pathlib.PureWindowsPath",
        "pathlib.WindowsPath",
        "pathlib._NormalAccessor",
        "functools.lru_cache",
        "pathlib._TerminatingSelector",
        "pathlib.PurePosixPath",
        "abc.__new__",
        "pathlib._WildcardSelector",
        "urllib.parse",
        "pathlib._PathParents"
    ],
    "pkg_resources": [
        "plistlib",
        "pkg_resources._declare_state",
        "pkg_resources.extern.jaraco.text",
        "pkg_resources.ZipManifests",
        "pkg_resources..DistributionNotFound",
        "pkg_resources.EggInfoDistribution",
        "pkg_resources.extern.appdirs",
        "pkg_resources.FileMetadata",
        "pkg_resources.register_loader_type",
        "functools.singledispatchmethod.register",
        "imp",
        "pkg_resources.DistInfoDistribution",
        "pkg_resources.ExtractionError",
        "pkg_resources.PkgResourcesDeprecationWarning",
        "pkg_resources.EntryPoint",
        "functools.<lambda>",
        "pkg_resources.PathMetadata",
        "pkg_resources.ResolutionError",
        "pkg_resources.PEP440Warning",
        "pkg_resources.EmptyProvider",
        "warnings.filterwarnings",
        "re.compile",
        "pkg_resources.ResourceManager",
        "pkg_resources.EmptyProvider.__init__",
        "pkg_resources.ContextualVersionConflict",
        "enum.IntFlag.__or__",
        "pkg_resources.IMetadataProvider",
        "pkg_resources.NullProvider",
        "pkgutil",
        "pkg_resources._ReqExtras",
        "pkg_resources.Environment",
        "pkg_resources..register_loader_type",
        "email.parser",
        "pkg_resources.DefaultProvider._register",
        "<builtin>.hasattr",
        "pkg_resources.RequirementParseError",
        "pkg_resources.DefaultProvider",
        "<builtin>.globals",
        "pkg_resources.ZipProvider",
        "pkg_resources._call_aside",
        "<builtin>.RuntimeError",
        "pkg_resources.extern.packaging",
        "pkg_resources.MemoizedZipManifests",
        "pkg_resources.UnknownExtra",
        "pkg_resources.IResourceProvider",
        "functools.singledispatch",
        "pkg_resources.Distribution",
        "<builtin>.__import__",
        "pkg_resources.register_namespace_handler",
        "pkg_resources.register_finder",
        "pkg_resources.Requirement",
        "pkg_resources.NoDists",
        "pkg_resources.EggMetadata",
        "pkg_resources.WorkingSet",
        "pkg_resources.EggProvider",
        "pkg_resources.VersionConflict"
    ],
    "pkg_resources.DefaultProvider._has": [
        "genericpath.exists"
    ],
    "pkg_resources.DefaultProvider._register": [
        "<builtin>.getattr",
        "pkg_resources..register_loader_type",
        "<builtin>.type"
    ],
    "pkg_resources.DefaultProvider.get_resource_stream": [
        "pkg_resources.NullProvider._fn",
        "<builtin>.open"
    ],
    "pkg_resources.DistInfoDistribution": [
        "re.compile",
        "<builtin>.property"
    ],
    "pkg_resources.Distribution.__init__": [
        "pkg_resources.safe_version",
        "pkg_resources.safe_name"
    ],
    "pkg_resources.Distribution._get_metadata": [
        "pkg_resources.NullProvider.has_metadata",
        "pkg_resources.Distribution.__getattr__"
    ],
    "pkg_resources.Distribution.activate": [
        "pkg_resources.Distribution._get_metadata",
        "pkg_resources.Distribution.insert_on",
        "pkg_resources.declare_namespace",
        "pkg_resources.fixup_namespace_packages"
    ],
    "pkg_resources.Distribution.from_filename": [
        "pkg_resources.Distribution.from_location",
        "pkg_resources._normalize_cached",
        "posixpath.basename"
    ],
    "pkg_resources.Distribution.from_location": [
        "pkg_resources.Distribution._reload_version",
        "posixpath.splitext",
        "pkg_resources.Distribution.__init__"
    ],
    "pkg_resources.Distribution.insert_on": [
        "pkg_resources.Distribution.check_version_conflict",
        "posixpath.dirname",
        "<builtin>.enumerate",
        "pkg_resources._normalize_cached"
    ],
    "pkg_resources.Distribution.key": [
        "pkg_resources.Distribution.__getattr__"
    ],
    "pkg_resources.EggMetadata.__init__": [
        "pkg_resources._parents",
        "posixpath.join",
        "pkg_resources.EggProvider._setup_prefix"
    ],
    "pkg_resources.EggProvider.__init__": [
        "<builtin>.super",
        "pkg_resources.NullProvider.__init__",
        "pkg_resources.EggProvider._setup_prefix"
    ],
    "pkg_resources.EggProvider._set_egg": [
        "posixpath.join",
        "posixpath.basename"
    ],
    "pkg_resources.EggProvider._setup_prefix": [
        "pkg_resources._parents",
        "pkg_resources.EggProvider._set_egg",
        "<builtin>.filter",
        "<builtin>.next",
        "pkg_resources._is_egg_path"
    ],
    "pkg_resources.EntryPoint": [
        "<builtin>.classmethod",
        "re.compile"
    ],
    "pkg_resources.Environment": [
        "pkg_resources.get_supported_platform"
    ],
    "pkg_resources.MemoizedZipManifests": [
        "collections.namedtuple"
    ],
    "pkg_resources.MemoizedZipManifests.load": [
        "posixpath.normpath",
        "zipfile.ZipFile.__del__",
        "os.stat",
        "pkg_resources.ZipManifests.build"
    ],
    "pkg_resources.NullProvider.__init__": [
        "<builtin>.getattr",
        "posixpath.dirname"
    ],
    "pkg_resources.NullProvider._fn": [
        "pkg_resources.NullProvider._validate_resource_path",
        "posixpath.join"
    ],
    "pkg_resources.NullProvider._get_metadata_path": [
        "pkg_resources.NullProvider._fn"
    ],
    "pkg_resources.NullProvider._validate_resource_path": [
        "ntpath.isabs",
        "posixpath.isabs",
        "<builtin>.ValueError",
        "warnings.warn"
    ],
    "pkg_resources.NullProvider.has_metadata": [
        "pkg_resources.ZipProvider._has",
        "pkg_resources.DefaultProvider._has",
        "pkg_resources.NullProvider._get_metadata_path"
    ],
    "pkg_resources.ResourceManager.resource_stream": [
        "pkg_resources.get_provider",
        "pkg_resources.DefaultProvider.get_resource_stream"
    ],
    "pkg_resources.WorkingSet.__init__": [
        "pkg_resources.WorkingSet.add_entry"
    ],
    "pkg_resources.WorkingSet._build_master": [
        "pkg_resources.WorkingSet._build_from_requirements",
        "pkg_resources.WorkingSet.__init__"
    ],
    "pkg_resources.WorkingSet.add": [
        "pkg_resources.WorkingSet._added_new",
        "pkg_resources.Distribution.key",
        "pkg_resources.extern.packaging.utils.canonicalize_name"
    ],
    "pkg_resources.WorkingSet.add_entry": [
        "pkg_resources.WorkingSet.add",
        "pkg_resources.find_eggs_in_zip",
        "pkg_resources.find_distributions",
        "pkg_resources.find_on_path"
    ],
    "pkg_resources.ZipManifests.build": [
        "zipfile.ZipFile.namelist",
        "zipfile.ZipFile.__init__",
        "zipfile.ZipFile.__enter__",
        "zipfile.ZipFile.__exit__",
        "<builtin>.dict"
    ],
    "pkg_resources.ZipProvider._has": [
        "pkg_resources.ZipProvider._index",
        "pkg_resources.ZipProvider.zipinfo",
        "pkg_resources.ZipProvider._zipinfo_name"
    ],
    "pkg_resources.ZipProvider.zipinfo": [
        "pkg_resources.MemoizedZipManifests.load"
    ],
    "pkg_resources._by_version_descending": [
        "pkg_resources._by_version_descending._by_version",
        "<builtin>.sorted",
        "pkg_resources._vendor.packaging.version._BaseVersion.__lt__",
        "pkg_resources._vendor.packaging.version._BaseVersion.__eq__"
    ],
    "pkg_resources._by_version_descending._by_version": [
        "itertools.chain",
        "pkg_resources._by_version_descending.try_parse",
        "posixpath.splitext"
    ],
    "pkg_resources._by_version_descending.try_parse": [
        "pkg_resources._vendor.packaging.version.Version.__init__"
    ],
    "pkg_resources._call_aside": [
        "pkg_resources.ResourceManager.__init__",
        "pkg_resources._initialize_master_working_set",
        "pkg_resources._initialize"
    ],
    "pkg_resources._find_adapter": [
        "pkg_resources._always_object",
        "inspect.getmro",
        "<builtin>.getattr",
        "<builtin>.type"
    ],
    "pkg_resources._initialize": [
        "pkg_resources.ResourceManager.__init__",
        "<builtin>.getattr",
        "<builtin>.dir"
    ],
    "pkg_resources._initialize_master_working_set": [
        "pkg_resources._declare_state",
        "<builtin>.list",
        "<builtin>.globals",
        "<builtin>.map",
        "pkg_resources.WorkingSet.add_entry",
        "<builtin>.locals",
        "pkg_resources.WorkingSet._build_master",
        "pkg_resources.WorkingSet.subscribe",
        "<builtin>.tuple"
    ],
    "pkg_resources._is_egg_path": [
        "pkg_resources._is_zip_egg",
        "pkg_resources._is_unpacked_egg"
    ],
    "pkg_resources._is_zip_egg": [
        "zipfile.is_zipfile",
        "genericpath.isfile"
    ],
    "pkg_resources._macos_vers": [
        "<builtin>.hasattr",
        "plistlib.readPlist",
        "platform.mac_ver",
        "<list>.append"
    ],
    "pkg_resources._normalize_cached": [
        "pkg_resources.normalize_path"
    ],
    "pkg_resources._parents": [
        "posixpath.split"
    ],
    "pkg_resources._vendor.appdirs": [
        "pkg_resources._vendor.appdirs.AppDirs"
    ],
    "pkg_resources._vendor.packaging._manylinux": [
        "functools.lru_cache",
        "typing.inner",
        "typing._VariadicGenericAlias.__getitem__",
        "typing.__new__",
        "pkg_resources._vendor.packaging._manylinux._GLibCVersion",
        "functools.lru_cache.decorating_function",
        "pkg_resources._vendor.packaging._manylinux._ELFFileHeader"
    ],
    "pkg_resources._vendor.packaging._manylinux._ELFFileHeader": [
        "typing.inner",
        "pkg_resources._vendor.packaging._manylinux._InvalidELFFileHeader"
    ],
    "pkg_resources._vendor.packaging._musllinux": [
        "functools.lru_cache",
        "functools.lru_cache.decorating_function",
        "typing.inner",
        "typing._VariadicGenericAlias.__getitem__",
        "typing.__new__",
        "pkg_resources._vendor.packaging._musllinux._MuslVersion"
    ],
    "pkg_resources._vendor.packaging._structures": [
        "pkg_resources._vendor.packaging._structures.NegativeInfinityType",
        "pkg_resources._vendor.packaging._structures.InfinityType"
    ],
    "pkg_resources._vendor.packaging.markers": [
        "pkg_resources._vendor.packaging.markers.UndefinedComparison",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString.__init__",
        "typing.inner",
        "pkg_resources._vendor.packaging.markers.Marker",
        "pkg_resources._vendor.packaging.markers.Undefined",
        "pkg_resources._vendor.packaging.pyparsing.Forward.__init__",
        "pkg_resources._vendor.packaging.markers.UndefinedEnvironmentName",
        "typing._VariadicGenericAlias.__getitem__",
        "pkg_resources._vendor.packaging.markers.Node",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.suppress",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.Forward.__lshift__",
        "pkg_resources._vendor.packaging.markers.Op",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "pkg_resources._vendor.packaging.markers.Variable",
        "pkg_resources._vendor.packaging.markers.InvalidMarker",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.markers.Value",
        "pkg_resources._vendor.packaging.pyparsing.Group.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__"
    ],
    "pkg_resources._vendor.packaging.markers.Marker": [
        "typing.inner"
    ],
    "pkg_resources._vendor.packaging.pyparsing": [
        "pkg_resources._vendor.packaging.pyparsing.ParseFatalException",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd.__init__",
        "pkg_resources._vendor.packaging.pyparsing.White",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setName",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__invert__",
        "pkg_resources._vendor.packaging.pyparsing.makeHTMLTags",
        "pkg_resources._vendor.packaging.pyparsing.LineEnd",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline",
        "abc.ABCMeta.register",
        "pkg_resources._vendor.packaging.pyparsing.Token",
        "pkg_resources._vendor.packaging.pyparsing.CaselessLiteral",
        "pkg_resources._vendor.packaging.pyparsing._ForwardNoRecurse",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.Or",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Group",
        "pkg_resources._vendor.packaging.pyparsing.LineEnd.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement",
        "pkg_resources._vendor.packaging.pyparsing.ParseSyntaxException",
        "pkg_resources._vendor.packaging.pyparsing.FollowedBy",
        "pkg_resources._vendor.packaging.pyparsing.Keyword",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn",
        "pkg_resources._vendor.packaging.pyparsing.Regex.__init__",
        "pkg_resources._vendor.packaging.pyparsing.pyparsing_common",
        "pkg_resources._vendor.packaging.pyparsing.OnlyOnce",
        "pkg_resources._vendor.packaging.pyparsing.Regex",
        "pkg_resources._vendor.packaging.pyparsing.Literal",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter",
        "pkg_resources._vendor.packaging.pyparsing.ParseException",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults",
        "pkg_resources._vendor.packaging.pyparsing.Forward",
        "pkg_resources._vendor.packaging.pyparsing.Each",
        "pkg_resources._vendor.packaging.pyparsing.Word.__init__",
        "pkg_resources._vendor.packaging.pyparsing.OneOrMore",
        "pkg_resources._vendor.packaging.pyparsing.StringStart.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "pkg_resources._vendor.packaging.pyparsing.srange",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst",
        "pkg_resources._vendor.packaging.pyparsing.GoToColumn",
        "pkg_resources._vendor.packaging.pyparsing.Dict",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset",
        "pkg_resources._vendor.packaging.pyparsing.SkipTo",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance",
        "pkg_resources._vendor.packaging.pyparsing.Empty",
        "pkg_resources._vendor.packaging.pyparsing.WordEnd",
        "pkg_resources._vendor.packaging.pyparsing.RecursiveGrammarException",
        "pkg_resources._vendor.packaging.pyparsing.Combine.__init__",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__init__",
        "pkg_resources._vendor.packaging.pyparsing.tokenMap",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch",
        "pkg_resources._vendor.packaging.pyparsing.Suppress",
        "pkg_resources._vendor.packaging.pyparsing.NotAny",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "pkg_resources._vendor.packaging.pyparsing.Word",
        "pkg_resources._vendor.packaging.pyparsing.NoMatch",
        "pkg_resources._vendor.packaging.pyparsing.CaselessKeyword",
        "pkg_resources._vendor.packaging.pyparsing.Optional",
        "pkg_resources._vendor.packaging.pyparsing._NullToken",
        "pkg_resources._vendor.packaging.pyparsing.Group.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore",
        "pkg_resources._vendor.packaging.pyparsing.CloseMatch",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName",
        "pkg_resources._vendor.packaging.pyparsing._Constants",
        "pkg_resources._vendor.packaging.pyparsing.Empty.__init__",
        "pkg_resources._vendor.packaging.pyparsing._PositionToken",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.StringStart",
        "pkg_resources._vendor.packaging.pyparsing.LineStart.__init__",
        "pkg_resources._vendor.packaging.pyparsing.LineStart",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.delimitedList",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Combine",
        "pkg_resources._vendor.packaging.pyparsing.WordStart",
        "pkg_resources._vendor.packaging.pyparsing.And"
    ],
    "pkg_resources._vendor.packaging.pyparsing.<lambda>": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.And": [
        "pkg_resources._vendor.packaging.pyparsing._ErrorStop"
    ],
    "pkg_resources._vendor.packaging.pyparsing.And.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars"
    ],
    "pkg_resources._vendor.packaging.pyparsing.And.__str__": [],
    "pkg_resources._vendor.packaging.pyparsing.And.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iadd__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__bool__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.haskeys",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__str__",
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Combine.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Combine.postParse": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__delitem__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults._asStringList",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.haskeys",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iadd__",
        "pkg_resources._vendor.packaging.pyparsing.__new__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.copy"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Dict.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Empty.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Forward.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Forward.__lshift__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Forward.copy": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Forward.streamline": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Group.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.LineEnd.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars"
    ],
    "pkg_resources._vendor.packaging.pyparsing.LineStart.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Literal.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Literal.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.MatchFirst.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.NotAny.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.NotAny.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.OneOrMore.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Optional.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Optional.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__",
        "pkg_resources._vendor.packaging.pyparsing.And.__str__",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Optional.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Or.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Or.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.tryParse"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__",
        "pkg_resources._vendor.packaging.pyparsing.OneOrMore.__str__",
        "pkg_resources._vendor.packaging.pyparsing.And.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.leaveWhitespace": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.leaveWhitespace"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.streamline",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseExpression.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__init__",
        "abc.ABCMeta.__instancecheck__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseExpression.copy": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseExpression.leaveWhitespace": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.leaveWhitespace",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.leaveWhitespace"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseExpression.setResultsName": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline": [
        "pkg_resources._vendor.packaging.pyparsing.Forward.streamline",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.streamline",
        "pkg_resources._vendor.packaging.pyparsing.And.__str__",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__str__",
        "pkg_resources._vendor.packaging.pyparsing.Or.__str__",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getattr__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__": [
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__getitem__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iadd__": [
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__getitem__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__setitem__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__setitem__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.copy",
        "pkg_resources._vendor.packaging.pyparsing.__new__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.__setitem__": [
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__getitem__",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParseResults.copy": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "pkg_resources._vendor.packaging.pyparsing.__new__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement": [
        "pkg_resources._vendor.packaging.pyparsing._FifoCache",
        "pkg_resources._vendor.packaging.pyparsing._UnboundedCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__": [
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.And.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__": [
        "pkg_resources._vendor.packaging.pyparsing.Forward.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.setResultsName"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__invert__": [
        "pkg_resources._vendor.packaging.pyparsing.NotAny.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__mul__": [
        "pkg_resources._vendor.packaging.pyparsing.makeOptionalList",
        "pkg_resources._vendor.packaging.pyparsing.And.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__": [
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__radd__": [
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.__xor__": [
        "pkg_resources._vendor.packaging.pyparsing.Or.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache": [
        "pkg_resources._vendor.packaging.pyparsing.StringStart.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.wrapper",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.Combine.postParse",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.postParse",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.preParse",
        "pkg_resources._vendor.packaging.pyparsing.Literal.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.Suppress.postParse",
        "pkg_resources._vendor.packaging.pyparsing.__new__",
        "pkg_resources._vendor.packaging.pyparsing.Or.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.Group.postParse",
        "pkg_resources._vendor.packaging.pyparsing.Regex.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.Optional.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.Word.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.And.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.parseImpl"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.addParseAction": [
        "pkg_resources._vendor.packaging.pyparsing._trim_arity"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy": [
        "copy.copy"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseString": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline",
        "pkg_resources._vendor.packaging.pyparsing.resetCache",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction": [
        "pkg_resources._vendor.packaging.pyparsing._trim_arity"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName": [
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.suppress": [
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ParserElement.tryParse": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing.QuotedString.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._escapeRegexRangeChars",
        "re.compile",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString.__str__",
        "re.escape",
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.QuotedString.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Regex": [
        "re.compile"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Regex.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Regex.__str__",
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__",
        "re.compile"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Regex.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Regex.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__",
        "pkg_resources._vendor.packaging.pyparsing.__new__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.StringEnd.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.StringStart.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Token.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.White.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Word.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__",
        "pkg_resources._vendor.packaging.pyparsing._escapeRegexRangeChars",
        "re.compile",
        "pkg_resources._vendor.packaging.pyparsing.Word.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Word.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__",
        "pkg_resources._vendor.packaging.pyparsing.charsAsStr"
    ],
    "pkg_resources._vendor.packaging.pyparsing.Word.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__": [
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__str__": [
        "pkg_resources._vendor.packaging.pyparsing.And.__str__",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__str__",
        "pkg_resources._vendor.packaging.pyparsing.Word.__str__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.parseImpl"
    ],
    "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.parseImpl": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iadd__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__bool__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache"
    ],
    "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__": [
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing._makeTags": [
        "pkg_resources._vendor.packaging.pyparsing.Dict.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.setResultsName",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__",
        "pkg_resources._vendor.packaging.pyparsing.Group.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setName",
        "pkg_resources._vendor.packaging.pyparsing.Combine.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Word.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing._trim_arity": [
        "pkg_resources._vendor.packaging.pyparsing.extract_stack"
    ],
    "pkg_resources._vendor.packaging.pyparsing.delimitedList": [
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__str__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setName",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.extract_stack": [
        "traceback.FrameSummary.__getitem__",
        "traceback.extract_stack"
    ],
    "pkg_resources._vendor.packaging.pyparsing.makeHTMLTags": [
        "pkg_resources._vendor.packaging.pyparsing._makeTags"
    ],
    "pkg_resources._vendor.packaging.pyparsing.makeOptionalList": [
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.makeOptionalList",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.originalTextFor": [
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "pkg_resources._vendor.packaging.pyparsing.Empty.__init__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.pyparsing_common": [
        "pkg_resources._vendor.packaging.pyparsing.Regex.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__radd__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setName",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__invert__",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.addCondition",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.suppress",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.Combine.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__mul__",
        "pkg_resources._vendor.packaging.pyparsing.tokenMap",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline",
        "pkg_resources._vendor.packaging.pyparsing.delimitedList",
        "pkg_resources._vendor.packaging.pyparsing.White.__init__",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "pkg_resources._vendor.packaging.pyparsing.LineEnd.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Word.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.addParseAction"
    ],
    "pkg_resources._vendor.packaging.pyparsing.srange": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iter__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseString",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getattr__"
    ],
    "pkg_resources._vendor.packaging.pyparsing.wrapper": [
        "pkg_resources._vendor.packaging.pyparsing.<lambda>",
        "pkg_resources._vendor.packaging.requirements.<lambda>"
    ],
    "pkg_resources._vendor.packaging.requirements": [
        "pkg_resources._vendor.packaging.pyparsing.Regex.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseString",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.suppress",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "pkg_resources._vendor.packaging.pyparsing.originalTextFor",
        "pkg_resources._vendor.packaging.requirements.Requirement",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__xor__",
        "pkg_resources._vendor.packaging.requirements.InvalidRequirement",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "enum.IntFlag.__or__",
        "pkg_resources._vendor.packaging.pyparsing.Combine.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Word.__init__"
    ],
    "pkg_resources._vendor.packaging.requirements.<lambda>": [
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getattr__"
    ],
    "pkg_resources._vendor.packaging.specifiers": [
        "pkg_resources._vendor.packaging.specifiers.LegacySpecifier",
        "pkg_resources._vendor.packaging.specifiers.BaseSpecifier",
        "pkg_resources._vendor.packaging.specifiers._IndividualSpecifier",
        "typing.inner",
        "pkg_resources._vendor.packaging.specifiers.SpecifierSet",
        "typing._VariadicGenericAlias.__getitem__",
        "re.compile",
        "abc.__new__",
        "typing.TypeVar.__init__",
        "pkg_resources._vendor.packaging.specifiers.InvalidSpecifier",
        "pkg_resources._vendor.packaging.specifiers.Specifier"
    ],
    "pkg_resources._vendor.packaging.specifiers.BaseSpecifier": [
        "abc.abstractmethod",
        "typing.inner"
    ],
    "pkg_resources._vendor.packaging.specifiers.LegacySpecifier": [
        "typing.inner",
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "pkg_resources._vendor.packaging.specifiers.Specifier": [
        "enum.IntFlag.__or__",
        "re.compile",
        "pkg_resources._vendor.packaging.specifiers._require_version_compare"
    ],
    "pkg_resources._vendor.packaging.specifiers.SpecifierSet": [
        "typing.inner"
    ],
    "pkg_resources._vendor.packaging.specifiers._IndividualSpecifier": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "pkg_resources._vendor.packaging.specifiers._require_version_compare": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "pkg_resources._vendor.packaging.tags": [
        "typing._VariadicGenericAlias.__getitem__",
        "pkg_resources._vendor.packaging.tags.Tag",
        "typing.inner",
        "logging.getLogger"
    ],
    "pkg_resources._vendor.packaging.utils": [
        "typing.inner",
        "typing.NewType",
        "pkg_resources._vendor.packaging.utils.InvalidWheelFilename",
        "typing._VariadicGenericAlias.__getitem__",
        "re.compile",
        "pkg_resources._vendor.packaging.utils.InvalidSdistFilename"
    ],
    "pkg_resources._vendor.packaging.version": [
        "typing.inner",
        "pkg_resources._vendor.packaging.version.InvalidVersion",
        "typing._VariadicGenericAlias.__getitem__",
        "re.compile",
        "pkg_resources._vendor.packaging.version._BaseVersion",
        "collections.namedtuple",
        "pkg_resources._vendor.packaging.version.LegacyVersion",
        "pkg_resources._vendor.packaging.version.Version",
        "numpy._version.get_versions"
    ],
    "pkg_resources._vendor.packaging.version.Version": [
        "typing.inner",
        "typing._VariadicGenericAlias.__getitem__",
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "pkg_resources._vendor.packaging.version.Version.__init__": [
        "pkg_resources._vendor.packaging.version._cmpkey",
        "pkg_resources._vendor.packaging.version._parse_letter_version",
        "pkg_resources._vendor.packaging.version._parse_local_version"
    ],
    "pkg_resources._vendor.packaging.version.Version.__str__": [
        "pkg_resources._vendor.packaging.version.dev",
        "pkg_resources._vendor.packaging.version.epoch",
        "pkg_resources._vendor.packaging.version.post",
        "pkg_resources._vendor.packaging.version.local",
        "pkg_resources._vendor.packaging.version.pre",
        "pkg_resources._vendor.packaging.version.release"
    ],
    "pkg_resources._vendor.packaging.version._BaseVersion": [
        "typing.inner"
    ],
    "pkg_resources._vendor.packaging.version._cmpkey": [
        "pkg_resources._vendor.packaging.version.<lambda>"
    ],
    "pkg_resources.dist_factory": [
        "posixpath.join",
        "pkg_resources._is_egg_path",
        "genericpath.isdir"
    ],
    "pkg_resources.distributions._from_metadata": [
        "posixpath.dirname",
        "pkg_resources.PathMetadata.__init__",
        "os.listdir",
        "posixpath.basename",
        "pkg_resources.FileMetadata.__init__",
        "pkg_resources.Distribution.from_location",
        "genericpath.isdir"
    ],
    "pkg_resources.extern": [
        "pkg_resources.extern.VendorImporter.__init__",
        "pkg_resources.extern.VendorImporter",
        "pkg_resources.extern.VendorImporter.install"
    ],
    "pkg_resources.extern.VendorImporter.create_module": [
        "pkg_resources.extern.VendorImporter.load_module"
    ],
    "pkg_resources.extern.VendorImporter.find_spec": [
        "pkg_resources.extern.VendorImporter._module_matches_namespace"
    ],
    "pkg_resources.extern.VendorImporter.load_module": [
        "pkg_resources.extern.VendorImporter.search_path"
    ],
    "pkg_resources.find_distributions": [
        "pkgutil.get_importer",
        "pkg_resources._find_adapter",
        "pkg_resources.find_nothing"
    ],
    "pkg_resources.find_eggs_in_zip": [
        "pkg_resources.Distribution.from_filename",
        "pkg_resources.EggMetadata.__init__",
        "pkg_resources.find_eggs_in_zip",
        "zipimport.zipimporter",
        "pkg_resources.NullProvider.has_metadata",
        "pkg_resources.Distribution.from_location",
        "posixpath.join",
        "pkg_resources._is_egg_path"
    ],
    "pkg_resources.find_on_path": [
        "pkg_resources.Distribution.from_filename",
        "pkg_resources.PathMetadata.__init__",
        "pkg_resources.dist_factory",
        "pkg_resources._by_version_descending",
        "pkg_resources.distributions._from_metadata",
        "pkg_resources._normalize_cached",
        "pkg_resources._is_unpacked_egg",
        "re.safe_listdir",
        "posixpath.join",
        "pkg_resources.safe_listdir"
    ],
    "pkg_resources.get_build_platform": [
        "pkg_resources._macos_arch",
        "sysconfig.get_platform",
        "<builtin>.int",
        "<str>.startswith",
        "os.uname",
        "pkg_resources._macos_vers"
    ],
    "pkg_resources.get_provider": [
        "<builtin>.getattr",
        "<builtin>.isinstance",
        "<builtin>.str",
        "<builtin>.__import__",
        "pkg_resources.EggProvider.__init__",
        "pkg_resources._find_adapter"
    ],
    "pkg_resources.get_supported_platform": [
        "pkg_resources.get_build_platform",
        "<str>.group",
        "pkg_resources._macos_vers",
        "<str>.match"
    ],
    "pkg_resources.normalize_path": [
        "posixpath.normpath",
        "posixpath.realpath",
        "pkg_resources._cygwin_patch",
        "posixpath.normcase"
    ],
    "pkg_resources.safe_name": [
        "re.sub"
    ],
    "pkg_resources.safe_version": [
        "pkg_resources._vendor.packaging.version.Version.__str__",
        "pkg_resources._vendor.packaging.version.Version.__init__",
        "<builtin>.str",
        "re.sub"
    ],
    "pkgutil.get_importer": [
        "_frozen_zipimport>.zipimporter.__init__"
    ],
    "platform": [
        "<builtin>.print",
        "re.compile",
        "collections.namedtuple"
    ],
    "platform._mac_ver_xml": [
        "<builtin>.open",
        "genericpath.exists",
        "plistlib.load",
        "os.uname"
    ],
    "platform._syscmd_uname": [
        "subprocess.check_output"
    ],
    "platform.mac_ver": [
        "platform._mac_ver_xml"
    ],
    "platform.machine": [
        "platform.uname"
    ],
    "platform.python_implementation": [
        "platform._sys_version"
    ],
    "platform.system": [
        "platform.uname"
    ],
    "platform.uname": [
        "<builtin>.filter",
        "<builtin>.list",
        "platform._syscmd_uname"
    ],
    "plistlib": [
        "xml.parsers.expat",
        "plistlib._PlistParser",
        "contextlib.contextmanager",
        "plistlib._BinaryPlistParser",
        "enum.__members__",
        "enum.Enum.__hash__",
        "plistlib.UID",
        "plistlib._DumbXMLWriter",
        "re.compile",
        "<builtin>.globals",
        "<builtin>.object",
        "plistlib.InvalidFileException",
        "plistlib._BinaryPlistWriter",
        "<builtin>.dict",
        "plistlib._PlistWriter",
        "enum.EnumMeta.__call__",
        "plistlib.Data"
    ],
    "plistlib._PlistParser.begin_dict": [
        "plistlib._PlistParser.add_object"
    ],
    "plistlib._PlistParser.end_key": [
        "plistlib._PlistParser.get_data",
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "plistlib._PlistParser.end_string": [
        "plistlib._PlistParser.get_data",
        "plistlib._PlistParser.add_object"
    ],
    "plistlib._PlistParser.handle_begin_element": [
        "plistlib._PlistParser.begin_dict",
        "<builtin>.getattr"
    ],
    "plistlib._PlistParser.handle_end_element": [
        "plistlib._PlistParser.end_key",
        "<builtin>.getattr",
        "plistlib._PlistParser.end_string",
        "plistlib._PlistParser.end_dict"
    ],
    "plistlib._PlistParser.parse": [
        "plistlib._PlistParser.handle_data",
        "plistlib._PlistParser.handle_end_element",
        "plistlib._PlistParser.handle_begin_element"
    ],
    "plistlib.load": [
        "<str>.seek",
        "plistlib._is_fmt_xml",
        "<str>.read",
        "<map>.values",
        "plistlib._PlistParser.parse",
        "plistlib._PlistParser.__init__"
    ],
    "posixpath._joinrealpath": [
        "posixpath.islink",
        "posixpath.split",
        "posixpath.isabs",
        "<builtin>.isinstance",
        "os.readlink",
        "posixpath.join",
        "posixpath._joinrealpath"
    ],
    "posixpath.abspath": [
        "posixpath.normpath",
        "<builtin>.isinstance",
        "os.getcwdb",
        "os.getcwd",
        "posixpath.isabs",
        "posixpath.join"
    ],
    "posixpath.basename": [
        "posixpath._get_sep",
        "<str>.rfind"
    ],
    "posixpath.dirname": [
        "<builtin>.len",
        "<str>.rfind",
        "posixpath._get_sep"
    ],
    "posixpath.expanduser": [
        "os._Environ.__getitem__",
        "pwd.getpwuid",
        "<builtin>.isinstance",
        "<builtin>.str",
        "_collections_abc.Mapping.__contains__",
        "pwd.getpwnam",
        "<builtin>.len",
        "<str>.rstrip",
        "posixpath._get_sep",
        "os.getuid",
        "<str>.startswith",
        "<str>.find"
    ],
    "posixpath.isabs": [
        "<str>.startswith",
        "posixpath._get_sep"
    ],
    "posixpath.join": [
        "<str>.endswith",
        "genericpath._check_arg_types",
        "posixpath._get_sep",
        "<builtin>.map"
    ],
    "posixpath.realpath": [
        "posixpath.abspath",
        "posixpath._joinrealpath"
    ],
    "posixpath.split": [
        "<builtin>.len",
        "<str>.rfind",
        "posixpath._get_sep"
    ],
    "posixpath.splitext": [
        "genericpath._splitext",
        "<builtin>.isinstance"
    ],
    "pprint": [
        "<builtin>.frozenset",
        "pprint._perfcheck",
        "<builtin>.type",
        "pprint.PrettyPrinter",
        "pprint._safe_key"
    ],
    "preflowpush": [],
    "random": [
        "random.Random.__init__",
        "random.Random",
        "<builtin>.hasattr",
        "random._test",
        "random.SystemRandom",
        "random.__init_subclass__"
    ],
    "random.Random.__init__": [
        "random.SystemRandom.seed",
        "random.Random.seed"
    ],
    "random.Random.choice": [
        "random._randbelow_with_getrandbits",
        "<builtin>.len",
        "<builtin>.IndexError"
    ],
    "re._compile": [
        "sre_compile.compile",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "types.DynamicClassAttribute.__get__",
        "enum.IntFlag.__and__",
        "<builtin>.len",
        "<builtin>.iter",
        "<builtin>.type",
        "sre_compile.isstring",
        "<builtin>.next",
        "<builtin>.ValueError"
    ],
    "re.compile": [
        "re._compile"
    ],
    "re.match": [
        "re._compile"
    ],
    "re.search": [
        "re._compile",
        "<str>.search"
    ],
    "re.split": [
        "re._compile",
        "<str>.split"
    ],
    "re.sub": [
        "re._compile",
        "<str>.sub"
    ],
    "scipy.fft.helper": [
        "numpy.core.overrides.set_module",
        "numpy.core.overrides.decorator",
        "numpy.core.overrides.array_function_dispatch"
    ],
    "secrets": [
        "random.Random.__init__"
    ],
    "selectors": [
        "selectors._BaseSelectorImpl",
        "selectors.BaseSelector",
        "<builtin>.hasattr",
        "selectors._PollLikeSelector",
        "<builtin>.globals",
        "selectors.PollSelector",
        "abc.__new__",
        "selectors.SelectSelector",
        "selectors._SelectorMapping",
        "collections.namedtuple",
        "selectors.KqueueSelector"
    ],
    "selectors.BaseSelector": [
        "abc.abstractmethod"
    ],
    "signal": [
        "functools.update_wrapper",
        "enum.EnumMeta._convert_",
        "functools.wraps",
        "<builtin>.globals"
    ],
    "socket": [
        "<builtin>.getattr",
        "<list>.append",
        "enum.EnumMeta._convert_",
        "<list>.extend",
        "<builtin>.hasattr",
        "socket.SocketIO",
        "sys.platform.lower",
        "socket._GiveupOnSendfile",
        "<builtin>.object",
        "abc.__new__",
        "socket.socket",
        "os._get_exports_list"
    ],
    "sre_compile._code": [
        "sre_compile._compile_info",
        "<list>.append",
        "sre_compile._compile"
    ],
    "sre_compile._compile": [
        "sre_parse.SubPattern.__getitem__",
        "<map>.get",
        "sre_compile._optimize_charset",
        "sre_compile._simple",
        "sre_compile._compile_charset",
        "sre_compile._combine_flags",
        "sre_parse.SubPattern.getwidth",
        "sre_compile._compile"
    ],
    "sre_compile._compile_info": [
        "sre_compile._generate_overlap_table",
        "<list>.extend",
        "sre_compile._optimize_charset",
        "sre_compile._get_literal_prefix",
        "<builtin>.len",
        "sre_compile._compile_charset",
        "<str>.getwidth",
        "sre_parse.SubPattern.getwidth",
        "<builtin>.min",
        "sre_compile._get_charset_prefix"
    ],
    "sre_compile._get_charset_prefix": [
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__getitem__",
        "sre_compile._get_iscased",
        "<builtin>.any",
        "<builtin>.map",
        "sre_compile._combine_flags",
        "<builtin>.range"
    ],
    "sre_compile._get_literal_prefix": [
        "<list>.extend",
        "sre_compile._get_iscased",
        "sre_compile._get_literal_prefix",
        "<builtin>.len",
        "sre_compile._combine_flags"
    ],
    "sre_compile._optimize_charset": [
        "<list>.append",
        "<builtin>.bytearray",
        "<builtin>.len",
        "<builtin>.any",
        "sre_compile._mk_bitmap",
        "<builtin>.bytes",
        "<builtin>.map",
        "sre_compile._bytes_to_codes",
        "<builtin>.range"
    ],
    "sre_compile._simple": [
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__getitem__",
        "<builtin>.len",
        "sre_compile._simple"
    ],
    "sre_compile.compile": [
        "_sre.compile",
        "sre_parse.parse",
        "<map>.items",
        "sre_compile.dis",
        "sre_parse.groups",
        "sre_compile._code",
        "sre_compile.isstring",
        "<builtin>.print",
        "<builtin>.tuple"
    ],
    "sre_parse.State.checkgroup": [
        "sre_parse.groups"
    ],
    "sre_parse.State.closegroup": [
        "sre_parse.SubPattern.getwidth"
    ],
    "sre_parse.State.opengroup": [
        "sre_parse.groups"
    ],
    "sre_parse.SubPattern.__getitem__": [
        "<builtin>.isinstance",
        "sre_parse.SubPattern.__init__"
    ],
    "sre_parse.SubPattern.__setitem__": [
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__getitem__"
    ],
    "sre_parse.SubPattern.getwidth": [
        "<builtin>.max",
        "<builtin>.min",
        "sre_parse.SubPattern.getwidth"
    ],
    "sre_parse.Tokenizer.__init__": [
        "sre_parse.Tokenizer.__next",
        "<builtin>.isinstance",
        "<builtin>.str"
    ],
    "sre_parse.Tokenizer.get": [
        "sre_parse.Tokenizer.__next"
    ],
    "sre_parse.Tokenizer.getuntil": [
        "sre_parse.Tokenizer.__next",
        "sre_parse.Tokenizer.error",
        "<builtin>.len"
    ],
    "sre_parse.Tokenizer.getwhile": [
        "<builtin>.range",
        "sre_parse.Tokenizer.__next"
    ],
    "sre_parse.Tokenizer.match": [
        "sre_parse.Tokenizer.__next"
    ],
    "sre_parse.Tokenizer.seek": [
        "sre_parse.Tokenizer.__next"
    ],
    "sre_parse._class_escape": [
        "<builtin>.chr",
        "<builtin>.len",
        "<builtin>.int",
        "<builtin>.ord",
        "sre_parse.Tokenizer.getwhile"
    ],
    "sre_parse._escape": [
        "unicodedata.lookup",
        "<builtin>.chr",
        "sre_parse.State.checkgroup",
        "<builtin>.int",
        "<builtin>.len",
        "<builtin>.ord",
        "sre_parse.groups",
        "sre_parse.State.checklookbehindgroup"
    ],
    "sre_parse._parse": [
        "sre_parse.SubPattern.__len__",
        "sre_parse._parse_flags",
        "<builtin>.int",
        "<builtin>.OverflowError",
        "sre_parse.Tokenizer.tell",
        "sre_parse._uniq",
        "sre_parse.SubPattern.__setitem__",
        "sre_parse.Tokenizer.getuntil",
        "sre_parse.State.opengroup",
        "sre_parse.State.closegroup",
        "sre_parse._escape",
        "sre_parse.Tokenizer.get",
        "sre_parse.groups",
        "sre_parse.SubPattern.__init__",
        "sre_parse.SubPattern.__getitem__",
        "sre_parse.SubPattern.append",
        "<builtin>.AssertionError",
        "<builtin>.len",
        "sre_parse._class_escape",
        "warnings.warn",
        "sre_parse._parse_sub",
        "sre_parse.Tokenizer.seek",
        "<builtin>.range",
        "sre_parse._parse",
        "sre_parse.Tokenizer.match"
    ],
    "sre_parse._parse_flags": [
        "sre_parse.Tokenizer.get",
        "<builtin>.len"
    ],
    "sre_parse._parse_sub": [
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__getitem__",
        "sre_parse.Tokenizer.tell",
        "<list>.extend",
        "<list>.append",
        "sre_parse.SubPattern.append",
        "<builtin>.len",
        "sre_parse.SubPattern.__init__",
        "sre_parse._parse",
        "sre_parse.Tokenizer.match"
    ],
    "sre_parse.parse": [
        "sre_parse.State.__init__",
        "sre_parse.fix_flags",
        "sre_parse._parse_sub",
        "sre_parse.Tokenizer.__init__"
    ],
    "string": [
        "string._TemplateMetaclass",
        "string.Formatter",
        "string.Template",
        "string._TemplateMetaclass.__init__"
    ],
    "string._TemplateMetaclass.__init__": [
        "re.escape",
        "<builtin>.super",
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "subprocess": [
        "subprocess._use_posix_spawn",
        "<builtin>.getattr",
        "subprocess.Popen",
        "subprocess.CalledProcessError",
        "<builtin>.hasattr",
        "subprocess.SubprocessError",
        "signal",
        "subprocess.CompletedProcess",
        "selectors",
        "subprocess.TimeoutExpired"
    ],
    "subprocess.Popen.__del__": [
        "subprocess.Popen._internal_poll"
    ],
    "subprocess.Popen.__exit__": [
        "subprocess.Popen.wait"
    ],
    "subprocess.Popen.__init__": [
        "<builtin>.isinstance",
        "io.TextIOWrapper",
        "<builtin>.TypeError",
        "<builtin>.hasattr",
        "subprocess.Popen._get_handles",
        "<builtin>.bool",
        "subprocess.Popen._execute_child",
        "<builtin>.filter",
        "codecs.BufferedIncrementalDecoder.__init__",
        "os.close",
        "io.open",
        "_bootlocale.getpreferredencoding",
        "warnings.warn",
        "<builtin>.ValueError",
        "msvcrt.open_osfhandle",
        "subprocess._cleanup"
    ],
    "subprocess.Popen._close_pipe_fds": [
        "contextlib._BaseExitStack.callback",
        "contextlib.ExitStack.__enter__",
        "<builtin>.getattr",
        "contextlib.ExitStack.__exit__",
        "contextlib._BaseExitStack.__init__"
    ],
    "subprocess.Popen._execute_child": [
        "posixpath.dirname",
        "subprocess.Popen._close_pipe_fds",
        "<builtin>.bytearray",
        "os.waitpid",
        "<builtin>.int",
        "os.read",
        "sys.audit",
        "<builtin>.map",
        "subprocess.STARTUPINFO.__init__",
        "<builtin>.issubclass",
        "_winapi.CloseHandle",
        "<builtin>.set",
        "<builtin>.getattr",
        "os.environ.get",
        "<builtin>.TypeError",
        "os.fsencode",
        "os.strerror",
        "subprocess.Popen._handle_exitstatus",
        "<builtin>.bytes",
        "os.close",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.hasattr",
        "<builtin>.list",
        "os.get_exec_path",
        "subprocess.list2cmdline",
        "<builtin>.bool",
        "os.pipe",
        "subprocess.Popen._posix_spawn",
        "_posixsubprocess.fork_exec",
        "os.dup",
        "posixpath.join",
        "<builtin>.tuple",
        "_winapi.CreateProcess",
        "<builtin>.sorted",
        "<builtin>.isinstance",
        "subprocess.STARTUPINFO.copy",
        "subprocess.Popen._filter_handle_list",
        "<builtin>.len",
        "warnings.warn",
        "<builtin>.ValueError"
    ],
    "subprocess.Popen._get_handles": [
        "msvcrt.get_osfhandle",
        "<builtin>.isinstance",
        "subprocess.Popen._make_inheritable",
        "_winapi.GetStdHandle",
        "os.pipe",
        "_winapi.CreatePipe",
        "_winapi.CloseHandle",
        "subprocess.Popen._get_devnull",
        "sys.__stdout__.fileno"
    ],
    "subprocess.Popen._wait": [
        "_winapi.WaitForSingleObject",
        "subprocess.Popen._try_wait",
        "subprocess.Popen._remaining_time",
        "subprocess.Popen._handle_exitstatus",
        "_winapi.GetExitCodeProcess",
        "<builtin>.int",
        "time.monotonic",
        "subprocess.TimeoutExpired.__init__",
        "<builtin>.min",
        "time.sleep"
    ],
    "subprocess.Popen.communicate": [
        "subprocess.Popen.wait",
        "<builtin>.min",
        "<builtin>.ValueError",
        "codecs.BufferedIncrementalDecoder.decode"
    ],
    "subprocess.Popen.poll": [
        "subprocess.Popen._internal_poll"
    ],
    "subprocess.Popen.wait": [
        "subprocess.Popen._wait",
        "<builtin>.min",
        "time.monotonic",
        "subprocess.Popen._remaining_time"
    ],
    "subprocess.check_output": [
        "subprocess.Popen.__del__",
        "<builtin>.ValueError",
        "subprocess.run"
    ],
    "subprocess.run": [
        "subprocess.Popen.communicate",
        "subprocess.CompletedProcess.__init__",
        "subprocess.Popen.__enter__",
        "subprocess.Popen.__exit__",
        "<builtin>.ValueError",
        "subprocess.Popen.__init__",
        "subprocess.Popen.poll"
    ],
    "sysconfig._expand_vars": [
        "posixpath.normpath",
        "sysconfig.get_config_vars",
        "sysconfig._subst_vars",
        "sysconfig._extend_dict",
        "posixpath.expanduser"
    ],
    "sysconfig._get_sysconfigdata_name": [
        "<builtin>.getattr",
        "_collections_abc.Mapping.get"
    ],
    "sysconfig._getuserbase": [
        "sysconfig._getuserbase.joinuser",
        "_collections_abc.Mapping.get"
    ],
    "sysconfig._getuserbase.joinuser": [
        "posixpath.expanduser",
        "posixpath.join"
    ],
    "sysconfig._init_posix": [
        "<builtin>.locals",
        "<builtin>.__import__",
        "sysconfig._get_sysconfigdata_name",
        "<builtin>.globals"
    ],
    "sysconfig._safe_realpath": [
        "posixpath.realpath"
    ],
    "sysconfig.get_config_vars": [
        "posixpath.dirname",
        "sysconfig.get_makefile_filename",
        "<list>.append",
        "<map>.get",
        "sysconfig._getuserbase",
        "_osx_support.customize_config_vars",
        "sysconfig._safe_realpath",
        "sysconfig._init_posix",
        "sysconfig._init_non_posix",
        "posixpath.join"
    ],
    "sysconfig.get_makefile_filename": [
        "<builtin>.hasattr",
        "posixpath.join",
        "sysconfig.get_path"
    ],
    "sysconfig.get_path": [
        "sysconfig.get_paths"
    ],
    "sysconfig.get_paths": [
        "sysconfig._expand_vars"
    ],
    "sysconfig.get_platform": [
        "sys.version.lower",
        "<str>.match",
        "<builtin>.hasattr",
        "sysconfig.get_config_vars",
        "_collections_abc.Mapping.get",
        "re.compile",
        "<builtin>.int",
        "<str>.group",
        "os.uname",
        "_osx_support.get_platform_osx"
    ],
    "tempfile": [
        "tempfile.TemporaryDirectory",
        "tempfile._TemporaryFileWrapper",
        "<builtin>.hasattr",
        "tempfile.SpooledTemporaryFile",
        "tempfile._TemporaryFileCloser",
        "tempfile._RandomNameSequence"
    ],
    "tempfile._RandomNameSequence.__next__": [
        "<builtin>.range",
        "tempfile._RandomNameSequence.rng"
    ],
    "tempfile._RandomNameSequence.rng": [
        "<builtin>.getattr",
        "random.Random.__init__"
    ],
    "tempfile._candidate_tempdir_list": [
        "os.getcwd",
        "os.getenv"
    ],
    "tempfile._get_default_tempdir": [
        "tempfile._RandomNameSequence.__next__",
        "os.access",
        "tempfile._candidate_tempdir_list",
        "os.unlink",
        "<builtin>.FileNotFoundError",
        "posixpath.isdir",
        "os.close",
        "os.open",
        "posixpath.abspath",
        "io.open",
        "<builtin>.range",
        "posixpath.join",
        "<builtin>.next"
    ],
    "tempfile.gettempdir": [
        "tempfile._get_default_tempdir"
    ],
    "textrank4zh": [
        "textrank4zh.TextRank4Keyword",
        "textrank4zh.TextRank4Sentence",
        "textrank4zh.util",
        "textrank4zh.Segmentation"
    ],
    "textrank4zh.Segmentation": [
        "textrank4zh.Segmentation.SentenceSegmentation",
        "jieba.posseg",
        "textrank4zh.Segmentation.Segmentation",
        "textrank4zh.Segmentation.WordSegmentation",
        "textrank4zh.util"
    ],
    "textrank4zh.Segmentation.Segmentation.__init__": [
        "textrank4zh.Segmentation.SentenceSegmentation.__init__",
        "textrank4zh.Segmentation.WordSegmentation.__init__"
    ],
    "textrank4zh.Segmentation.Segmentation.segment": [
        "textrank4zh.util.AttrDict.__init__",
        "textrank4zh.util.as_text",
        "textrank4zh.Segmentation.SentenceSegmentation.segment",
        "textrank4zh.Segmentation.WordSegmentation.segment_sentences"
    ],
    "textrank4zh.util.as_text": [
        "<builtin>.ValueError",
        "<builtin>.isinstance",
        "<builtin>.type"
    ],
    "textrank4zh.Segmentation.SentenceSegmentation.__init__": [
        "textrank4zh.util.as_text",
        "<builtin>.set"
    ],
    "textrank4zh.Segmentation.SentenceSegmentation.segment": [
        "textrank4zh.util.as_text",
        "<builtin>.len",
        "textrank4zh.util.debug"
    ],
    "textrank4zh.Segmentation.WordSegmentation.__init__": [
        "codecs.StreamReaderWriter.__next__",
        "codecs.open",
        "codecs.StreamReaderWriter.__iter__",
        "textrank4zh.util.as_text",
        "textrank4zh.Segmentation.get_default_stop_words_file",
        "<builtin>.type",
        "<builtin>.set"
    ],
    "textrank4zh.Segmentation.WordSegmentation.segment": [
        "textrank4zh.util.as_text",
        "<builtin>.len",
        "jieba.posseg.cut"
    ],
    "textrank4zh.Segmentation.WordSegmentation.segment_sentences": [
        "<list>.append",
        "textrank4zh.Segmentation.WordSegmentation.segment"
    ],
    "textrank4zh.Segmentation.get_default_stop_words_file": [
        "posixpath.dirname",
        "posixpath.join",
        "posixpath.realpath"
    ],
    "textrank4zh.TextRank4Keyword": [
        "textrank4zh.TextRank4Keyword.TextRank4Keyword",
        "textrank4zh.util",
        "textrank4zh.Segmentation"
    ],
    "textrank4zh.TextRank4Keyword.TextRank4Keyword.__init__": [
        "textrank4zh.Segmentation.Segmentation.__init__"
    ],
    "textrank4zh.TextRank4Keyword.TextRank4Keyword.analyze": [
        "textrank4zh.util.sort_words",
        "textrank4zh.util.debug",
        "textrank4zh.Segmentation.Segmentation.segment"
    ],
    "textrank4zh.TextRank4Keyword.TextRank4Keyword.get_keyphrases": [
        "<list>.append",
        "<builtin>.len",
        "textrank4zh.TextRank4Keyword.TextRank4Keyword.get_keywords",
        "<str>.count",
        "<builtin>.set"
    ],
    "textrank4zh.TextRank4Sentence.TextRank4Sentence.get_key_sentences": [
        "<list>.append",
        "<builtin>.len"
    ],
    "textrank4zh.util.is_text": [
        "<builtin>.isinstance"
    ],
    "textrank4zh.TextRank4Keyword.TextRank4Keyword.get_keywords": [
        "<list>.append",
        "<builtin>.len"
    ],
    "textrank4zh.TextRank4Sentence": [
        "textrank4zh.TextRank4Sentence.TextRank4Sentence",
        "textrank4zh.util",
        "textrank4zh.Segmentation"
    ],
    "textrank4zh.TextRank4Sentence.TextRank4Sentence.__init__": [
        "textrank4zh.Segmentation.Segmentation.__init__"
    ],
    "textrank4zh.TextRank4Sentence.TextRank4Sentence.analyze": [
        "textrank4zh.util.sort_sentences",
        "textrank4zh.Segmentation.Segmentation.segment"
    ],
    "textrank4zh.util": [
        "textrank4zh.util.AttrDict",
        "os",
        "networkx",
        "__future__"
    ],
    "textrank4zh.util.debug": [
        "os._Environ.__getitem__",
        "<builtin>.print",
        "<builtin>.str",
        "<str>.join"
    ],
    "textrank4zh.util.get_similarity": [
        "<builtin>.abs",
        "<builtin>.list",
        "<builtin>.len",
        "<builtin>.float",
        "<builtin>.set",
        "<builtin>.sum"
    ],
    "textrank4zh.util.sort_sentences": [
        "textrank4zh.util.AttrDict.__init__",
        "<list>.append",
        "<builtin>.sorted",
        "networkx.utils.decorator.fun",
        "<builtin>.len",
        "textrank4zh.util.get_similarity",
        "textrank4zh.util.<lambda>",
        "networkx.convert_matrix.from_numpy_matrix"
    ],
    "textrank4zh.util.AttrDict.__init__": [
        "<builtin>.super"
    ],
    "textrank4zh.util.sort_words": [
        "textrank4zh.util.AttrDict.__init__",
        "textrank4zh.util.combine",
        "<builtin>.sorted",
        "<list>.append",
        "networkx.utils.decorator.fun",
        "textrank4zh.util.<lambda>",
        "textrank4zh.util.debug",
        "networkx.convert_matrix.from_numpy_matrix"
    ],
    "textrank4zh.util.combine": [
        "<builtin>.zip",
        "<builtin>.len"
    ],
    "textwrap": [
        "textwrap.dedent",
        "<builtin>.print",
        "re.compile",
        "textwrap.TextWrapper"
    ],
    "textwrap.TextWrapper": [
        "re.escape",
        "<builtin>.ord",
        "re.compile"
    ],
    "textwrap.dedent": [
        "<builtin>.zip",
        "re.sub",
        "<str>.findall",
        "<builtin>.enumerate",
        "<str>.sub",
        "<str>.split"
    ],
    "tokenize.detect_encoding": [
        "tokenize.detect_encoding.find_cookie",
        "tokenize.detect_encoding.read_or_stop"
    ],
    "tokenize.open": [
        "_io.TextIOWrapper",
        "builtins.open",
        "codecs.BufferedIncrementalDecoder.__init__",
        "tokenize.detect_encoding"
    ],
    "traceback": [
        "traceback.FrameSummary",
        "traceback.TracebackException",
        "linecache",
        "traceback.StackSummary"
    ],
    "traceback.FrameSummary.__getitem__": [
        "traceback.FrameSummary.line"
    ],
    "traceback.FrameSummary.line": [
        "linecache.getline"
    ],
    "traceback.StackSummary.extract": [
        "traceback.FrameSummary.__init__",
        "<builtin>.getattr",
        "linecache.lazycache",
        "itertools.islice",
        "traceback.FrameSummary.line",
        "collections.deque",
        "linecache.checkcache",
        "<builtin>.set",
        "traceback.walk_stack"
    ],
    "traceback.extract_stack": [
        "traceback.walk_stack",
        "traceback.StackSummary.extract"
    ],
    "types.DynamicClassAttribute.__get__": [
        "<builtin>.AttributeError",
        "enum.value",
        "enum.name"
    ],
    "typing": [
        "typing.SupportsFloat",
        "typing.NamedTuple",
        "typing.inner",
        "typing.io",
        "typing.TextIO",
        "typing._GenericAlias.__setattr__",
        "typing.runtime_checkable",
        "typing.SupportsIndex",
        "typing.SupportsComplex",
        "typing.Generic.__init_subclass__",
        "typing.NamedTupleMeta",
        "typing._Immutable",
        "typing.TypeVar",
        "typing._GenericAlias.__mro_entries__",
        "typing.ForwardRef",
        "typing.SupportsRound",
        "typing.SupportsInt",
        "typing._TypingEmpty",
        "typing.TypeVar.__init__",
        "typing.SupportsAbs",
        "typing.re",
        "typing.TypedDict",
        "typing._SpecialForm",
        "typing._ProtocolMeta",
        "typing._GenericAlias.__init__",
        "typing.__new__",
        "typing.Generic",
        "typing._GenericAlias",
        "typing.Protocol",
        "typing.BinaryIO",
        "typing._Final",
        "typing._TypedDictMeta",
        "typing.IO",
        "typing._alias",
        "typing._TypingEllipsis",
        "typing.SupportsBytes",
        "abc.__new__",
        "typing._SpecialForm.__init__",
        "typing._VariadicGenericAlias"
    ],
    "typing.BinaryIO": [
        "abc.abstractmethod",
        "typing.inner"
    ],
    "typing.Generic": [
        "typing._tp_cache"
    ],
    "typing.Generic.__class_getitem__": [
        "typing._type_check",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.len",
        "typing._GenericAlias.__init__",
        "typing._check_generic",
        "<builtin>.all",
        "<builtin>.set",
        "<builtin>.tuple"
    ],
    "typing.Generic.__init_subclass__": [
        "<builtin>.super",
        "typing._collect_type_vars",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.str",
        "typing.Generic.__init_subclass__",
        "typing._GenericAlias.__eq__",
        "<builtin>.set",
        "<builtin>.tuple"
    ],
    "typing.IO": [
        "abc.abstractmethod",
        "typing.inner",
        "<builtin>.property"
    ],
    "typing.SupportsAbs": [
        "abc.abstractmethod"
    ],
    "typing.SupportsBytes": [
        "abc.abstractmethod"
    ],
    "typing.SupportsComplex": [
        "abc.abstractmethod"
    ],
    "typing.SupportsFloat": [
        "abc.abstractmethod"
    ],
    "typing.SupportsIndex": [
        "abc.abstractmethod"
    ],
    "typing.SupportsInt": [
        "abc.abstractmethod"
    ],
    "typing.SupportsRound": [
        "abc.abstractmethod"
    ],
    "typing.TextIO": [
        "abc.abstractmethod",
        "typing.inner",
        "<builtin>.property"
    ],
    "typing.TypeVar.__init__": [
        "typing._type_check",
        "sys._getframe",
        "<builtin>.TypeError",
        "<builtin>.len",
        "<builtin>.bool",
        "<builtin>.ValueError",
        "<builtin>.tuple"
    ],
    "typing._GenericAlias": [
        "typing._tp_cache"
    ],
    "typing._GenericAlias.__hash__": [
        "<builtin>.hash",
        "<builtin>.frozenset",
        "typing._SpecialForm.__hash__",
        "typing._GenericAlias.__hash__"
    ],
    "typing._GenericAlias.__init__": [
        "typing._collect_type_vars",
        "<builtin>.isinstance",
        "<map>.get",
        "typing._GenericAlias.__setattr__",
        "<builtin>.tuple"
    ],
    "typing._GenericAlias.__mro_entries__": [
        "<builtin>.isinstance",
        "<builtin>.any",
        "typing._GenericAlias.__eq__",
        "<builtin>.issubclass",
        "<builtin>.tuple"
    ],
    "typing._GenericAlias.__setattr__": [
        "<builtin>.setattr",
        "<builtin>.super",
        "typing._is_dunder"
    ],
    "typing._GenericAlias.copy_with": [
        "typing._GenericAlias.__init__"
    ],
    "typing._SpecialForm": [
        "typing._tp_cache"
    ],
    "typing._SpecialForm.__getitem__": [
        "typing._type_check",
        "<builtin>.isinstance",
        "typing.inner",
        "<builtin>.TypeError",
        "typing._remove_dups_flatten",
        "<builtin>.len",
        "typing._GenericAlias.__init__",
        "<builtin>.type",
        "typing._check_generic",
        "typing._subs_tvars",
        "<builtin>.tuple"
    ],
    "typing._VariadicGenericAlias": [
        "typing._tp_cache"
    ],
    "typing._VariadicGenericAlias.__getitem__": [
        "<builtin>.isinstance",
        "typing.inner",
        "<builtin>.TypeError",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "typing._VariadicGenericAlias.__getitem_inner__": [
        "<builtin>.super",
        "typing._type_check",
        "<builtin>.isinstance",
        "typing._GenericAlias.copy_with",
        "<builtin>.len",
        "typing._GenericAlias.__eq__",
        "<builtin>.tuple"
    ],
    "typing.__new__": [
        "typing._make_nmtuple"
    ],
    "typing._alias": [
        "typing._GenericAlias.__init__"
    ],
    "typing._make_nmtuple": [
        "typing._type_check",
        "sys._getframe",
        "collections.namedtuple",
        "<builtin>.dict"
    ],
    "typing._remove_dups_flatten": [
        "typing.ForwardRef.__hash__",
        "<builtin>.isinstance",
        "<builtin>.len",
        "typing._GenericAlias.__hash__",
        "<builtin>.set",
        "<builtin>.tuple"
    ],
    "typing._subs_tvars": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "typing._GenericAlias.copy_with",
        "<builtin>.enumerate",
        "typing._subs_tvars",
        "<builtin>.tuple"
    ],
    "typing._tp_cache": [
        "functools.lru_cache",
        "<list>.append",
        "functools.wraps",
        "functools.singledispatch.wrapper",
        "_functools.partial",
        "functools.update_wrapper",
        "functools.singledispatchmethod.__get__._method",
        "functools.lru_cache.decorating_function"
    ],
    "typing._type_check": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "typing._SpecialForm.__eq__",
        "typing.ForwardRef.__init__",
        "<builtin>.type",
        "typing._GenericAlias.__eq__",
        "<builtin>.callable"
    ],
    "typing.inner": [
        "typing.Generic.__class_getitem__",
        "typing._SpecialForm.__hash__",
        "typing._SpecialForm.__getitem__",
        "typing._VariadicGenericAlias.__getitem_inner__",
        "typing._GenericAlias.__hash__"
    ],
    "urllib.parse": [
        "urllib.parse.SplitResult",
        "urllib.parse.ParseResult",
        "urllib.parse._ResultMixinBytes",
        "urllib.parse._ResultMixinStr",
        "urllib.parse._fix_result_transcoding",
        "<builtin>.frozenset",
        "urllib.parse._NetlocResultMixinStr",
        "re.compile",
        "urllib.parse._NetlocResultMixinBytes",
        "urllib.parse.DefragResultBytes",
        "<builtin>.bytes",
        "urllib.parse._NetlocResultMixinBase",
        "urllib.parse.Quoter",
        "collections.namedtuple",
        "urllib.parse.DefragResult",
        "urllib.parse.ParseResultBytes",
        "urllib.parse.SplitResultBytes"
    ],
    "uuid": [
        "platform",
        "enum.__prepare__",
        "uuid.SafeUUID",
        "uuid.UUID.__init__",
        "uuid.UUID",
        "enum.__new__"
    ],
    "uuid.SafeUUID": [
        "enum._EnumDict.__setitem__"
    ],
    "warnings.filterwarnings": [
        "<builtin>.issubclass",
        "re.compile",
        "<builtin>.isinstance",
        "warnings._add_filter"
    ],
    "warnings.simplefilter": [
        "<builtin>.isinstance",
        "warnings._add_filter"
    ],
    "weakref.WeakValueDictionary.__init__": [
        "<builtin>.set",
        "weakref.WeakValueDictionary.update"
    ],
    "xml.etree.ElementPath": [
        "xml.etree.ElementPath._SelectorContext",
        "re.compile"
    ],
    "xml.etree.ElementTree": [
        "xml.etree.ElementTree.C14NWriterTarget",
        "contextlib.contextmanager",
        "xml.etree.ElementTree.XMLParser",
        "xml.etree.ElementTree.QName",
        "re.compile",
        "xml.etree.ElementTree.XMLPullParser",
        "xml.etree.ElementTree._ListDataStream",
        "xml.etree.ElementTree.ParseError",
        "abc.__new__",
        "xml.etree.ElementTree.TreeBuilder",
        "xml.etree.ElementTree.Element",
        "<builtin>.set",
        "xml.etree.ElementTree.ElementTree"
    ],
    "xml.etree.cElementTree": [],
    "xml.parsers.expat": [],
    "zipfile": [
        "zipfile.LZMADecompressor",
        "zipfile.ZipFile",
        "zipfile._SharedFile",
        "zipfile.PyZipFile",
        "zipfile.LZMACompressor",
        "zipfile._ZipWriteFile",
        "zipfile.LargeZipFile",
        "zipfile.main",
        "zipfile.ZipExtFile",
        "zipfile._Tellable",
        "zipfile.CompleteDirs",
        "struct.calcsize",
        "zipfile.ZipInfo",
        "abc.__new__",
        "zipfile.FastLookup",
        "zipfile.Path",
        "zipfile.BadZipFile"
    ],
    "zipfile.ZipFile._RealGetContents": [
        "<builtin>.NotImplementedError",
        "io.BytesIO",
        "encodings.cp437.Codec.decode",
        "zipfile.ZipInfo._decodeExtra",
        "<builtin>.len",
        "encodings.search_function",
        "struct.unpack",
        "<builtin>.print",
        "zipfile._EndRecData",
        "zipfile.ZipInfo.__init__"
    ],
    "zipfile.ZipFile.__del__": [
        "zipfile.ZipFile.close"
    ],
    "zipfile.ZipFile.__exit__": [
        "zipfile.ZipFile.close"
    ],
    "zipfile.ZipFile.__init__": [
        "zipfile.ZipFile._fpclose",
        "<builtin>.getattr",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.isinstance",
        "threading.RLock",
        "zipfile._check_compression",
        "io.open",
        "zipfile._Tellable.__init__",
        "zipfile.ZipFile._RealGetContents",
        "<builtin>.ValueError"
    ],
    "zipfile.ZipFile.close": [
        "zipfile.ZipFile._fpclose",
        "zipfile.ZipFile._write_end_record",
        "<builtin>.ValueError"
    ],
    "zipfile._EndRecData": [
        "zipfile._EndRecData64",
        "<builtin>.list",
        "<builtin>.max",
        "<builtin>.len",
        "struct.unpack"
    ],
    "zipfile._check_zipfile": [
        "zipfile._EndRecData"
    ],
    "zipfile.is_zipfile": [
        "pathlib._Accessor",
        "networkx.classes.reportviews.OutMultiDegreeView",
        "numpy.core.getlimits._register_type",
        "logging.disable",
        "pkg_resources._vendor.packaging.specifiers.LegacySpecifier",
        "pkg_resources._macos_arch",
        "enum.EnumMeta._convert_",
        "sre_parse.State.checkgroup",
        "numpy.ma.core._MaskedBinaryOperation",
        "ctypes.c_void_p",
        "plistlib._PlistParser.get_data",
        "traceback.FrameSummary.__getitem__",
        "enum._is_descriptor",
        "_osx_support._remove_universal_flags",
        "numpy.ma.core.MaskedArray",
        "jieba.Tokenizer.gen_pfdict",
        "copy._deepcopy_dict",
        "networkx.algorithms.minors.contraction",
        "datetime.timedelta.__neg__",
        "pkg_resources.UnknownExtra",
        "numpy._mac_os_check",
        "contextlib.contextmanager",
        "zipfile.PyZipFile",
        "pkg_resources._vendor.packaging.markers.Value",
        "networkx.algorithms.connectivity",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__call__",
        "marshal.dump",
        "plistlib._PlistParser.handle_end_element",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults._asStringList",
        "traceback.StackSummary",
        "ast.Bytes",
        "pathlib._PosixFlavour",
        "email.parser.HeaderParser",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.preParse",
        "pkg_resources.EntryPoint",
        "pkg_resources._vendor.packaging.pyparsing.Regex",
        "pkg_resources._vendor.packaging.specifiers.InvalidSpecifier",
        "weakref.WeakValueDictionary.__init__",
        "numpy.linalg.linalg._assert_stacked_2d",
        "networkx.exception.NetworkXPointlessConcept",
        "enum.EnumMeta.__getattr__",
        "pkgutil",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.streamline",
        "pkg_resources.safe_name",
        "ctypes.CDLL",
        "networkx.classes.graphviews.SubGraph",
        "pkg_resources._vendor.packaging.pyparsing.Forward",
        "networkx.utils.decorators.not_implemented_for._not_implemented_for",
        "subprocess.TimeoutExpired",
        "numpy.ma.extras._fromnxfunction_allargs",
        "traceback.TracebackException",
        "pkg_resources._vendor.packaging.pyparsing.srange",
        "ctypes.c_longdouble",
        "email.feedparser.BytesFeedParser",
        "selectors.SelectSelector",
        "numpy.lib.index_tricks.ndindex",
        "subprocess.Popen._internal_poll",
        "platform._sys_version",
        "ast.parse",
        "typing._subs_tvars",
        "email.feedparser.BufferedSubFile",
        "networkx.utils",
        "inspect._signature_get_user_defined_method",
        "plistlib.Data",
        "logging",
        "networkx.algorithms.isomorphism.vf2userfunc.MultiDiGraphMatcher",
        "datetime.timedelta",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.parseImpl",
        "datetime.timezone._create",
        "pkg_resources.DefaultProvider",
        "ctypes._endian",
        "sre_compile.dis",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__str__",
        "selectors",
        "networkx.algorithms.asteroidal",
        "numpy.ma.extras._fromnxfunction.getdoc",
        "numpy.core._ufunc_config.errstate",
        "networkx.classes.digraph.DiGraph.adj",
        "logging.LogRecord.__init__",
        "sre_parse.SubPattern.__getitem__",
        "email.quoprimime",
        "copy._reconstruct",
        "numpy.compat._inspect.isfunction",
        "tokenize.open",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseString",
        "textrank4zh.TextRank4Sentence.TextRank4Sentence",
        "pkg_resources._vendor.packaging.pyparsing._PositionToken.__init__",
        "enum._generate_next_value_",
        "jieba.posseg.load_model",
        "numpy.lib.index_tricks.OGridClass",
        "numpy.lib._datasource._FileOpeners",
        "zipfile.ZipFile.__del__",
        "marshal.load",
        "codecs.StreamReaderWriter.__init__",
        "networkx.readwrite.graphml.GraphMLWriter",
        "networkx.readwrite.graph6",
        "numpy.ma.core.MaskedConstant.__array_finalize__",
        "email.charset.Charset",
        "networkx.exception.NetworkXNoCycle",
        "enum._EnumDict.__setitem__",
        "networkx.classes.reportviews.DiDegreeView",
        "numpy.core.numeric.isscalar",
        "numpy.core.numeric.moveaxis",
        "sysconfig._init_non_posix",
        "pkg_resources._vendor.packaging.utils.InvalidWheelFilename",
        "traceback.FrameSummary",
        "numpy.ma.core._DomainedBinaryOperation",
        "_collections_abc.MappingView.__init__",
        "sysconfig._safe_realpath",
        "email.parser.BytesHeaderParser",
        "numpy.core._internal.c_void_p",
        "logging.PercentStyle.format",
        "platform._syscmd_uname",
        "numpy.core._add_newdocs_scalars.add_newdoc_for_scalar_type",
        "sre_parse.SubPattern.getwidth",
        "networkx.algorithms.richclub",
        "numpy.ma.core._DomainTan.__init__",
        "ctypes.c_wchar",
        "pkg_resources._vendor.packaging.markers.Node",
        "pkg_resources.ZipManifests.build",
        "networkx.algorithms.flow.utils.GlobalRelabelThreshold",
        "numpy.polynomial.polyutils.RankWarning",
        "networkx.algorithms.link_analysis.pagerank_alg.pagerank_scipy",
        "numpy.ma.core._extrema_operation",
        "networkx.algorithms.coloring.greedy_coloring_with_interchange.AdjEntry",
        "pkg_resources._vendor.packaging.pyparsing.LineEnd.__init__",
        "typing._TypedDictMeta",
        "networkx.classes.reportviews.MultiDegreeView",
        "re.match",
        "pkg_resources.extern.VendorImporter.install",
        "_osx_support.customize_config_vars",
        "pkg_resources._vendor.packaging.requirements.<lambda>",
        "textrank4zh.Segmentation.SentenceSegmentation",
        "subprocess.Popen._make_inheritable",
        "numpy.core.multiarray.empty",
        "numpy.matrixlib.defmatrix.matrix",
        "numpy.core.arrayprint.DatetimeFormat",
        "pkg_resources._vendor.packaging.utils.InvalidSdistFilename",
        "collections.namedtuple",
        "numpy.ma.core.shape",
        "numpy.linalg.linalg.isComplexType",
        "networkx.classes.reportviews.OutMultiEdgeDataView",
        "logging.LogRecord.getMessage",
        "pkg_resources._vendor.packaging.version.epoch",
        "sre_parse.Tokenizer.tell",
        "numpy.core.arrayprint.SubArrayFormat",
        "ctypes.CFunctionType",
        "re._compile",
        "numpy.core.getlimits.MachArLike._float_to_float",
        "numpy.core.getlimits.iinfo",
        "numbers.Integral",
        "logging.PercentStyle.validate",
        "numpy.polynomial._polybase.ABCPolyBase",
        "plistlib.UID",
        "textrank4zh.util.sort_words",
        "pkg_resources.ZipProvider",
        "posixpath.basename",
        "inspect._signature_from_function",
        "inspect._signature_is_functionlike",
        "calendar._localized_day.__init__",
        "numpy.core._type_aliases._set_up_aliases",
        "pkg_resources._vendor.packaging.pyparsing.StringStart.__init__",
        "networkx.classes.graphviews.ReverseView",
        "collections.Counter.__init__",
        "networkx.algorithms.non_randomness",
        "networkx.utils.heaps.func",
        "networkx.classes.coreviews.FilterMultiInner",
        "networkx.algorithms.moral",
        "subprocess.run",
        "sysconfig._getuserbase.joinuser",
        "pkg_resources.extern.jaraco.text",
        "networkx.readwrite.graphml.IncrementalElement",
        "logging.Manager._clear_cache",
        "pkg_resources.PkgResourcesDeprecationWarning",
        "_functools._lru_cache_wrapper",
        "logging.Manager.__init__",
        "logging.RootLogger.__init__",
        "numpy.ctypeslib._ndptr",
        "pkg_resources._vendor.packaging.pyparsing.Dict",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.__init__",
        "zipfile._EndRecData64",
        "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey",
        "re.compile",
        "sre_parse._uniq",
        "pkg_resources._vendor.packaging.pyparsing.WordEnd",
        "numpy.core.getlimits.MachArLike.smallest_subnormal",
        "networkx.classes.ordered.OrderedGraph",
        "sre_parse.Tokenizer.getuntil",
        "pkg_resources._vendor.packaging.pyparsing.Suppress",
        "numpy.core._exceptions.UFuncTypeError",
        "uuid.UUID.__init__",
        "pkg_resources._vendor.packaging.pyparsing._ErrorStop",
        "pkg_resources.DefaultProvider.get_resource_stream",
        "numpy.lib.mixins._inplace_binary_method",
        "pathlib.WindowsPath",
        "codecs.__new__",
        "networkx.exception.NetworkXNoPath",
        "email._policybase._PolicyBase.__init__",
        "pkg_resources._vendor.packaging.pyparsing._NullToken",
        "networkx.classes.reportviews.DiDegreeView.__init__",
        "pathlib._WildcardSelector",
        "networkx.utils.nodes_or_number",
        "numpy.ma.core._DomainGreater.__init__",
        "numbers.Complex.register",
        "pkg_resources._normalize_cached",
        "pkg_resources._vendor.packaging.pyparsing._Constants",
        "pkg_resources._vendor.packaging.specifiers._IndividualSpecifier",
        "networkx.algorithms.centrality",
        "pkg_resources.PathMetadata",
        "typing.ForwardRef",
        "numpy.ma.extras.MAxisConcatenator",
        "numpy.linalg.linalg.LinAlgError",
        "networkx.classes.digraph.DiGraph.add_edges_from",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.streamline",
        "numpy.ma.core._DomainGreaterEqual",
        "numpy.core._type_aliases._add_aliases",
        "gzip.GzipFile",
        "tempfile._RandomNameSequence.rng",
        "pkg_resources.Distribution",
        "codecs.open",
        "numpy.core.overrides.decorator",
        "tokenize.detect_encoding.find_cookie",
        "email.errors.InvalidMultipartContentTransferEncodingDefect",
        "urllib.parse",
        "networkx.algorithms.flow.utils.CurrentEdge",
        "numpy.lib.index_tricks.nd_grid.__init__",
        "networkx.algorithms.community.quality.NotAPartition",
        "codecs.IncrementalDecoder.__init__",
        "sre_compile.compile",
        "typing.SupportsIndex",
        "networkx.utils.groups",
        "pkg_resources._vendor.packaging.pyparsing.Token",
        "string._TemplateMetaclass.__init__",
        "xml.etree.ElementTree.XMLPullParser",
        "posixpath.exists",
        "jieba.posseg.POSTokenizer.cut",
        "typing.SupportsAbs",
        "email.errors.MultipartConversionError",
        "networkx.algorithms.distance_regular",
        "pkg_resources._vendor.packaging.markers.Op",
        "pkg_resources._vendor.packaging.pyparsing.Regex.parseImpl",
        "pkg_resources.EggProvider.__init__",
        "sysconfig._extend_dict",
        "_posixsubprocess.fork_exec",
        "numpy.lib.index_tricks.IndexExpression.__init__",
        "networkx.readwrite.gexf.GEXFWriter",
        "_collections_abc.MutableMapping.clear",
        "sre_parse.fix_flags",
        "inspect.args",
        "platform",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getitem__",
        "numbers.Number.register",
        "numpy.compat._pep440._BaseVersion",
        "_osx_support._get_system_version",
        "numpy.ma.core._DomainSafeDivide",
        "pkg_resources._vendor.packaging.version.release",
        "pkg_resources._initialize_master_working_set",
        "jieba.posseg.POSTokenizer.__cut_detail",
        "networkx.utils.not_implemented_for",
        "networkx.classes.coreviews.UnionAdjacency",
        "numpy.ma.extras._fromnxfunction",
        "time.time",
        "numpy.core.numeric.errstate",
        "jieba.Tokenizer.get_dict_file",
        "enum._is_dunder",
        "subprocess.list2cmdline",
        "urllib.parse.Quoter",
        "pkg_resources._vendor.packaging.version._cmpkey",
        "typing.Protocol",
        "email.feedparser",
        "logging.Formatter.formatTime",
        "networkx.release.get_info",
        "networkx.algorithms.dominance",
        "pkg_resources.MemoizedZipManifests",
        "numpy.core.umath.geterrobj",
        "pkg_resources.dist_factory",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.parseImpl",
        "logging.PercentStyle.__init__",
        "numpy.array",
        "numpy.core._multiarray_umath.add_docstring",
        "networkx.classes.reportviews.NodeView.__getitem__",
        "networkx.classes.graphviews.MultiGraphView",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst",
        "numeric.outer",
        "numpy.ma.core.MaskedArrayFutureWarning",
        "ast.literal_eval._convert",
        "pkg_resources._vendor.packaging.pyparsing.makeOptionalList",
        "zipfile.ZipFile.__exit__",
        "email._policybase._extend_docstrings",
        "pkg_resources.fixup_namespace_packages",
        "networkx.classes.reportviews.NodeView.__iter__",
        "numpy.core.records.record",
        "jieba.posseg.POSTokenizer.__init__",
        "pkg_resources.Distribution._get_metadata",
        "pickle",
        "pprint._safe_key",
        "sysconfig._get_sysconfigdata_name",
        "networkx.utils.decorator.FunctionMaker",
        "numpy.polynomial.legendre.Legendre",
        "typing.__new__",
        "sre_compile._compile_charset",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.tryParse",
        "pkg_resources.MemoizedZipManifests.load",
        "pathlib.PureWindowsPath",
        "numpy.core.numerictypes.obj2sctype",
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException.__init__",
        "xml.parsers.expat",
        "networkx.drawing.nx_agraph.from_agraph",
        "ast",
        "copyreg.__newobj__",
        "posixpath._get_sep",
        "numpy._globals.__new__",
        "numpy.polynomial.chebyshev.Chebyshev",
        "textrank4zh.Segmentation.WordSegmentation.segment_sentences",
        "networkx.algorithms.simple_paths",
        "_frozen_importlib._lock_unlock_module",
        "numpy.core.numeric.dtype",
        "pkg_resources._vendor.packaging.pyparsing.Word.__str__",
        "typing.io",
        "functools.singledispatchmethod.register",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setResultsName",
        "numpy.core.numerictypes._scalar_type_key",
        "numpy.core.arrayprint._TimelikeFormat",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__init__",
        "ctypes.LibraryLoader.__init__",
        "pkg_resources._vendor.packaging.pyparsing._PositionToken",
        "numpy.core.umath.log10",
        "networkx.shortest_path_length",
        "networkx.utils.decorators.py_random_state",
        "urllib.parse.DefragResult",
        "copy.copy",
        "textwrap.dedent",
        "os.readlink",
        "networkx.relabel",
        "decoder.JSONDecoder.raw_decode",
        "pkg_resources._vendor.packaging.version.dev",
        "numpy.core._internal._Stream",
        "_winapi.CreateProcess",
        "email.errors.NonASCIILocalPartDefect",
        "sysconfig.get_config_vars",
        "numpy.ma.core._MaskedBinaryOperation.__init__",
        "enum._EnumDict.__init__",
        "networkx.algorithms.tournament",
        "numpy.core.multiarray.typeinfo.items",
        "enum.__members__",
        "typing._GenericAlias.__setattr__",
        "decoder.JSONDecoder.decode",
        "warnings.simplefilter",
        "numpy.polynomial.laguerre.Laguerre",
        "calendar._localized_month.__init__",
        "numpy.lib._iotools.ConverterError",
        "networkx.classes.graphviews.MultiReverseView",
        "numpy._pytesttester",
        "fractions.Fraction",
        "pkg_resources.EmptyProvider.__init__",
        "numpy.ma.core._replace_dtype_fields_recursive",
        "subprocess.Popen.poll",
        "decoder.JSONDecodeError",
        "pkgutil.get_importer",
        "ctypes.c_wchar_p",
        "os.get_exec_path",
        "urllib.parse._NetlocResultMixinBytes",
        "pkg_resources._vendor.packaging.pyparsing.Group",
        "sre_compile._combine_flags",
        "numpy.compat._inspect.formatargspec",
        "ast.NameConstant",
        "numpy.ma.core._DomainTan",
        "email.errors.MisplacedEnvelopeHeaderDefect",
        "zipfile._ZipWriteFile",
        "datetime.timezone",
        "pkg_resources._vendor.packaging.pyparsing.Keyword",
        "numpy.linalg.linalg._determine_error_states",
        "_collections.OrderedDict",
        "pkg_resources.VersionConflict",
        "tokenize.detect_encoding",
        "datetime.__new__",
        "textrank4zh.TextRank4Keyword.TextRank4Keyword",
        "networkx.algorithms.wiener",
        "networkx.release.get_revision",
        "networkx.algorithms.vitality",
        "logging.Formatter.__init__",
        "subprocess.CompletedProcess.__init__",
        "logging.StreamHandler.flush",
        "numpy.ma.core._DomainCheckInterval.__init__",
        "numpy.lib.index_tricks.OGridClass.__init__",
        "networkx.exception.NetworkXUnfeasible",
        "email.errors.HeaderParseError",
        "pkg_resources.NullProvider",
        "pkg_resources._vendor.packaging.pyparsing.Token.__init__",
        "numpy.ma.core._MaskedUnaryOperation",
        "networkx.utils.decorator.ContextManager",
        "datetime._check_tzinfo_arg",
        "_distutils_hack.<lambda>",
        "numpy.core.getlimits.iinfo.__init__",
        "numpy.lib.npyio.BagObj",
        "networkx.classes.reportviews.OutEdgeView",
        "__future__",
        "warnings.catch_warnings.__enter__",
        "inspect.unwrap",
        "networkx.algorithms.voronoi",
        "numpy.lib.index_tricks.MGridClass",
        "networkx.classes.digraph.DiGraph.__init__",
        "numpy.core._exceptions._UFuncBinaryResolutionError",
        "logging.Logger.callHandlers",
        "pkg_resources.Requirement",
        "email._policybase._append_doc",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.copy",
        "urllib.parse._ResultMixinStr",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.parseImpl",
        "gzip._GzipReader",
        "tokenize.detect_encoding.read_or_stop",
        "xml.etree.ElementTree.ParseError",
        "logging.Logger.isEnabledFor",
        "numpy.core.arrayprint.FloatingFormat",
        "zipfile.ZipFile.namelist",
        "os.getcwd",
        "jieba.lac_small.predict.get_result",
        "logging.Logger.setLevel",
        "numpy.lib.index_tricks.IndexExpression",
        "pkg_resources._vendor.appdirs.AppDirs",
        "textrank4zh.Segmentation.WordSegmentation.segment",
        "datetime.tzinfo",
        "sys.stderr.write",
        "pkg_resources._vendor.packaging.pyparsing.NoMatch",
        "sys.exc_info",
        "numpy.core.getlimits._get_machar",
        "traceback.walk_stack",
        "networkx.algorithms.link_analysis.pagerank_alg.pagerank",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__getitem__",
        "networkx.classes.digraph.DiGraph.is_multigraph",
        "posixpath.split",
        "networkx.algorithms.bridges",
        "typing._remove_dups_flatten",
        "numpy.lib._iotools.ConverterLockError",
        "re.split",
        "networkx.algorithms.swap",
        "pkg_resources._vendor.packaging.pyparsing.Forward.__init__",
        "weakref.WeakKeyDictionary.__init__",
        "numpy.core._dtype_ctypes._from_ctypes_scalar",
        "pkg_resources.Distribution.from_filename",
        "string",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__setitem__",
        "networkx.convert.to_networkx_graph",
        "pkg_resources._always_object",
        "typing._check_generic",
        "tempfile._get_default_tempdir",
        "numpy._version.get_versions",
        "sre_parse.SubPattern.__setitem__",
        "calendar._localized_month",
        "pkg_resources._ReqExtras",
        "gzip.BadGzipFile",
        "threading.current_thread",
        "email.errors.InvalidHeaderDefect",
        "numpy.core.arrayprint._recursive_guard.decorating_function",
        "numpy.core.overrides.array_function_dispatch",
        "numpy.core._methods._sum",
        "numpy.ma.core._DomainedBinaryOperation.__init__",
        "numpy.core.arrayprint._recursive_guard",
        "_pydecimal",
        "datetime._check_time_fields",
        "networkx.linalg.algebraicconnectivity._LUSolver",
        "pkg_resources.find_on_path",
        "numpy.compat._pep440.InvalidVersion",
        "inspect.Signature._bind",
        "threading.RLock",
        "pkg_resources._vendor.packaging.markers.Undefined",
        "jieba.posseg.cut",
        "networkx.classes.reportviews.InMultiEdgeView",
        "enum._missing_",
        "numpy.core._add_newdocs_scalars.numericnumpy.core._type_aliases.type_aliases_gen",
        "networkx.algorithms.boundary",
        "hashlib.__get_openssl_constructor",
        "ntpath._get_bothseps",
        "pkg_resources.Distribution.key",
        "numpy.linalg.linalg._assert_stacked_square",
        "networkx.utils.decorator.decorate",
        "os.getuid",
        "sre_compile._compile",
        "pkg_resources._vendor.packaging.pyparsing.Forward.__lshift__",
        "enum.EnumMeta._find_new_",
        "networkx.algorithms.operators",
        "jieba.posseg.POSTokenizer.__cut",
        "sysconfig.get_makefile_filename",
        "enum._create_pseudo_member_",
        "numpy.lib.mixins._unary_method",
        "networkx.classes.reportviews.InMultiEdgeDataView",
        "networkx.algorithms.cluster",
        "genericpath.isfile",
        "typing._Final",
        "typing.IO",
        "pkg_resources._vendor.packaging.pyparsing.FollowedBy",
        "networkx.readwrite",
        "pkg_resources.EggMetadata",
        "jieba.posseg.POSTokenizer.__cut_DAG",
        "networkx.exception.ExceededMaxIterations",
        "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher",
        "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian",
        "pkg_resources._vendor.packaging.pyparsing.Regex.__init__",
        "numpy.linalg.linalg._makearray",
        "networkx.classes.coreviews.FilterMultiAdjacency",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__str__",
        "pkg_resources._vendor.packaging.version._BaseVersion.__lt__",
        "logging.Logger.makeRecord",
        "networkx.convert.from_dict_of_dicts",
        "pkg_resources.extern.VendorImporter.load_module",
        "numpy.core._internal._getintp_ctype",
        "email.errors.NonPrintableDefect",
        "_collections_abc.Mapping.__contains__",
        "enum.IntFlag.__and__",
        "numpy.ma.core.MaskedConstant.__setattr__",
        "inspect._signature_from_callable",
        "logging.StreamHandler.emit",
        "numpy.core.getlimits.MachArLike._float_conv",
        "pkg_resources.extern.VendorImporter",
        "pkg_resources",
        "zipfile.ZipInfo.__init__",
        "typing",
        "pkg_resources.WorkingSet.subscribe",
        "numpy.core.numeric.ComplexWarning",
        "pathlib._NormalAccessor",
        "numpy.core._add_newdocs_scalars.numericnumpy.core._type_aliases",
        "inspect.Signature.bind",
        "pkg_resources._vendor.packaging.pyparsing.StringStart.parseImpl",
        "email.errors.FirstHeaderLineIsContinuationDefect",
        "numpy.lib.ufunclike._fix_and_maybe_deprecate_out_named_y",
        "pkg_resources._vendor.packaging.version._parse_local_version",
        "numpy.core.multiarray.copyto",
        "networkx.utils.heaps.BinaryHeap",
        "numpy.core.arrayprint.IntegerFormat",
        "pkg_resources._vendor.packaging.pyparsing.SkipTo",
        "pkg_resources._vendor.packaging._structures.NegativeInfinityType",
        "numpy.lib.mixins._binary_method",
        "tempfile.mkstemp",
        "typing.TypedDict",
        "typing.Generic",
        "numpy.core.function_base.add_newdoc",
        "warnings.catch_warnings.__exit__",
        "typing._alias",
        "os._Environ.__delitem__",
        "pkg_resources.register_namespace_handler",
        "logging.Filterer",
        "sysconfig._getuserbase",
        "pkg_resources.WorkingSet",
        "ctypes.py_object",
        "io.TextIOWrapper",
        "numpy.core.numeric.floor",
        "inspect.default",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__str__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.classes.reportviews.OutEdgeDataView",
        "encodings.cp437.getregentry",
        "subprocess.CalledProcessError",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.copy",
        "networkx.algorithms.tree.branchings",
        "datetime._check_int_field",
        "pkg_resources.Distribution.from_location",
        "numpy.core._exceptions._display_as_base",
        "numpy.linalg.linalg.get_linalg_error_extobj",
        "ctypes.c_ubyte",
        "networkx.algorithms.cycles",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch.__init__",
        "inspect._signature_is_builtin",
        "pkg_resources._vendor.packaging.pyparsing.Regex.__str__",
        "numpy.core.array",
        "numpy.core._exceptions._UFuncNoLoopError",
        "zipfile._check_compression",
        "networkx.algorithms.structuralholes",
        "jieba.posseg.pair.__iter__",
        "networkx.algorithms.chordal.NetworkXTreewidthBoundExceeded",
        "numpy.ma.core.get_object_signature",
        "pkg_resources._initialize",
        "_abc._abc_register",
        "numpy.ma.extras._fromnxfunction_single",
        "tempfile._candidate_tempdir_list",
        "pkg_resources._vendor.packaging.version._BaseVersion.__eq__",
        "sre_compile._get_iscased",
        "textrank4zh.util.as_text",
        "numpy.core.umath.exp2",
        "typing.Generic.__init_subclass__",
        "pkg_resources._vendor.packaging.pyparsing.Literal.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.LineEnd",
        "networkx.algorithms.shortest_paths",
        "os.strerror",
        "networkx.generators.stochastic.stochastic_graph",
        "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingDiGraphMatcher",
        "pkg_resources._vendor.packaging.pyparsing._ForwardNoRecurse",
        "numpy.core.umath.nextafter",
        "pkg_resources._vendor.packaging.pyparsing._makeTags",
        "codecs.StreamReader.__next__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__add__",
        "numpy.lib.index_tricks.RClass.__init__",
        "numpy.core.dot",
        "networkx.classes.reportviews.OutDegreeView",
        "numpy._globals._NoValueType",
        "plistlib.readPlist",
        "random._test",
        "numpy.ma.core._extrema_operation.__init__",
        "numbers",
        "subprocess.CompletedProcess",
        "zipfile.ZipFile._RealGetContents",
        "networkx.classes.graph.Graph.__len__",
        "warnings._add_filter",
        "pkg_resources.get_build_platform",
        "email.charset",
        "os._Environ.__getitem__",
        "email.parser.BytesParser",
        "pkg_resources._vendor.packaging.markers.InvalidMarker",
        "networkx.classes.reportviews.NodeDataView",
        "typing._tp_cache",
        "genericpath",
        "pkg_resources.WorkingSet.__init__",
        "posixpath.expanduser",
        "pkg_resources.EggInfoDistribution",
        "zipfile.ZipFile.__enter__",
        "os.getenv",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__radd__",
        "pathlib.Path",
        "networkx.algorithms.cuts",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter",
        "numpy.compat._inspect.getargspec",
        "numpy.core._type_aliases.bitname",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.addCondition",
        "pkg_resources.PEP440Warning",
        "pkg_resources._vendor.packaging.tags.Tag",
        "networkx.classes.reportviews.OutEdgeView.__init__",
        "tempfile.SpooledTemporaryFile",
        "numpy.__config__",
        "pkg_resources._vendor.packaging.pyparsing.ParseException",
        "pkg_resources.WorkingSet._build_master",
        "msvcrt.open_osfhandle",
        "numpy.ma.core.getmask",
        "coding.NotATree",
        "jieba._compat.resolve_filename",
        "_osx_support._check_for_unavailable_sdk",
        "subprocess.Popen._posix_spawn",
        "sre_compile._simple",
        "pkg_resources._vendor.packaging.pyparsing.Optional.parseImpl",
        "re.sub",
        "pkg_resources.PathMetadata.__init__",
        "linecache",
        "numpy.core.overrides.set_module",
        "pkg_resources._vendor.packaging._musllinux._MuslVersion",
        "numpy.core._type_aliases._add_array_type",
        "numpy.core._dtype_ctypes._from_ctypes_union",
        "ctypes.LibraryLoader",
        "_frozen_importlib._handle_fromlist",
        "networkx.classes.graph.Graph.to_directed_class",
        "logging._StderrHandler.__init__",
        "subprocess.Popen._handle_exitstatus",
        "pkg_resources._vendor.packaging._structures.InfinityType",
        "networkx.algorithms.reciprocity",
        "networkx.classes.graphviews.SubDiGraph",
        "pkg_resources.extern.packaging.utils.canonicalize_name",
        "email.errors.CloseBoundaryNotFoundDefect",
        "functools._unwrap_partial",
        "socket",
        "itertools.islice",
        "logging.FileHandler",
        "networkx.classes.coreviews.AdjacencyView",
        "pkg_resources.find_nothing",
        "typing._GenericAlias.__init__",
        "numpy.linalg.inv",
        "numpy.apply_over_axes.__doc__.find",
        "numpy.core._string_helpers.english_lower",
        "logging.Logger.handle",
        "sre_parse.Tokenizer.__next",
        "email.errors.MessageError",
        "typing._SpecialForm.__getitem__",
        "networkx.algorithms.isomorphism.matchhelpers.copyfunc",
        "networkx.classes.graph.Graph.__getitem__",
        "pkg_resources.NullProvider.has_metadata",
        "numpy.lib.polynomial.poly1d",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString.__init__",
        "networkx.algorithms.bipartite",
        "plistlib.InvalidFileException",
        "networkx.algorithms.node_classification",
        "typing.TypeVar",
        "typing._SpecialForm.__hash__",
        "numpy.ma.core._MaskedUnaryOperation.__init__",
        "pkg_resources._vendor.packaging.pyparsing.StringStart",
        "pkg_resources._vendor.packaging.pyparsing.And.__str__",
        "numpy._globals._CopyMode",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.leaveWhitespace",
        "pkg_resources._vendor.packaging.version.post",
        "networkx.exception.NetworkXError",
        "email._parseaddr.AddrlistClass",
        "numpy.core.getlimits.MachArLike._str_smallest_subnormal",
        "networkx.convert_matrix",
        "sre_compile._bytes_to_codes",
        "numbers.Real",
        "networkx.readwrite.graphml.GraphML",
        "ctypes.PYFUNCTYPE",
        "email.errors.MissingHeaderBodySeparatorDefect",
        "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher",
        "networkx.generators",
        "numbers.Rational",
        "numpy.core.function_base.vectorize",
        "numpy.core.arrayprint._array_str_implementation",
        "pkg_resources.ZipProvider.zipinfo",
        "decoder.JSONDecoder.__init__",
        "pkg_resources._vendor.packaging.pyparsing.WordStart",
        "textrank4zh.util.<lambda>",
        "numpy.core.getlimits.MachArLike",
        "networkx.generators.degree_seq.DegreeSequenceRandomGraph",
        "networkx.convert_matrix.from_numpy_matrix",
        "pkg_resources._vendor.packaging.markers.UndefinedComparison",
        "numpy.lib.npyio.NpzFile",
        "os.waitpid",
        "pkg_resources._vendor.packaging.pyparsing.White",
        "numpy.ma.core._frommethod",
        "networkx.algorithms.mis",
        "numpy.core.getlimits._fr1",
        "numpy.ma.core.doc_note",
        "numpy.core.numerictypes.issubdtype",
        "_frozen_importlib.spec_from_loader",
        "textrank4zh.Segmentation.Segmentation",
        "pkg_resources._vendor.packaging.pyparsing.Suppress.postParse",
        "os.listdir",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__mul__",
        "warnings.catch_warnings.__init__",
        "os",
        "re.safe_listdir",
        "networkx.utils.open_file",
        "xml.etree.ElementTree.ElementTree",
        "email.parser",
        "random",
        "numpy.ma.core.MaskError",
        "zipfile.ZipFile.__init__",
        "numpy.core._internal._missing_ctypes",
        "networkx.algorithms.simple_paths.PathBuffer",
        "pkg_resources..DistributionNotFound",
        "networkx.algorithms.matching",
        "xml.etree.ElementTree._ListDataStream",
        "copyreg.constructor",
        "calendar.different_locale",
        "traceback.FrameSummary.__init__",
        "numpy.core.numeric.asanyarray",
        "logging._addHandlerRef",
        "struct.calcsize",
        "logging._releaseLock",
        "platform.system",
        "copyreg.pickle",
        "weakref.WeakKeyDictionary.popitem",
        "jieba.Tokenizer.initialize",
        "xml.etree.ElementTree.XMLParser",
        "networkx.exception.NodeNotFound",
        "logging.getLevelName",
        "sre_parse.State.closegroup",
        "networkx.classes.graph.Graph.__init__",
        "sys.platform.startswith",
        "email.errors.InvalidBase64LengthDefect",
        "os._get_exports_list",
        "jieba.lac_small.predict",
        "numpy.compat._pep440.LegacyVersion",
        "contextlib.ExitStack.__exit__",
        "pkg_resources.NullProvider._get_metadata_path",
        "email.errors.NoBoundaryInMultipartDefect",
        "numpy.core.getlimits.__new__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__or__",
        "networkx.algorithms.isomorphism.vf2userfunc.MultiGraphMatcher",
        "pkg_resources._vendor.packaging.pyparsing._UnboundedCache",
        "pkg_resources._by_version_descending.try_parse",
        "subprocess.Popen.__exit__",
        "plistlib._PlistParser.handle_begin_element",
        "numpy.lib._datasource.DataSource",
        "numpy.core.numerictypes.issubclass_",
        "networkx.classes.graph.Graph.is_multigraph",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset",
        "selectors._BaseSelectorImpl",
        "pkg_resources.NullProvider.__init__",
        "typing._SpecialForm.__eq__",
        "networkx.readwrite.gexf.GEXFReader",
        "_winapi.CreatePipe",
        "numpy.core._type_aliases._add_types",
        "numpy.linalg.linalg._commonType",
        "pkg_resources.RequirementParseError",
        "numpy.core._exceptions._ArrayMemoryError",
        "textrank4zh.Segmentation.WordSegmentation",
        "pkg_resources._vendor.packaging.pyparsing.And.__init__",
        "numpy.ma.core._MaskedPrintOption.__init__",
        "logging.Filterer.__init__",
        "codecs.StreamReader.read",
        "networkx.algorithms.tree.branchings.Edmonds",
        "numpy.core._ufunc_config.seterr",
        "enum.__prepare__",
        "networkx.algorithms.graphical",
        "networkx.classes.reportviews.NodeView.__init__",
        "email.errors.InvalidBase64PaddingDefect",
        "selectors._SelectorMapping",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.leaveWhitespace",
        "networkx.classes.filters.show_nodes",
        "numpy.core._exceptions.AxisError",
        "pkg_resources._vendor.packaging.version.InvalidVersion",
        "socket.socket",
        "ctypes._endian._swapped_meta",
        "xml.etree.ElementTree.C14NWriterTarget",
        "numpy.compat.py3k.contextlib_nullcontext",
        "numpy.core._dtype_ctypes._from_ctypes_array",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString.__str__",
        "numpy.core._exceptions._UFuncOutputCastingError",
        "pkg_resources.ResourceManager.__init__",
        "plistlib.load",
        "genericpath.exists",
        "enum.<lambda>",
        "_winapi.GetExitCodeProcess",
        "numpy.core.multiarray.set_typeDict",
        "networkx.utils.decorators.open_file",
        "pkg_resources._vendor.packaging.requirements.InvalidRequirement",
        "pkg_resources.NullProvider._fn",
        "numpy.ma.core._DomainGreaterEqual.__init__",
        "networkx.drawing",
        "zipfile.ZipFile._fpclose",
        "string.Formatter",
        "subprocess.Popen._try_wait",
        "pkg_resources.NullProvider._validate_resource_path",
        "ast.Ellipsis",
        "pkg_resources._vendor.packaging.pyparsing.Literal.__init__",
        "enum.EnumMeta._get_mixins_",
        "plistlib._PlistParser.add_object",
        "pkg_resources.FileMetadata",
        "types.DynamicClassAttribute.__get__",
        "calendar.Calendar.setfirstweekday",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.leaveWhitespace",
        "numpy.core.getlimits.finfo._init",
        "networkx.convert._prep_create_using",
        "typing._is_dunder",
        "hmac.HMAC",
        "decoder.JSONDecoder",
        "networkx.utils.decorator.decorator",
        "numpy.lib.polynomial.RankWarning",
        "ctypes.CDLL.__init__",
        "numpy.ma.core._DomainSafeDivide.__init__",
        "copyreg._slotnames",
        "calendar.IllegalMonthError",
        "pkg_resources._vendor.packaging.pyparsing.TokenConverter.__init__",
        "networkx.algorithms.isomorphism",
        "random.Random.seed",
        "ast.Str",
        "abc.__new__",
        "networkx.algorithms.euler",
        "enum.EnumMeta.__call__",
        "email.errors",
        "msvcrt.get_osfhandle",
        "logging.NullHandler",
        "os.add_dll_directory",
        "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher",
        "selectors.BaseSelector",
        "traceback.FrameSummary.line",
        "pkg_resources.ContextualVersionConflict",
        "io.StringIO",
        "collections.deque",
        "_bootlocale.getpreferredencoding",
        "networkx.convert.from_edgelist",
        "inspect.signature",
        "sre_parse.Tokenizer.get",
        "_frozen_importlib._find_and_load",
        "numpy.lib.index_tricks.CClass",
        "numpy.core.finfo",
        "email.email.header",
        "typing.ForwardRef.__hash__",
        "numpy.linalg.lstsq",
        "logging.PercentStyle.usesTime",
        "networkx.classes.graphviews.MultiDiGraphView",
        "pkg_resources._declare_state",
        "networkx.classes.reportviews.InEdgeDataView",
        "_winapi.CloseHandle",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance",
        "numpy.core._machar.MachAr",
        "pkg_resources._vendor.packaging.pyparsing.RecursiveGrammarException",
        "sysconfig._expand_vars",
        "traceback.extract_stack",
        "threading.name",
        "numpy.ma.core._convert2ma.getdoc",
        "enum._check_for_existing_members",
        "numpy.ma.core.getmaskarray",
        "numpy.core.function_base._needs_add_docstring",
        "calendar.Calendar",
        "inspect.cleandoc",
        "inspect.isfunction",
        "inspect.kwargs",
        "numpy.lib.stride_tricks.DummyArray",
        "inspect.isgeneratorfunction",
        "networkx.algorithms.smallworld",
        "ctypes.c_int",
        "logging._StderrHandler",
        "numpy.ma.core._check_fill_value",
        "numpy.ma.extras._fromnxfunction_args",
        "sre_parse.Tokenizer.match",
        "logging.Logger._log",
        "pathlib.PurePath",
        "pkg_resources._vendor.packaging.pyparsing.CloseMatch",
        "<builtin>.open",
        "sysconfig._init_posix",
        "numpy.core.function_base._add_docstring",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.__init__",
        "json.loads",
        "plistlib._BinaryPlistWriter",
        "logging.Formatter.usesTime",
        "typing.TypeVar.__init__",
        "numpy.compat._pep440.Infinity",
        "re.escape",
        "numpy.compat._inspect.ismethod",
        "functools.singledispatch",
        "ctypes._check_size",
        "core.get_object_signature",
        "networkx.classes.graph.Graph.adj",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement._parseNoCache",
        "platform._mac_ver_xml",
        "_osx_support.get_platform_osx",
        "networkx.empty_graph",
        "sre_parse.Tokenizer.error",
        "email.errors.MultipartInvariantViolationDefect",
        "networkx.classes.digraph.edges",
        "jieba._compat.strdecode",
        "numpy.core._type_aliases._add_integer_aliases",
        "zipfile.ZipExtFile",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.postParse",
        "numpy.ma.core._convert2ma.__init__",
        "calendar._localized_day",
        "networkx.classes.graph.Graph",
        "pkg_resources.IMetadataProvider",
        "zipfile.CompleteDirs",
        "fractions.Fraction._operator_fallbacks",
        "numpy.core.numerictypes._construct_lookups",
        "jieba.Tokenizer",
        "numpy.core._ufunc_config._setdef",
        "tempfile._TemporaryFileWrapper",
        "numbers.Real.register",
        "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher",
        "numpy._sanity_check",
        "logging.Handler.release",
        "ast.NodeVisitor",
        "logging.Formatter.format",
        "calendar.LocaleTextCalendar",
        "typing.NewType",
        "codecs.StreamReaderWriter.__next__",
        "_functools.partial",
        "networkx.classes",
        "sre_parse.Tokenizer.__init__",
        "typing.runtime_checkable",
        "logging._checkLevel",
        "networkx.classes.reportviews.OutDegreeView.__iter__",
        "platform.uname",
        "textrank4zh.Segmentation.SentenceSegmentation.__init__",
        "sre_parse.State.checklookbehindgroup",
        "pkg_resources._parents",
        "pkg_resources.ZipProvider._index",
        "pkg_resources.WorkingSet._added_new",
        "textrank4zh.util.AttrDict",
        "pkg_resources.IResourceProvider",
        "plistlib._PlistParser.end_key",
        "textrank4zh.util.AttrDict.__init__",
        "pkg_resources._vendor.packaging.pyparsing.Word.parseImpl",
        "sre_parse.Tokenizer.seek",
        "pkg_resources.EggProvider._setup_prefix",
        "networkx.classes.reportviews.InDegreeView",
        "pkg_resources._vendor.packaging.pyparsing.GoToColumn",
        "calendar.HTMLCalendar",
        "logging.StreamHandler",
        "subprocess._cleanup",
        "networkx.classes.graphviews.generic_graph_view",
        "typing.SupportsRound",
        "email.errors.MessageDefect",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.suppress",
        "networkx.exception.NetworkXNotImplemented",
        "networkx.classes.coreviews.MultiAdjacencyView",
        "typing._collect_type_vars",
        "pkg_resources._vendor.packaging.pyparsing.White.__init__",
        "networkx.algorithms.tree.operations",
        "pkg_resources._vendor.packaging.pyparsing.Group.postParse",
        "platform.machine",
        "networkx.classes.reportviews.NodeView",
        "abc.ABCMeta.__subclasscheck__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setParseAction",
        "subprocess.Popen._get_devnull",
        "sysconfig.get_path",
        "networkx.classes.ordered.OrderedMultiGraph",
        "posixpath.normcase",
        "pkg_resources._vendor.packaging.pyparsing.Optional",
        "numpy.core.numerictypes._typedict",
        "copy._deepcopy_atomic",
        "networkx.from_numpy_array",
        "pkg_resources._vendor.packaging.pyparsing.wrapper",
        "ctypes.c_float",
        "datetime._days_before_year",
        "_collections_abc.Mapping.get",
        "traceback.StackSummary.extract",
        "pkg_resources._vendor.packaging.pyparsing.Combine.postParse",
        "logging.Logger",
        "pkg_resources._vendor.packaging.pyparsing.Empty.__init__",
        "numpy.lib.index_tricks.CClass.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.parseImpl",
        "os.stat",
        "inspect._has_code_flag",
        "sre_compile._compile_info",
        "numpy.core._ufunc_config._unspecified",
        "numpy.core.overrides.verify_matching_signatures",
        "_collections_abc._check_methods",
        "pkg_resources._vendor.packaging.pyparsing._escapeRegexRangeChars",
        "_frozen_zipimport>.zipimporter.__init__",
        "posixpath._joinrealpath",
        "pkg_resources.distributions._from_metadata",
        "pkg_resources._vendor.packaging.pyparsing.Optional.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__str__",
        "numpy.core.numerictypes._register_types",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__init__",
        "inspect.BoundArguments.__init__",
        "pkg_resources._vendor.packaging.pyparsing.ParseFatalException",
        "functools.singledispatch.wrapper",
        "logging.Manager.getLogger",
        "pkg_resources.FileMetadata.__init__",
        "ctypes._FuncPtr",
        "jieba.Tokenizer.__init__",
        "pkg_resources._vendor.packaging.pyparsing.CaselessLiteral",
        "numpy.numpy.ma.core._internal._ufunc_doc_signature_formatter",
        "networkx.from_scipy_sparse_matrix",
        "networkx.classes.graph.Graph.number_of_nodes",
        "email.errors.CharsetError",
        "numpy._globals.ModuleDeprecationWarning",
        "numeric.asanyarray",
        "networkx.classes.graphviews.SubMultiGraph",
        "unicodedata.lookup",
        "networkx.exception",
        "networkx.classes.coreviews.UnionMultiAdjacency",
        "numpy.core.overrides.array_function_from_dispatcher",
        "networkx.classes.coreviews.FilterAtlas",
        "numpy.core.geterrobj",
        "networkx.algorithms.components.is_connected",
        "pkg_resources._vendor.packaging.pyparsing.ParseSyntaxException",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__getattr__",
        "urllib.parse._ResultMixinBytes",
        "plistlib._PlistParser.end_dict",
        "_weakrefset.WeakSet.add",
        "numpy.compat._inspect.<lambda>",
        "ntpath.splitdrive",
        "networkx.algorithms.planar_drawing",
        "typing._VariadicGenericAlias.__getitem_inner__",
        "pkg_resources._vendor.packaging.markers.UndefinedEnvironmentName",
        "pkg_resources._vendor.packaging.pyparsing.OnlyOnce",
        "zipfile.Path",
        "plistlib._BinaryPlistParser",
        "enum.Enum.__hash__",
        "logging.Manager",
        "typing._VariadicGenericAlias.__getitem__",
        "pkg_resources._cygwin_patch",
        "pkg_resources.ResourceManager",
        "calendar.TextCalendar",
        "pkg_resources.declare_namespace",
        "typing.re",
        "jieba.finalseg.load_model",
        "pathlib._Selector",
        "contextlib._BaseExitStack.callback",
        "core.doc_note",
        "zipfile.ZipInfo._decodeExtra",
        "networkx.exception.PowerIterationFailedConvergence",
        "numpy.core.arrayprint.TimedeltaFormat",
        "subprocess.Popen.__enter__",
        "numpy.core.records.recarray",
        "pkg_resources._by_version_descending",
        "pkg_resources._vendor.packaging.pyparsing.QuotedString",
        "_winapi.GetStdHandle",
        "pkg_resources._vendor.packaging.pyparsing.OneOrMore.__str__",
        "tempfile._RandomNameSequence",
        "numpy.ma.extras._fromnxfunction.__init__",
        "os.encode",
        "textrank4zh.Segmentation.Segmentation.__init__",
        "numpy._globals._NoValueType.__repr__",
        "logging.Logger.addHandler",
        "networkx.algorithms.regular",
        "typing.NamedTupleMeta",
        "enum._high_bit",
        "logging.Logger.getEffectiveLevel",
        "numpy.ma.core.MaskedArray.view",
        "plistlib._PlistParser.begin_dict",
        "networkx.algorithms.communicability_alg",
        "networkx.classes.ordered.OrderedMultiDiGraph",
        "networkx.classes.coreviews.UnionAtlas",
        "uuid.SafeUUID",
        "pkg_resources._vendor.packaging.pyparsing.tokenMap",
        "pkg_resources._is_egg_path",
        "networkx.algorithms.summarization",
        "numeric.asarray",
        "pkg_resources.EggMetadata.__init__",
        "inspect.ismethod",
        "socket._GiveupOnSendfile",
        "posixpath.abspath",
        "posixpath.join",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.haskeys",
        "pkg_resources._vendor.packaging._manylinux._ELFFileHeader",
        "subprocess.Popen._filter_handle_list",
        "networkx.classes.digraph.DiGraph",
        "pkg_resources._vendor.packaging.pyparsing.Group.__init__",
        "functools.update_wrapper",
        "pkg_resources._vendor.packaging.version.pre",
        "numpy.ma.core._convert2ma",
        "numpy.core.dtype",
        "os.unlink",
        "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian",
        "networkx.classes.graph.Graph.__iter__",
        "sys.platform.lower",
        "numpy.ma.core.mvoid",
        "sysconfig.get_paths",
        "xml.etree.ElementTree.TreeBuilder",
        "networkx.algorithms.lowest_common_ancestors",
        "email.base64mime",
        "codecs.StreamReader.readline",
        "typing._make_nmtuple",
        "sys.__stdout__.fileno",
        "numpy.ma.core._MaskedPrintOption",
        "urllib.parse.SplitResult",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd",
        "logging.BufferingFormatter",
        "logging.Formatter.formatException",
        "email._policybase",
        "zipfile._SharedFile",
        "networkx.algorithms.polynomials",
        "sre_parse._parse_sub",
        "warnings.warn",
        "os.uname",
        "networkx.from_pandas_edgelist",
        "networkx.classes.reportviews.DegreeView",
        "logging.Handler.createLock",
        "zipfile.BadZipFile",
        "networkx.utils.np_random_state",
        "pkg_resources.WorkingSet._build_from_requirements",
        "numpy.core.multiarray.dtype",
        "pkg_resources.ZipManifests",
        "typing.TextIO",
        "pathlib._Flavour.__init__",
        "numpy.core.arrayprint.array2string",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd.__init__",
        "string.Template",
        "pkg_resources._vendor.packaging.pyparsing.makeHTMLTags",
        "ctypes._reset_cache",
        "numpy.core._type_aliases._bits_of",
        "networkx.classes.graphviews.GraphView",
        "traceback.print_stack",
        "pkg_resources.Distribution._reload_version",
        "numpy.lib.mixins._numeric_methods",
        "numpy.core.numeric.issubdtype",
        "ctypes.CFUNCTYPE",
        "typing._SpecialForm",
        "copy.Error",
        "email.parser.Parser",
        "ctypes.c_short",
        "os.dup",
        "subprocess.TimeoutExpired.__init__",
        "urllib.parse.ParseResultBytes",
        "pwd.getpwuid",
        "random.Random.__init__",
        "copy.deepcopy",
        "numpy.lib.index_tricks.ndenumerate",
        "networkx.algorithms.components",
        "enum.__new__",
        "email._policybase.Policy",
        "numpy.ma.extras.mr_class",
        "pkg_resources.DistInfoDistribution",
        "pkg_resources.ExtractionError",
        "platform.python_implementation",
        "contextlib._BaseExitStack._push_exit_callback",
        "logging._acquireLock",
        "pkg_resources.ResolutionError",
        "operator.index",
        "queue",
        "logging.Logger.debug",
        "networkx.algorithms.smetric",
        "ast.Num",
        "abc.ABCMeta.__instancecheck__",
        "networkx.classes.graphviews.DiGraphView",
        "sre_parse.State.opengroup",
        "numpy.ma.core._DomainCheckInterval",
        "os.pipe",
        "ast.literal_eval",
        "ctypes._endian.BigEndianStructure",
        "numbers.Complex",
        "pkg_resources._vendor.packaging.pyparsing.Word.__init__",
        "pkg_resources.DefaultProvider._has",
        "zipfile.ZipFile",
        "tempfile.TemporaryDirectory",
        "networkx.algorithms.link_analysis",
        "codecs.StreamWriter.__init__",
        "pkg_resources._vendor.packaging.version.<lambda>",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__bool__",
        "_ctypes.LoadLibrary",
        "networkx.classes.reportviews.OutEdgeDataView.__init__",
        "logging.Formatter.formatStack",
        "numpy.lib.mixins._reflected_binary_method",
        "os.read",
        "pkg_resources._find_adapter",
        "jieba.Tokenizer.check_initialized",
        "numpy.linalg.linalg._realType",
        "tempfile._RandomNameSequence.__next__",
        "numpy.core.overrides.set_array_function_like_doc",
        "networkx.classes.reportviews.OutDegreeView.__getitem__",
        "networkx.algorithms.covering",
        "numpy.core._ufunc_config.errstate.__init__",
        "jieba.posseg.pair",
        "numpy.ctypeslib._get_scalar_type_map",
        "pkg_resources._vendor.packaging.specifiers.SpecifierSet",
        "contextlib.ContextDecorator._recreate_cm",
        "logging.getLogger",
        "pkg_resources._vendor.packaging.pyparsing.Word",
        "numpy.core.numeric.extend_all",
        "linecache.getline",
        "typing.Generic.__class_getitem__",
        "numpy.lib._iotools.LineSplitter",
        "pkg_resources._vendor.packaging._manylinux._InvalidELFFileHeader",
        "networkx.classes.digraph.out_degree",
        "numpy.ndarray.view",
        "posixpath.dirname",
        "enum._find_data_type",
        "logging.LoggerAdapter",
        "numpy.lib.index_tricks.RClass",
        "struct.unpack",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.copy",
        "subprocess.STARTUPINFO.__init__",
        "networkx.convert",
        "os.environ.get",
        "numpy.lib.arrayterator.Arrayterator",
        "pkg_resources._vendor.packaging.pyparsing.LineStart.__init__",
        "networkx.utils.union_find.UnionFind",
        "pkg_resources._vendor.packaging.pyparsing.LineStart",
        "pkg_resources.WorkingSet.add",
        "pkg_resources._macos_vers",
        "networkx.algorithms.community",
        "email.errors.UndecodableBytesDefect",
        "numpy.core.defchararray.chararray",
        "jieba.Tokenizer.get_DAG",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression",
        "typing._GenericAlias",
        "_collections_abc.Mapping.items",
        "signal",
        "pprint.PrettyPrinter",
        "numpy.core._ufunc_config.geterr",
        "enum.name",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.parseImpl",
        "numpy.lib._iotools.StringConverter",
        "struct",
        "re.search",
        "pkg_resources._vendor.packaging.pyparsing.Combine",
        "networkx.classes.coreviews.AtlasView.__init__",
        "sys._getframe",
        "logging.StringTemplateStyle",
        "pkg_resources.Distribution.check_version_conflict",
        "sre_parse.parse",
        "networkx.utils.heaps._Node",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__invert__",
        "pkg_resources.find_distributions",
        "plistlib._PlistParser.parse",
        "functools.<lambda>",
        "numeric.log",
        "networkx.classes.coreviews.AdjacencyView.__getitem__",
        "numpy.lib._datasource._FileOpeners.__init__",
        "sre_compile._get_literal_prefix",
        "inspect.isclass",
        "typing._GenericAlias.__eq__",
        "pkg_resources.extern.VendorImporter.__init__",
        "numpy.core.arrayprint.BoolFormat",
        "logging.Handler.__init__",
        "pkg_resources.DefaultProvider._register",
        "xml.etree.ElementTree.QName",
        "urllib.parse.DefragResultBytes",
        "selectors.PollSelector",
        "pkg_resources.ZipProvider._zipinfo_name",
        "pkg_resources.get_provider",
        "pkg_resources._vendor.packaging.pyparsing.Forward.streamline",
        "jieba._compat.<lambda>",
        "ctypes.c_char_p",
        "numpy.core.numeric.result_type",
        "calendar.IllegalWeekdayError",
        "pkg_resources._vendor.packaging.version._parse_letter_version",
        "ctypes.c_char",
        "numpy.core.umath.seterrobj",
        "nt._getfullpathname",
        "sre_parse.State.__init__",
        "ctypes.c_ulong",
        "linecache.updatecache",
        "ast._ABC",
        "email._policybase._PolicyBase",
        "pkg_resources._vendor.packaging.pyparsing.originalTextFor",
        "_osx_support._supports_universal_builds",
        "numpy.ma.core._arraymethod",
        "email._parseaddr.AddressList",
        "textwrap.TextWrapper",
        "functools.singledispatchmethod.__get__._method",
        "networkx.exception.AmbiguousSolution",
        "sre_compile._code",
        "linecache.getlines",
        "ctypes.c_byte",
        "numpy.core._internal._ctypes",
        "networkx.classes.graph.Graph.is_directed",
        "codecs.StreamReaderWriter.__iter__",
        "numpy.datetime64",
        "types.MappingProxyType",
        "networkx.testing.test",
        "logging.PercentStyle",
        "networkx.algorithms.core",
        "datetime._check_date_fields",
        "networkx.utils.heaps._inherit_doc",
        "viterbi.viterbi",
        "pkg_resources._vendor.packaging.pyparsing.extract_stack",
        "subprocess.Popen.__init__",
        "logging.LogRecord",
        "networkx.algorithms.coloring.greedy_coloring_with_interchange.Node",
        "_io.TextIOWrapper",
        "jieba.posseg.POSTokenizer.makesure_userdict_loaded",
        "email.errors.BoundaryError",
        "enum.value",
        "networkx.algorithms.dag",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn.__init__",
        "networkx.algorithms.tree.recognition",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__delitem__",
        "networkx.algorithms.similarity",
        "inspect.name",
        "numpy.core.arrayprint.ComplexFloatingFormat",
        "contextlib._BaseExitStack.__init__",
        "numpy.lib._iotools.NameValidator",
        "pkg_resources.extern.packaging",
        "sre_compile._optimize_charset",
        "typing.SupportsBytes",
        "numpy.compat._inspect.strseq",
        "genericpath.isdir",
        "posixpath.normpath",
        "plistlib",
        "pkg_resources._vendor.packaging.markers.Marker",
        "pwd.getpwnam",
        "networkx.convert_matrix.from_numpy_array",
        "pkg_resources._vendor.packaging.version.Version.__str__",
        "networkx.classes.multidigraph.MultiDiGraph",
        "email.header._ValueFormatter",
        "textrank4zh.util.sort_sentences",
        "subprocess.Popen",
        "bisect",
        "zipfile.FastLookup",
        "networkx.classes.digraph.succ",
        "numpy.ndarray.__getitem__",
        "posixpath.islink",
        "pkg_resources.Environment",
        "networkx.algorithms.connectivity.edge_kcomponents.EdgeComponentAuxGraph",
        "networkx.NetworkXError",
        "<builtin>.hasattr",
        "numpy.core.numeric.array",
        "pkg_resources.extern.VendorImporter._module_matches_namespace",
        "random.SystemRandom",
        "numpy.core.memmap.memmap",
        "enum.EnumMeta.__setattr__",
        "ast.NodeTransformer",
        "genericpath._splitext",
        "networkx.linalg",
        "networkx.classes.graph.Graph.nodes",
        "networkx.algorithms.flow.utils.Level",
        "numpy.lib._datasource.Repository",
        "networkx.classes.coreviews.UnionMultiInner",
        "numpy.core.numeric.any",
        "numpy.ma.core.MaskedArray.__array_finalize__",
        "pathlib._PreciseSelector",
        "pkg_resources._vendor.packaging.specifiers._require_version_compare",
        "_sre.compile",
        "typing.SupportsInt",
        "numpy.core.numeric.ndim",
        "numpy.ma.core.dtype",
        "networkx.algorithms.isomorphism.isomorphvf2.GMState",
        "pkg_resources._vendor.packaging.pyparsing.Or",
        "numpy.core.zeros",
        "email.header.Header",
        "datetime.date",
        "inspect.<lambda>",
        "urllib.parse._fix_result_transcoding",
        "logging.PlaceHolder",
        "networkx.algorithms.efficiency_measures",
        "__future__._Feature.__init__",
        "numpy.lib._iotools.ConversionWarning",
        "pkg_resources._vendor.packaging.pyparsing.resetCache",
        "numpy.ma.core.MaskedIterator",
        "networkx.algorithms.flow",
        "os.decode",
        "pkg_resources._vendor.packaging._manylinux._GLibCVersion",
        "subprocess.check_output",
        "numpy.compat._pep440.Version",
        "sre_compile._get_charset_prefix",
        "random.SystemRandom.seed",
        "pkg_resources.register_loader_type",
        "networkx",
        "subprocess.Popen._get_handles",
        "inspect.kind",
        "pkg_resources.get_supported_platform",
        "inspect.Signature.__init__",
        "zipfile._Tellable.__init__",
        "numpy.core._exceptions.TooHardError",
        "logging.Manager._fixupParents",
        "numpy.core.arrayprint._guarded_repr_or_str",
        "urllib.parse._NetlocResultMixinStr",
        "networkx.readwrite.graphml.GraphMLWriterLxml",
        "textrank4zh.Segmentation.WordSegmentation.__init__",
        "os.access",
        "pkg_resources._vendor.packaging.pyparsing.Or.__init__",
        "plistlib._PlistParser",
        "numpy.ma.core.make_mask_descr",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults",
        "email.utils",
        "pathlib._Flavour",
        "sre_parse.SubPattern.__init__",
        "uuid",
        "networkx.utils.heaps._Item",
        "typing._type_check",
        "numpy.ma.core._frommethod.__init__",
        "sre_parse._class_escape",
        "sre_parse.Tokenizer.getwhile",
        "pkg_resources.find_eggs_in_zip",
        "pkg_resources._vendor.packaging.pyparsing.MatchFirst.parseImpl",
        "pkg_resources._by_version_descending._by_version",
        "typing.inner",
        "subprocess.Popen.communicate",
        "builtins.open",
        "abc.abstractmethod",
        "numpy.polynomial.hermite.Hermite",
        "networkx.algorithms.distance_measures",
        "sre_compile._generate_overlap_table",
        "os.fsencode",
        "networkx.classes.multigraph.MultiGraph",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.__xor__",
        "pkg_resources._vendor.packaging.pyparsing.Combine.__init__",
        "sre_compile.isstring",
        "networkx.classes.coreviews.FilterAdjacency",
        "zipfile.ZipFile._write_end_record",
        "pkg_resources..register_loader_type",
        "random._randbelow_with_getrandbits",
        "textrank4zh.Segmentation.SentenceSegmentation.segment",
        "pkg_resources._vendor.packaging.pyparsing.NotAny",
        "networkx.algorithms.approximation",
        "networkx.algorithms.isolate",
        "hashlib.__get_builtin_constructor",
        "zipfile.is_zipfile",
        "pkg_resources.NoDists",
        "numpy.core._add_newdocs.refer_to_array_attribute",
        "datetime.datetime",
        "os.getcwdb",
        "logging.Filterer.filter",
        "__future__._Feature",
        "numpy.core.records.format_parser",
        "tempfile.gettempdir",
        "datetime._days_in_month",
        "_weakrefset.WeakSet.__init__",
        "networkx.classes.digraph.DiGraph.clear",
        "logging.Logger.__init__",
        "pathlib._WindowsFlavour",
        "inspect.iscoroutinefunction",
        "_osx_support._override_all_archs",
        "linecache.checkcache",
        "networkx.algorithms.clique",
        "numpy.core.errstate",
        "pprint._perfcheck",
        "typing._SpecialForm.__init__",
        "pkg_resources._vendor.packaging.pyparsing.And",
        "pkg_resources._vendor.packaging.pyparsing.<lambda>",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setName",
        "networkx.classes.coreviews.AtlasView.__iter__",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.streamline",
        "networkx.algorithms.d_separation",
        "email.errors.HeaderDefect",
        "io.BytesIO",
        "email.errors.StartBoundaryNotFoundDefect",
        "logging.Filter",
        "numpy.lib.polynomial.Polynomial",
        "pkg_resources._vendor.packaging.pyparsing._trim_arity",
        "sys.modules.get",
        "jieba.Tokenizer.calc",
        "numpy.core.arrayprint.StructuredVoidFormat",
        "numpy.lib.twodim_base.vander",
        "pkg_resources._vendor.packaging.markers.Variable",
        "pathlib._TerminatingSelector",
        "networkx.utils.decorator.fun",
        "hashlib.md5",
        "subprocess.Popen._wait",
        "inspect.getmro",
        "networkx.classes.coreviews.ReadOnlyGraph",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iadd__",
        "typing._VariadicGenericAlias",
        "_winapi.WaitForSingleObject",
        "functools.wraps",
        "plistlib._PlistParser.handle_data",
        "sre_parse._parse_flags",
        "logging.<lambda>",
        "networkx.classes.reportviews.OutEdgeView.__call__",
        "sysconfig._subst_vars",
        "pkg_resources.extern.VendorImporter.search_path",
        "xml.etree.ElementTree.Element",
        "os._Environ.__setitem__",
        "pkg_resources._vendor.packaging.pyparsing.pyparsing_common",
        "networkx.classes.graphviews.SubMultiDiGraph",
        "jieba.posseg",
        "networkx.classes.graph.Graph.add_edges_from",
        "pkg_resources._vendor.packaging.version.local",
        "numpy.lib.ufunclike._deprecate_out_named_y",
        "networkx.utils.heaps.MinHeap",
        "pkg_resources._is_zip_egg",
        "networkx.classes.coreviews.AtlasView.__getitem__",
        "networkx.algorithms.chordal",
        "networkx.classes.reportviews.OutMultiEdgeView",
        "contextlib._exit_wrapper",
        "email.errors.ObsoleteHeaderDefect",
        "genericpath._check_arg_types",
        "subprocess.SubprocessError",
        "numpy.compat._inspect.getargs",
        "pkg_resources._vendor.packaging.pyparsing.charsAsStr",
        "pkg_resources._vendor.packaging.pyparsing.OneOrMore",
        "inspect.from_callable",
        "contextlib._create_cb_wrapper",
        "numpy.core._exceptions._UFuncCastingError",
        "numpy.lib.index_tricks.nd_grid",
        "pkg_resources.EggProvider",
        "pkg_resources.normalize_path",
        "typing.SupportsFloat",
        "sre_parse.SubPattern.__len__",
        "networkx.exception.NetworkXAlgorithmError",
        "calendar.main",
        "pkg_resources._vendor.packaging.requirements.Requirement",
        "os.__subclasshook__",
        "numpy.core.getlimits.finfo",
        "networkx.algorithms.traversal",
        "numpy.ma.core._MaskedUFunc",
        "os.open",
        "pkg_resources.WorkingSet.add_entry",
        "networkx.classes.ordered.OrderedDiGraph",
        "pkg_resources._vendor.packaging.specifiers.Specifier",
        "numpy.core._methods._any",
        "selectors._PollLikeSelector",
        "networkx.utils.decorator.dec",
        "numpy.core._dtype._kind_name",
        "numpy.ma.core.MaskedConstant.__has_singleton",
        "pkg_resources.Distribution.insert_on",
        "pkg_resources._vendor.packaging.pyparsing.ParseBaseException",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore",
        "pkg_resources._vendor.packaging.pyparsing.ZeroOrMore.__init__",
        "uuid.UUID",
        "zipfile.LZMADecompressor",
        "linecache.lazycache",
        "encodings.normalize_encoding",
        "encoder.JSONEncoder.__init__",
        "_osx_support._save_modified_value",
        "textrank4zh.Segmentation.Segmentation.segment",
        "textrank4zh.util.debug",
        "enum._power_of_two",
        "pkg_resources.EmptyProvider",
        "ctypes.c_uint",
        "networkx.algorithms.triads",
        "logging.Handler",
        "networkx.linalg.algebraicconnectivity._PCGSolver",
        "contextlib.ExitStack.__enter__",
        "numpy.ma.core._MaskedUFunc.__init__",
        "random.__init_subclass__",
        "itertools.chain",
        "numpy.core.getlimits._fr0",
        "plistlib._PlistWriter",
        "logging.Manager._fixupChildren",
        "numpy.core._exceptions._UFuncInputCastingError",
        "subprocess.Popen._remaining_time",
        "networkx.classes.digraph.DiGraph.add_nodes_from",
        "zipfile._Tellable",
        "pkg_resources._vendor.packaging.pyparsing.Forward.copy",
        "numpy.ma.core.MaskedConstant",
        "pkg_resources.safe_listdir",
        "logging.Handler.acquire",
        "xml.etree.ElementPath._SelectorContext",
        "_ctypes.dlopen",
        "networkx.utils.py_random_state",
        "numpy._version.NumpyVersion",
        "networkx.classes.graph.Graph.to_directed",
        "html.entities",
        "abc.ABCMeta.register",
        "networkx.algorithms.coloring",
        "networkx.classes.reportviews.DiDegreeView.__call__",
        "inspect.Signature.replace",
        "networkx.readwrite.gexf.GEXF",
        "sre_compile._mk_bitmap",
        "enum.IntFlag.__or__",
        "typing._TypingEmpty",
        "networkx.algorithms.tree",
        "networkx.algorithms.graph_hashing",
        "numpy._pytesttester.PytestTester",
        "gzip._PaddedFile",
        "random.Random",
        "networkx.algorithms.hybrid",
        "pkg_resources._vendor.packaging.pyparsing.ParseExpression.setResultsName",
        "networkx.algorithms",
        "plistlib._DumbXMLWriter",
        "numpy.dtype",
        "logging.RootLogger",
        "numpy.core.arrayprint.wrapper",
        "numpy.core._ufunc_config.errstate.__enter__",
        "contextlib.ExitStack.__exit__._fix_exception_context",
        "pkg_resources._vendor.packaging.pyparsing.StringEnd.parseImpl",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement",
        "sysconfig.get_platform",
        "os.getpid",
        "subprocess.STARTUPINFO.copy",
        "inspect.Parameter.__init__",
        "email.header._Accumulator",
        "zipfile.main",
        "typing._TypingEllipsis",
        "pkg_resources._vendor.packaging.version._BaseVersion",
        "numpy.lib.index_tricks.AxisConcatenator.__init__",
        "time.sleep",
        "inspect.parameters",
        "subprocess._use_posix_spawn",
        "pkg_resources.Distribution.__getattr__",
        "textrank4zh.util.combine",
        "subprocess.Popen.wait",
        "networkx.algorithms.tree.decomposition",
        "pkg_resources._vendor.packaging.pyparsing._ParseResultsWithOffset.__init__",
        "codecs.BufferedIncrementalDecoder.decode",
        "networkx.from_pandas_adjacency",
        "urllib.parse.SplitResultBytes",
        "pkg_resources._vendor.packaging.pyparsing.Literal",
        "calendar.Calendar.__init__",
        "typing._GenericAlias.__mro_entries__",
        "numpy.ma.core._DomainGreater",
        "zipfile._EndRecData",
        "numpy.compat._inspect.iscode",
        "pkg_resources._vendor.packaging.pyparsing.Or.parseImpl",
        "numpy.ma.core.__new__",
        "pkg_resources._vendor.packaging.pyparsing.Each",
        "numpy.linalg._umath_linalg.inv",
        "platform.mac_ver",
        "jieba.posseg.POSTokenizer.__cut_internal",
        "pkg_resources._vendor.packaging.pyparsing.ParseResults.__iter__",
        "_frozen_importlib.parent",
        "tempfile._TemporaryFileCloser",
        "networkx.algorithms.community.quality.require_partition",
        "numpy.core._type_aliases._set_array_types",
        "pkg_resources.ZipProvider._has",
        "logging.Formatter",
        "numpy.core._dtype_ctypes._from_ctypes_structure",
        "networkx.algorithms.assortativity.pairs",
        "encodings.cp437.Codec.decode",
        "email._policybase.Compat32",
        "zipfile.ZipInfo",
        "networkx.algorithms.assortativity",
        "networkx.linalg.algebraicconnectivity._CholeskySolver",
        "plistlib._PlistParser.__init__",
        "numbers.Number",
        "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingGraphMatcher",
        "logging.exception",
        "networkx.classes.reportviews.EdgeDataView",
        "inspect._is_wrapper",
        "networkx.classes.reportviews.MultiEdgeView",
        "pkg_resources._vendor.packaging.version.Version.__init__",
        "datetime.time",
        "pkg_resources._vendor.packaging.pyparsing.Empty",
        "typing._GenericAlias.__hash__",
        "zipfile._check_zipfile",
        "pkg_resources._vendor.packaging.pyparsing._MultipleMatch",
        "enum.EnumMeta._create_",
        "math.log",
        "subprocess.Popen.__del__",
        "plistlib._is_fmt_xml",
        "numpy.core.fromnumeric._wrapreduction",
        "networkx.exception.NetworkXException",
        "logging.Formatter.formatMessage",
        "pkg_resources.Distribution.__init__",
        "typing.BinaryIO",
        "networkx.algorithms.planarity",
        "pkg_resources._vendor.packaging.pyparsing.CaselessKeyword",
        "email._parseaddr",
        "functools.lru_cache",
        "logging.Handler.format",
        "posixpath.isdir",
        "numpy.lib.index_tricks.MGridClass.__init__",
        "logging.Handler.handle",
        "sre_parse._parse",
        "sys.version.lower",
        "networkx.utils.decorator.fix",
        "logging.StreamHandler.__init__",
        "email.charset.Charset.__init__",
        "warnings.filterwarnings",
        "inspect.ismethoddescriptor",
        "numpy.polynomial.hermite_e.HermiteE",
        "subprocess.Popen._execute_child",
        "networkx.lazy_imports",
        "ctypes.c_bool",
        "pathlib.PosixPath",
        "pkg_resources._vendor.packaging.version.LegacyVersion",
        "networkx.classes.coreviews.AtlasView",
        "networkx.classes.reportviews.DiMultiDegreeView",
        "networkx.algorithms.tree.coding",
        "pkg_resources._vendor.packaging.specifiers.BaseSpecifier",
        "numpy.core.getlimits.MachArLike._float_to_str",
        "io.open",
        "numpy.ma.extras.mr_class.__init__",
        "jieba.posseg.pair.__init__",
        "numpy.ma.extras._fromnxfunction_seq",
        "zipfile.LargeZipFile",
        "_collections_abc.__subclasshook__",
        "numpy.ma.core._convert2ma._replace_return_type",
        "pkg_resources._vendor.packaging.pyparsing.And.parseImpl",
        "numeric.sqrt",
        "posixpath.isabs",
        "zipimport.zipimporter",
        "logging.StrFormatStyle",
        "ctypes.c_long",
        "networkx.exception.NetworkXUnbounded",
        "ctypes.c_double",
        "_osx_support._get_system_name_and_version",
        "networkx.algorithms.centrality.flow_matrix.InverseLaplacian",
        "networkx.algorithms.link_prediction",
        "typing._Immutable",
        "numpy._globals.VisibleDeprecationWarning",
        "logging.PercentStyle._format",
        "_frozen_importlib.path_hook_for_FileFinder",
        "networkx.classes.digraph.DiGraph.is_directed",
        "pathlib._RecursiveWildcardSelector",
        "numpy.lib.index_tricks.AxisConcatenator",
        "numpy.ma.core._replace_dtype_fields",
        "pkg_resources._vendor.packaging.version.Version",
        "os.close",
        "enum._is_sunder",
        "urllib.parse.ParseResult",
        "socket.SocketIO",
        "networkx.classes.reportviews.OutEdgeDataView.__iter__",
        "typing._ProtocolMeta",
        "numpy.core.getlimits._register_known_types",
        "numpy.ctypeslib._concrete_ndptr",
        "networkx.algorithms.chains",
        "pkg_resources._vendor.packaging.pyparsing._FifoCache",
        "pathlib.PurePosixPath",
        "logging._register_at_fork_reinit_lock",
        "numpy.core._ufunc_config.errstate.__exit__",
        "weakref.WeakValueDictionary.update",
        "pkg_resources._vendor.packaging.pyparsing.CharsNotIn",
        "pkg_resources.extern.appdirs",
        "typing.ForwardRef.__init__",
        "subprocess.Popen._close_pipe_fds",
        "sys.audit",
        "pkg_resources.safe_version",
        "typing.SupportsComplex",
        "numpy.linalg.linalg._assert_2d",
        "inspect._signature_bound_method",
        "networkx.classes.reportviews.MultiEdgeDataView",
        "networkx.classes.reportviews.EdgeView",
        "numpy._pytesttester.PytestTester.__init__",
        "networkx.utils.heaps.PairingHeap",
        "encoder.JSONEncoder",
        "pkg_resources._vendor.packaging.pyparsing.ParseElementEnhance.__init__",
        "numpy.core._ufunc_config.seterrcall",
        "textrank4zh.Segmentation.get_default_stop_words_file",
        "posixpath.splitext",
        "numpy.lib.mixins.NDArrayOperatorsMixin",
        "networkx.algorithms.hierarchy",
        "zipfile.LZMACompressor",
        "functools.lru_cache.decorating_function",
        "plistlib._PlistParser.end_string",
        "inspect.isbuiltin",
        "networkx.classes.reportviews.InMultiDegreeView",
        "pkg_resources._call_aside",
        "re.findall",
        "sre_parse.groups",
        "base64",
        "sre_parse.SubPattern.append",
        "email.errors.HeaderMissingRequiredValue",
        "numbers.Integral.register",
        "pkg_resources._vendor.packaging.pyparsing.Or.__str__",
        "networkx.algorithms.isomorphism.isomorphvf2.DiGMState",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.addParseAction",
        "pkg_resources._vendor.packaging.pyparsing.ParserElement.setWhitespaceChars",
        "typing.NamedTuple",
        "zipfile.ZipFile.close",
        "gzip.main",
        "typing._GenericAlias.copy_with",
        "networkx.classes.reportviews.InEdgeView",
        "ctypes.c_ushort",
        "numpy.ma.core.MAError",
        "networkx.algorithms.minors",
        "networkx.utils.decorators.argmap.__init__",
        "numpy.core.numeric.arange",
        "enum._decompose",
        "numpy.lib.ufunclike._fix_out_named_y",
        "codecs.StreamReader.__init__",
        "textrank4zh.util.get_similarity",
        "pkg_resources.EggProvider._set_egg",
        "numpy.ma.core.MaskedArray._update_from",
        "urllib.parse._NetlocResultMixinBase",
        "networkx.NetworkXNotImplemented",
        "xml.etree.ElementTree",
        "jieba._compat",
        "sre_parse._escape",
        "string._TemplateMetaclass",
        "pkg_resources._is_unpacked_egg",
        "selectors.KqueueSelector",
        "numpy.core.getlimits.MachArLike.__init__",
        "shutil.move",
        "dataclasses",
        "networkx.utils.decorators.nodes_or_number",
        "pkg_resources.register_finder",
        "pathlib._PathParents",
        "time.monotonic",
        "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian",
        "copy._keep_alive",
        "numpy.core._internal.dummy_ctype",
        "networkx.classes.graph.Graph.add_nodes_from",
        "numpy.lib.utils._Deprecate",
        "imp",
        "logging.PlaceHolder.__init__",
        "textrank4zh.TextRank4Keyword.TextRank4Keyword.get_keywords",
        "email.errors.MessageParseError",
        "jieba.posseg.POSTokenizer",
        "numpy.core.numeric.ones",
        "encodings.search_function",
        "networkx.readwrite.graphml.GraphMLReader",
        "pkg_resources._vendor.packaging.pyparsing.__new__",
        "pkg_resources._vendor.packaging.pyparsing.delimitedList",
        "email.errors.InvalidBase64CharactersDefect",
        "networkx.algorithms.dominating",
        "ntpath.isabs",
        "codecs.BufferedIncrementalDecoder.__init__",
        "pkg_resources._vendor.packaging.pyparsing.NotAny.__init__",
        "calendar.LocaleHTMLCalendar",
        "jieba.posseg.POSTokenizer.load_word_tag",
        "networkx.algorithms.sparsifiers",
        "logging.Logger.findCaller",
        "email.feedparser.FeedParser",
        "numpy.compat._pep440.NegativeInfinity",
        "posixpath.realpath",
        "ctypes.PyDLL",
        "inspect.BoundArguments.apply_defaults",
        "numpy.ma.core._frommethod.getdoc",
        "pkg_resources._vendor.packaging.pyparsing.Dict.__init__"
    ],
    "calendar.IllegalMonthError": [],
    "networkx.lazy_imports": [
        "importlib",
        "inspect",
        "importlib.util",
        "networkx.lazy_imports.DelayedImportErrorModule"
    ],
    "pathlib.PosixPath": [],
    "email.errors.HeaderDefect": [],
    "numpy.polynomial.chebyshev.Chebyshev": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "os._fspath": [
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.hasattr",
        "<str>.format",
        "<builtin>.type"
    ],
    "networkx.readwrite.graphml.IncrementalElement": [],
    "genericpath.isdir": [
        "stat.S_ISDIR"
    ],
    "datetime.datetime.date": [
        "datetime.datetime.date"
    ],
    "email.errors.BoundaryError": [],
    "genericpath": [],
    "networkx.classes.reportviews.DiMultiDegreeView": [],
    "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingGraphMatcher": [],
    "urllib.parse._ResultMixinBytes": [],
    "jieba.lac_small.nets": [],
    "plistlib.Data": [
        "<builtin>.classmethod"
    ],
    "heapq": [
        "<builtin>.print"
    ],
    "email._parseaddr.AddressList": [],
    "selectors._BaseSelectorImpl": [],
    "networkx.algorithms.isomorphism.isomorphvf2.DiGMState": [],
    "jieba.posseg.pair": [],
    "numpy.core._ufunc_config.errstate": [],
    "random.Random.seed": [
        "<builtin>.super",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.ord",
        "<builtin>.map"
    ],
    "networkx.exception.NetworkXUnbounded": [],
    "_osx_support._save_modified_value": [],
    "jieba.lac_small.utils": [],
    "jieba.lac_small.predict.get_result": [
        "jieba.lac_small.utils.parse_result",
        "jieba.lac_small.reader_small.Dataset.get_vars"
    ],
    "logging.Handler.setFormatter": [],
    "pathlib._PosixFlavour": [],
    "ast.Num": [],
    "pickle": [
        "pickle._Framer",
        "pickle.PicklingError",
        "<list>.append",
        "<list>.extend",
        "pickle._Unframer",
        "pickle._Stop",
        "pickle.UnpicklingError",
        "pickle._Pickler",
        "pickle.PickleError",
        "<builtin>.dir",
        "pickle._Unpickler",
        "_compat_pickle"
    ],
    "typing._collect_type_vars": [
        "<list>.append",
        "<builtin>.isinstance",
        "<list>.extend",
        "<builtin>.tuple"
    ],
    "numpy.core.fromnumeric.repeat": [
        "numpy.core.fromnumeric._wrapfunc"
    ],
    "networkx.algorithms.planarity": [
        "networkx.algorithms.planarity.PlanarEmbedding",
        "networkx.algorithms.planarity.Interval",
        "networkx.algorithms.planarity.LRPlanarity",
        "networkx.algorithms.planarity.ConflictPair"
    ],
    "networkx.classes.reportviews.InDegreeView": [],
    "genericpath._check_arg_types": [
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "gzip.BadGzipFile": [],
    "numpy.ma.core._arraymethod": [
        "<builtin>.getattr"
    ],
    "networkx.readwrite.graphml.GraphMLWriterLxml": [],
    "email.charset.Charset": [],
    "logging.Formatter.formatTime": [],
    "gzip._PaddedFile": [],
    "logging.Handler.handleError": [
        "traceback.print_exception",
        "ntpath.dirname",
        "posixpath.dirname",
        "traceback.print_stack"
    ],
    "textrank4zh.TextRank4Keyword.TextRank4Keyword": [],
    "numpy.core.defchararray.chararray": [],
    "email.errors.MultipartConversionError": [],
    "pathlib.PureWindowsPath": [],
    "numpy.lib.index_tricks.RClass": [],
    "networkx.algorithms.connectivity.disjoint_paths": [],
    "networkx.classes.reportviews.InEdgeDataView": [],
    "string.Template": [],
    "numpy.core.arrayprint.DatetimeFormat": [],
    "selectors.PollSelector": [],
    "pkg_resources.PathMetadata": [],
    "random.Random": [],
    "zipfile.CompleteDirs": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "networkx.classes.ordered.OrderedGraph": [],
    "networkx.algorithms.connectivity.connectivity": [
        "networkx.algorithms.connectivity.utils",
        "networkx.algorithms.flow"
    ],
    "textrank4zh.util.AttrDict": [],
    "gzip._GzipReader": [],
    "xml.etree.ElementTree.C14NWriterTarget": [],
    "numpy.ma.core._DomainGreater": [],
    "pkg_resources.RequirementParseError": [],
    "email.errors.HeaderParseError": [],
    "networkx.exception.NetworkXPointlessConcept": [],
    "tempfile.TemporaryDirectory": [
        "<builtin>.classmethod"
    ],
    "networkx.exception.NetworkXAlgorithmError": [],
    "sre_parse.SubPattern.append": [
        "<list>.append"
    ],
    "pkg_resources.VersionConflict": [
        "<builtin>.property"
    ],
    "urllib.parse.SplitResultBytes": [],
    "os.add_dll_directory": [
        "os._AddedDllDirectory.__init__"
    ],
    "xml.etree.ElementTree.XMLParser": [],
    "pkg_resources.PkgResourcesDeprecationWarning": [],
    "networkx.testing.test": [],
    "numpy.ma.extras._fromnxfunction_single": [],
    "inspect.BoundArguments.__init__": [],
    "networkx.classes.graph.Graph.is_multigraph": [],
    "numpy.core.numerictypes._construct_lookups": [
        "<map>.items",
        "<builtin>.len"
    ],
    "pathlib.PurePath": [
        "operator.attrgetter.__init__",
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "networkx.classes.reportviews.MultiEdgeView": [],
    "networkx.classes.coreviews.FilterAdjacency": [],
    "urllib.parse._NetlocResultMixinBase": [
        "<builtin>.property"
    ],
    "calendar._localized_day.__init__": [],
    "networkx.classes.reportviews.OutEdgeView": [
        "<builtin>.classmethod"
    ],
    "networkx.algorithms.boundary": [],
    "typing._ProtocolMeta": [],
    "ctypes.c_char_p": [],
    "numpy.core._type_aliases._add_integer_aliases": [
        "<builtin>.zip",
        "<builtin>.set"
    ],
    "networkx.algorithms.regular": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "numpy.ma.core._extrema_operation": [],
    "pkg_resources.Requirement": [
        "<builtin>.staticmethod"
    ],
    "logging.StringTemplateStyle": [],
    "ast.Bytes": [],
    "numpy.lib._iotools.StringConverter": [
        "<builtin>.classmethod",
        "<list>.append",
        "<list>.extend"
    ],
    "gzip.GzipFile": [
        "<builtin>.property"
    ],
    "ctypes._endian._swapped_meta": [],
    "numpy.core.getlimits.iinfo": [
        "<builtin>.property"
    ],
    "pkg_resources.ResourceManager": [
        "<builtin>.staticmethod"
    ],
    "xml.etree.ElementTree.ParseError": [],
    "email.header.Header": [],
    "numpy.ma.core._MaskedUFunc": [],
    "threading._DummyThread.__init__": [
        "threading.Thread.__init__",
        "threading._newname",
        "threading.Thread._set_ident",
        "threading.Thread._set_native_id"
    ],
    "ctypes.c_ulong": [],
    "sre_parse.SubPattern.__init__": [],
    "numpy.core._machar.MachAr": [],
    "ctypes.c_bool": [],
    "numpy.lib._datasource.DataSource": [],
    "operator": [
        "operator.methodcaller",
        "operator.attrgetter",
        "operator.itemgetter"
    ],
    "posixpath.normcase": [
        "os._fspath"
    ],
    "networkx.classes.ordered.OrderedMultiDiGraph": [],
    "tempfile.SpooledTemporaryFile": [
        "<builtin>.property"
    ],
    "networkx.algorithms.isomorphism.isomorphvf2.DiGraphMatcher": [],
    "socket._GiveupOnSendfile": [],
    "ctypes._reset_cache": [
        "<map>.clear"
    ],
    "urllib.parse._fix_result_transcoding": [],
    "functools._lru_cache_wrapper": [
        "<builtin>.object",
        "_thread.RLock"
    ],
    "logging.RootLogger": [],
    "numpy.lib.arrayterator.Arrayterator": [
        "<builtin>.property"
    ],
    "networkx.algorithms.isomorphism.matchhelpers.copyfunc": [],
    "email.errors.InvalidBase64PaddingDefect": [],
    "ctypes.c_double": [],
    "numpy.ma.core._DomainGreaterEqual": [],
    "logging.NullHandler": [],
    "networkx.algorithms.similarity": [],
    "networkx.classes.coreviews.UnionAtlas": [],
    "logging.Manager": [],
    "typing.Protocol": [],
    "email.header._Accumulator": [],
    "selectors.SelectSelector": [],
    "genericpath.isfile": [
        "stat.S_ISREG"
    ],
    "networkx.classes.graph.Graph": [
        "functools.cached_property.__init__",
        "<builtin>.property"
    ],
    "networkx.classes.ordered.OrderedDiGraph": [],
    "networkx.algorithms.approximation.steinertree": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "uuid.UUID.__init__": [
        "<str>.replace",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.len",
        "<list>.count",
        "<builtin>.ValueError",
        "<builtin>.repr",
        "<str>.strip"
    ],
    "decoder.JSONDecoder": [],
    "numpy.core.getlimits.MachArLike": [
        "<builtin>.property"
    ],
    "urllib.parse._NetlocResultMixinStr": [
        "<builtin>.property"
    ],
    "typing.TypeVar": [],
    "logging.StreamHandler": [],
    "networkx.classes.graph.Graph.add_edges_from": [
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "numpy.lib.index_tricks.MGridClass": [],
    "numpy.core.arrayprint.TimedeltaFormat": [],
    "zipfile._Tellable": [],
    "networkx.algorithms.bipartite.matching": [
        "<builtin>.float",
        "networkx.algorithms.bipartite.matrix"
    ],
    "ctypes.c_longdouble": [],
    "networkx.algorithms.isomorphism.vf2userfunc.GraphMatcher": [],
    "networkx.algorithms.connectivity.edge_kcomponents.EdgeComponentAuxGraph": [
        "<builtin>.classmethod"
    ],
    "zipfile.ZipInfo": [
        "<builtin>.classmethod"
    ],
    "networkx.algorithms.summarization": [],
    "calendar.HTMLCalendar": [],
    "numpy.lib._iotools.NameValidator": [
        "<builtin>.set"
    ],
    "queue": [
        "queue.Queue",
        "queue.LifoQueue",
        "queue.Full",
        "queue.Empty",
        "queue._PySimpleQueue",
        "queue.PriorityQueue"
    ],
    "scipy.sparse": [
        "scipy.sparse._csc",
        "scipy.sparse.lil",
        "scipy.sparse.csgraph",
        "scipy.sparse.csr",
        "scipy.sparse._bsr",
        "scipy.sparse._lil",
        "scipy.sparse.dia",
        "scipy.sparse.sputils",
        "warnings.filterwarnings",
        "scipy.sparse._csr",
        "scipy.sparse.construct",
        "scipy.sparse.csc",
        "scipy.sparse._extract",
        "scipy.sparse._arrays",
        "scipy._lib._testutils.PytestTester.__init__",
        "scipy.sparse.data",
        "scipy.sparse.extract",
        "scipy.sparse.base",
        "scipy.sparse.compressed",
        "scipy.sparse._dia",
        "scipy.sparse._dok",
        "scipy.sparse._matrix_io",
        "scipy.sparse.coo",
        "scipy.sparse._base",
        "scipy.sparse.bsr",
        "scipy.sparse._coo",
        "scipy.sparse._construct",
        "scipy.sparse.dok",
        "scipy.sparse.sparsetools",
        "<builtin>.dir"
    ],
    "networkx.classes.reportviews.InMultiDegreeView": [],
    "email.errors.MissingHeaderBodySeparatorDefect": [],
    "email.parser.BytesHeaderParser": [],
    "decoder.JSONDecodeError": [],
    "ctypes.c_float": [],
    "networkx.algorithms.simple_paths.PathBuffer": [],
    "warnings._add_filter": [
        "<list>.remove",
        "warnings._filters_mutated",
        "<list>.insert",
        "<list>.append"
    ],
    "numpy.core._exceptions._ArrayMemoryError": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "pathlib.PurePosixPath": [],
    "typing.NamedTuple": [],
    "pkgutil": [
        "functools.singledispatch",
        "pkgutil.ImpImporter",
        "collections.namedtuple",
        "pkgutil.ImpLoader"
    ],
    "sre_compile._mk_bitmap": [
        "<builtin>.range",
        "<builtin>.len"
    ],
    "networkx.readwrite.graphml.GraphMLReader": [],
    "numpy.lib.polynomial.RankWarning": [],
    "zipfile.ZipFile": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "selectors._PollLikeSelector": [],
    "plistlib._DumbXMLWriter": [],
    "typing._SpecialForm.__init__": [],
    "networkx.exception.NetworkXNoCycle": [],
    "zipfile._SharedFile": [],
    "jieba.lac_small.reader_small.Dataset.__init__": [
        "ntpath.dirname",
        "posixpath.dirname",
        "jieba.lac_small.reader_small.load_kv_dict",
        "ntpath.abspath",
        "posixpath.abspath",
        "ntpath.join",
        "posixpath.join"
    ],
    "networkx.algorithms.bipartite": [
        "networkx.algorithms.bipartite.basic",
        "networkx.algorithms.bipartite.edgelist",
        "networkx.algorithms.bipartite.centrality",
        "networkx.algorithms.bipartite.cluster",
        "networkx.algorithms.bipartite.projection",
        "networkx.algorithms.bipartite.covering",
        "networkx.algorithms.bipartite.spectral",
        "networkx.algorithms.bipartite.redundancy",
        "networkx.algorithms.bipartite.generators"
    ],
    "numpy.lib.stride_tricks.DummyArray": [],
    "networkx.algorithms.approximation.treewidth": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.algorithms.approximation.treewidth.MinDegreeHeuristic"
    ],
    "networkx.algorithms.community.modularity_max": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.algorithms.community.quality",
        "networkx.utils.mapped_queue"
    ],
    "pkg_resources.NullProvider": [
        "<builtin>.staticmethod"
    ],
    "numpy.ma.core._DomainTan": [],
    "sre_parse.State.__init__": [],
    "sre_parse.Tokenizer.__next": [
        "sre_parse.Tokenizer.error",
        "<builtin>.len"
    ],
    "numpy.lib._iotools.LineSplitter": [],
    "networkx.readwrite.gexf.GEXFWriter": [],
    "linecache.clearcache": [],
    "numpy.ma.core._frommethod": [],
    "numpy.core.arrayprint.StructuredVoidFormat": [
        "<builtin>.classmethod"
    ],
    "traceback.walk_stack": [],
    "networkx.classes.reportviews.MultiEdgeDataView": [],
    "networkx.algorithms.isomorphism.isomorphvf2.GraphMatcher": [],
    "_thread.get_ident": [],
    "pkg_resources.extern.jaraco.text": [
        "pkg_resources.extern.jaraco.text.Stripper",
        "functools.singledispatch",
        "pkg_resources.extern.jaraco.text.SeparatedValues",
        "pkg_resources.extern.jaraco.functools",
        "pkg_resources.extern.jaraco.text.Splitter",
        "pkg_resources.extern.jaraco.context",
        "pkg_resources.extern.jaraco.context.ExceptionTrap.passes",
        "pkg_resources.extern.jaraco.text.FoldedCase",
        "pkg_resources.extern.jaraco.context.ExceptionTrap.__init__",
        "importlib.resources",
        "pkg_resources.extern.jaraco.text.WordSet"
    ],
    "numpy.polynomial.hermite_e.HermiteE": [
        "<builtin>.staticmethod"
    ],
    "numbers.Number": [],
    "numpy.core.multiarray.where": [],
    "networkx.classes.coreviews.FilterMultiAdjacency": [],
    "zipfile.BadZipFile": [],
    "jieba.posseg.POSTokenizer": [],
    "email.errors.UndecodableBytesDefect": [],
    "networkx.classes.ordered.OrderedMultiGraph": [],
    "numpy.core.numeric.where": [],
    "pathlib._PreciseSelector": [],
    "pkg_resources.register_finder": [],
    "xml.etree.ElementTree.XMLPullParser": [],
    "os._fscodec.fsencode": [
        "<builtin>.isinstance",
        "<str>.encode",
        "os._fspath"
    ],
    "pkg_resources.PEP440Warning": [],
    "traceback.print_exception": [
        "traceback.TracebackException.__init__",
        "traceback.TracebackException.format",
        "<builtin>.print",
        "<builtin>.type"
    ],
    "ast._ABC": [],
    "numpy.lib.polynomial.poly1d": [
        "<builtin>.property"
    ],
    "ctypes._endian.BigEndianStructure": [],
    "numpy.compat._pep440.LegacyVersion": [
        "<builtin>.property"
    ],
    "zipfile.PyZipFile": [],
    "jieba.lac_small.utils.init_checkpoint": [
        "genericpath.exists"
    ],
    "networkx.algorithms.node_classification": [],
    "numpy.core.multiarray.copyto": [],
    "logging.Formatter": [],
    "numpy.core._type_aliases._set_up_aliases": [],
    "numpy.core.records.record": [],
    "pathlib._Selector": [],
    "logging.Logger": [],
    "numpy.compat._inspect.strseq": [
        "numpy.compat._inspect.joinseq",
        "numpy.compat._inspect.strseq",
        "<builtin>.type"
    ],
    "pkg_resources.UnknownExtra": [],
    "networkx.classes.reportviews.EdgeDataView": [],
    "numpy.core.function_base._needs_add_docstring": [
        "<builtin>.isinstance"
    ],
    "numpy.ma.extras.mr_class": [],
    "plistlib._PlistWriter": [],
    "networkx.algorithms.flow.utils.CurrentEdge": [],
    "email.errors.StartBoundaryNotFoundDefect": [],
    "ast.Str": [],
    "networkx.algorithms.chordal.NetworkXTreewidthBoundExceeded": [],
    "pkg_resources.ResolutionError": [],
    "zipfile.ZipExtFile": [],
    "networkx.linalg.algebraicconnectivity._PCGSolver": [],
    "email.errors.InvalidMultipartContentTransferEncodingDefect": [],
    "linecache.checkcache": [
        "<builtin>.list",
        "<map>.keys",
        "<builtin>.len"
    ],
    "networkx.algorithms.asteroidal": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "pathlib._NormalAccessor": [
        "<builtin>.hasattr",
        "<builtin>.staticmethod"
    ],
    "textrank4zh.Segmentation.SentenceSegmentation": [],
    "ctypes.LibraryLoader": [],
    "subprocess.CalledProcessError": [
        "<builtin>.property"
    ],
    "logging.PlaceHolder": [],
    "networkx.readwrite": [
        "networkx.readwrite.pajek",
        "networkx.readwrite.multiline_adjlist",
        "networkx.readwrite.graphml",
        "networkx.readwrite.nx_shp",
        "networkx.readwrite.edgelist",
        "networkx.readwrite.gexf",
        "networkx.readwrite.text",
        "networkx.readwrite.gpickle",
        "networkx.readwrite.json_graph",
        "networkx.readwrite.leda",
        "networkx.readwrite.adjlist",
        "networkx.readwrite.gml",
        "networkx.readwrite.sparse6"
    ],
    "networkx.algorithms.community.lukes": [],
    "sre_compile._get_iscased": [],
    "numpy.lib.index_tricks.CClass": [],
    "os": [
        "<builtin>.ImportError",
        "os._Environ.__init__",
        "<list>.append",
        "os._add",
        "<list>.extend",
        "posixpath",
        "os._wrap_close",
        "stat",
        "os._fscodec",
        "os._createenviron",
        "os.PathLike",
        "<builtin>.globals",
        "os._AddedDllDirectory",
        "ntpath",
        "<builtin>.set",
        "os._Environ",
        "os._exists"
    ],
    "numpy.core._add_newdocs.refer_to_array_attribute": [],
    "email.errors.MultipartInvariantViolationDefect": [],
    "numpy._globals.VisibleDeprecationWarning": [],
    "pathlib._Flavour": [],
    "networkx.algorithms.polynomials": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "ctypes.c_int": [],
    "numpy.ma.core._MaskedBinaryOperation": [],
    "networkx.utils.decorators.py_random_state": [
        "networkx.utils.decorators.argmap.__init__"
    ],
    "pkg_resources.ContextualVersionConflict": [
        "<builtin>.property"
    ],
    "networkx.classes.multidigraph.MultiDiGraph": [
        "functools.cached_property.__init__"
    ],
    "typing._TypedDictMeta": [],
    "numpy.core._exceptions._UFuncNoLoopError": [],
    "numpy.core.numeric.extend_all": [
        "<builtin>.getattr",
        "<list>.append",
        "<builtin>.set"
    ],
    "numpy.core.getlimits._register_type": [],
    "networkx.classes.coreviews.AdjacencyView": [],
    "urllib.parse.DefragResult": [],
    "numpy.core.arrayprint.ComplexFloatingFormat": [],
    "keyword": [
        "<builtin>.frozenset"
    ],
    "networkx.algorithms.community.quality.NotAPartition": [],
    "numpy.compat._pep440.Infinity": [],
    "ctypes.LibraryLoader.__init__": [],
    "networkx.algorithms.approximation.traveling_salesman": [
        "networkx.utils.py_random_state",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.algorithms.tree.mst"
    ],
    "zipfile._ZipWriteFile": [
        "<builtin>.property"
    ],
    "networkx.classes.graph.Graph.__init__": [
        "networkx.convert.to_networkx_graph"
    ],
    "networkx.drawing.nx_agraph.from_agraph": [
        "<builtin>.dict",
        "networkx.generators.classic.empty_graph",
        "<builtin>.str"
    ],
    "networkx.NetworkXError": [],
    "ctypes.py_object": [],
    "email.errors.MisplacedEnvelopeHeaderDefect": [],
    "networkx.classes.digraph.DiGraph.is_directed": [],
    "typing.ForwardRef.__init__": [
        "<builtin>.compile",
        "<builtin>.SyntaxError",
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "typing._TypingEmpty": [],
    "typing._TypingEllipsis": [],
    "email.parser.HeaderParser": [],
    "numpy.core._ufunc_config.errstate.__init__": [],
    "email.errors.NoBoundaryInMultipartDefect": [],
    "email.errors.MessageDefect": [],
    "numpy.core._string_helpers.english_lower": [],
    "traceback.print_stack": [
        "traceback.extract_stack",
        "traceback.print_list"
    ],
    "networkx.classes.coreviews.FilterMultiInner": [],
    "networkx.readwrite.gexf.GEXF": [],
    "networkx.algorithms.centrality.trophic": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "subprocess.SubprocessError": [],
    "datetime.timezone._create": [],
    "numpy._globals._NoValueType": [],
    "numpy.core._exceptions.AxisError": [],
    "xml.etree.ElementPath._SelectorContext": [],
    "email.errors.FirstHeaderLineIsContinuationDefect": [],
    "numpy.lib._datasource._FileOpeners.__init__": [],
    "tempfile._TemporaryFileCloser": [],
    "__future__._Feature": [],
    "email.errors.CharsetError": [],
    "logging.LogRecord": [],
    "jieba._compat.<lambda1>": [],
    "ctypes.c_short": [],
    "pkg_resources.register_loader_type": [],
    "pkg_resources.NoDists": [],
    "numpy.ctypeslib._ndptr": [
        "<builtin>.classmethod"
    ],
    "numpy.compat.py3k.contextlib_nullcontext": [],
    "networkx.classes.reportviews.OutMultiEdgeDataView": [],
    "typing.re": [],
    "numpy.compat._inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "tempfile._RandomNameSequence": [
        "<builtin>.property"
    ],
    "sre_compile._compile_charset": [
        "sre_constants.error.__init__",
        "<list>.extend"
    ],
    "numpy.compat._pep440.InvalidVersion": [],
    "logging.Formatter.formatStack": [],
    "email.errors.NonPrintableDefect": [],
    "email.errors.MessageParseError": [],
    "sre_parse.fix_flags": [
        "<builtin>.ValueError",
        "<builtin>.isinstance"
    ],
    "pkg_resources._declare_state": [
        "<map>.update",
        "<builtin>.globals"
    ],
    "networkx.algorithms.centrality.voterank_alg": [],
    "networkx.exception.PowerIterationFailedConvergence.__init__": [
        "<builtin>.super"
    ],
    "numpy.core._exceptions._UFuncCastingError": [],
    "ast.NameConstant": [],
    "networkx.algorithms.centrality.dispersion": [],
    "networkx.algorithms.approximation.ramsey": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "numpy.core._exceptions.TooHardError": [],
    "networkx.algorithms.sparsifiers": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "copy.Error": [],
    "sysconfig._subst_vars": [
        "<builtin>.AttributeError"
    ],
    "numpy._pytesttester.PytestTester": [],
    "numpy.ma.core._DomainSafeDivide": [],
    "urllib.parse.ParseResult": [],
    "networkx.algorithms.assortativity": [
        "networkx.algorithms.assortativity.connectivity",
        "networkx.algorithms.assortativity.neighbor_degree",
        "networkx.algorithms.assortativity.correlation"
    ],
    "numpy.linalg.linalg.LinAlgError": [],
    "calendar._localized_month.__init__": [],
    "calendar._localized_day": [
        "<builtin>.range",
        "datetime.datetime.date"
    ],
    "numpy.lib.index_tricks.nd_grid": [],
    "plistlib.readPlist": [
        "plistlib._maybe_open",
        "plistlib.load",
        "warnings.warn"
    ],
    "numpy.ma.core.MaskError": [],
    "urllib.parse._NetlocResultMixinBytes": [
        "<builtin>.property"
    ],
    "networkx.classes.reportviews.NodeDataView": [
        "<builtin>.classmethod"
    ],
    "networkx.classes.coreviews.UnionAdjacency": [],
    "pathlib._Accessor": [],
    "sre_compile._combine_flags": [],
    "networkx.algorithms.coloring.equitable_coloring": [],
    "reprlib.recursive_repr.decorating_function": [
        "<builtin>.getattr",
        "<builtin>.set"
    ],
    "html.entities": [
        "<map>.items",
        "<builtin>.chr"
    ],
    "calendar._localized_month": [
        "<builtin>.range",
        "datetime.datetime.date"
    ],
    "networkx.classes.reportviews.OutMultiDegreeView": [],
    "warnings.catch_warnings.__init__": [],
    "sre_parse.Tokenizer.error": [
        "sre_parse.Tokenizer.error",
        "sre_parse.Tokenizer.tell"
    ],
    "networkx.exception.AmbiguousSolution": [],
    "typing.NamedTupleMeta": [],
    "networkx.algorithms.isomorphism.vf2userfunc.MultiDiGraphMatcher": [],
    "ast.NodeTransformer": [],
    "networkx.classes.multigraph.MultiGraph": [
        "functools.cached_property.__init__"
    ],
    "traceback.StackSummary": [
        "<builtin>.classmethod"
    ],
    "pkg_resources._ReqExtras": [],
    "networkx.algorithms.isomorphism.temporalisomorphvf2.TimeRespectingDiGraphMatcher": [],
    "networkx.classes.digraph.DiGraph.successors": [
        "<builtin>.iter"
    ],
    "weakref.WeakValueDictionary.update": [
        "<builtin>.hasattr",
        "weakref.KeyedRef.__init__",
        "weakref.WeakValueDictionary._commit_removals",
        "<builtin>.dict"
    ],
    "networkx.readwrite.gexf.GEXFReader": [],
    "ast.Ellipsis": [],
    "email.charset.Charset.__init__": [
        "<str>.lower",
        "<builtin>.isinstance",
        "<map>.get",
        "<str>.encode",
        "<builtin>.str"
    ],
    "numpy.polynomial.legendre.Legendre": [
        "<builtin>.staticmethod"
    ],
    "numpy.core.numerictypes._typedict": [],
    "networkx.algorithms.centrality.closeness.NetworkXError": [],
    "numpy.lib.npyio.BagObj": [],
    "ctypes.c_wchar": [],
    "numpy.ma.extras.MAxisConcatenator": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "numpy.core.memmap.memmap": [],
    "numpy.core._type_aliases._add_array_type": [],
    "email.errors.CloseBoundaryNotFoundDefect": [],
    "datetime.date": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "networkx.algorithms.isomorphism.isomorphvf2.GMState": [],
    "numpy.compat._pep440._BaseVersion": [],
    "pathlib.WindowsPath": [],
    "xml.etree.ElementTree.QName": [],
    "ctypes.c_void_p": [],
    "numpy.polynomial.laguerre.Laguerre": [
        "<builtin>.staticmethod"
    ],
    "selectors._SelectorMapping": [],
    "numpy.core._internal.dummy_ctype": [],
    "networkx.algorithms.cuts": [],
    "networkx.algorithms.smallworld": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "numpy.lib.index_tricks.ndindex": [],
    "urllib.parse.ParseResultBytes": [],
    "pickle._load": [
        "pickle._Unpickler.load",
        "pickle._Unpickler.__init__"
    ],
    "xml.etree.ElementTree.ElementTree": [],
    "ast.NodeVisitor": [],
    "typing.io": [],
    "logging.Filterer": [],
    "logging.FileHandler": [],
    "numpy.lib.utils._Deprecate": [],
    "numpy.ma.extras._fromnxfunction_allargs": [],
    "xml.etree.ElementTree.Element": [],
    "pathlib._WindowsFlavour": [
        "<builtin>.range",
        "<builtin>.set"
    ],
    "numpy.core.arrayprint.SubArrayFormat": [],
    "textrank4zh.Segmentation.WordSegmentation": [],
    "numpy.polynomial.hermite.Hermite": [
        "<builtin>.staticmethod"
    ],
    "pkg_resources.register_namespace_handler": [],
    "datetime.time": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "logging.Filter": [],
    "networkx.classes.coreviews.UnionMultiInner": [],
    "_thread.RLock": [],
    "networkx.algorithms.tree.branchings.Edmonds": [],
    "sysconfig._init_non_posix": [
        "sysconfig._safe_realpath",
        "ntpath.dirname",
        "sysconfig.get_path",
        "posixpath.dirname"
    ],
    "copyreg.constructor": [
        "<builtin>.callable",
        "<builtin>.TypeError"
    ],
    "numpy.core._ufunc_config._unspecified": [],
    "numpy.core._dtype._kind_name": [
        "<builtin>.RuntimeError"
    ],
    "numpy.ma.core.MaskedArrayFutureWarning": [],
    "numpy.lib.index_tricks.OGridClass": [],
    "zipfile.LZMADecompressor": [],
    "numpy.core.records.format_parser": [],
    "ctypes.PyDLL": [],
    "networkx.classes.reportviews.InEdgeView": [],
    "traceback.TracebackException": [
        "<builtin>.classmethod"
    ],
    "numpy.core._exceptions._UFuncInputCastingError": [],
    "pkg_resources.Distribution": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "numpy.lib._iotools.ConverterLockError": [],
    "numpy.compat._inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "networkx.classes.reportviews.OutMultiEdgeView": [],
    "numpy.ma.extras._fromnxfunction": [],
    "typing.ForwardRef": [],
    "numpy.ma.core.MAError": [],
    "numpy.compat._pep440.NegativeInfinity": [],
    "networkx.algorithms.isomorphism.vf2userfunc.MultiGraphMatcher": [],
    "pkg_resources.ResourceManager.__init__": [],
    "ctypes.CDLL": [],
    "numpy.core._exceptions.UFuncTypeError": [],
    "numpy.ma.core._DomainCheckInterval.__init__": [],
    "base64": [],
    "networkx.algorithms.isomorphism.vf2userfunc.DiGraphMatcher": [],
    "numpy.lib.index_tricks.IndexExpression.__init__": [],
    "numpy.lib._datasource._FileOpeners": [],
    "zipfile.LargeZipFile": [],
    "networkx.classes.reportviews.InMultiEdgeDataView": [],
    "scipy.sparse._base.spmatrix.sum": [
        "scipy.sparse._sputils.validateaxis",
        "numpy.core.numeric.ones",
        "scipy.sparse._compressed._cs_matrix.sum",
        "scipy.sparse._base.spmatrix._ascontainer",
        "numpy.core.ones",
        "<builtin>.ValueError",
        "scipy.sparse._base.spmatrix.sum",
        "scipy.sparse._sputils.get_sum_dtype"
    ],
    "plistlib._PlistParser": [],
    "traceback.FrameSummary": [
        "<builtin>.property"
    ],
    "tempfile._TemporaryFileWrapper": [],
    "numpy.core.numerictypes.issubclass_": [
        "<builtin>.issubclass"
    ],
    "pkg_resources.EggMetadata": [],
    "networkx.classes.digraph.DiGraph.is_multigraph": [],
    "numpy.lib.index_tricks.IndexExpression": [],
    "email.errors.InvalidBase64LengthDefect": [],
    "numpy.core.arrayprint._recursive_guard": [],
    "numpy.ma.core.MaskedIterator": [],
    "email.feedparser.BufferedSubFile": [],
    "numpy.core.finfo": [],
    "email.parser.BytesParser": [],
    "pkg_resources.IResourceProvider": [],
    "networkx.readwrite.graphml.GraphML": [],
    "networkx.classes.reportviews.InMultiEdgeView": [],
    "typing._Immutable": [],
    "networkx.classes.reportviews.DegreeView": [],
    "numpy.compat._inspect.iscode": [
        "<builtin>.isinstance"
    ],
    "numpy.lib.mixins._reflected_binary_method": [],
    "string._TemplateMetaclass": [],
    "subprocess.TimeoutExpired": [
        "<builtin>.property"
    ],
    "calendar.TextCalendar": [],
    "networkx.utils.decorators.argmap.__init__": [],
    "networkx.algorithms.centrality.flow_matrix.InverseLaplacian": [],
    "weakref.WeakKeyDictionary.__init__": [
        "weakref.WeakKeyDictionary.update",
        "_weakref.ref",
        "<builtin>.set"
    ],
    "plistlib._BinaryPlistWriter": [],
    "networkx.utils": [
        "networkx.utils.misc",
        "networkx.utils.contextmanagers",
        "networkx.utils.heaps",
        "networkx.utils.rcm",
        "networkx.utils.decorators",
        "networkx.utils.random_sequence",
        "networkx.utils.union_find"
    ],
    "logging.Logger.getEffectiveLevel": [],
    "string.Formatter": [],
    "pathlib._WildcardSelector": [],
    "numpy.ma.core._DomainCheckInterval": [],
    "email.errors.MessageError": [],
    "networkx.convert.from_edgelist": [
        "networkx.generators.classic.empty_graph"
    ],
    "networkx.algorithms.graph_hashing": [
        "hashlib"
    ],
    "os._fscodec.fsdecode": [
        "<builtin>.isinstance",
        "os._fspath",
        "<str>.decode"
    ],
    "urllib.parse.SplitResult": [],
    "networkx.algorithms.community.asyn_fluid": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "posixpath.islink": [
        "stat.S_ISLNK"
    ],
    "uuid.UUID": [
        "<builtin>.property"
    ],
    "email.feedparser.BytesFeedParser": [],
    "numpy.ma.core._DomainedBinaryOperation": [],
    "ntpath.abspath": [],
    "networkx.convert_matrix.to_scipy_sparse_array": [
        "<builtin>.zip",
        "networkx.NetworkXError",
        "networkx.classes.graph.Graph.is_directed",
        "<builtin>.list",
        "<builtin>.set",
        "networkx.classes.graph.Graph.edges",
        "networkx.algorithms.centrality.closeness.NetworkXError",
        "<builtin>.len",
        "networkx.classes.graph.Graph.subgraph",
        "<builtin>.dict",
        "<builtin>.range",
        "networkx.classes.function.selfloop_edges",
        "scipy.sparse._base.spmatrix.asformat",
        "networkx.classes.graph.Graph.nbunch_iter"
    ],
    "sre_compile.dis": [
        "<builtin>.set",
        "sre_compile.dis.dis_",
        "<builtin>.len",
        "<builtin>.str"
    ],
    "networkx.algorithms.flow.preflowpush": [],
    "networkx.classes.coreviews.MultiAdjacencyView": [],
    "calendar.LocaleTextCalendar": [],
    "ctypes.c_uint": [],
    "datetime.timedelta": [
        "<builtin>.property"
    ],
    "genericpath.exists": [],
    "socket.socket": [
        "<builtin>.hasattr",
        "<builtin>.property"
    ],
    "pkg_resources.WorkingSet._added_new": [],
    "dataclasses": [
        "dataclasses.Field",
        "dataclasses._HAS_DEFAULT_FACTORY_CLASS",
        "re.compile",
        "dataclasses._MISSING_TYPE",
        "dataclasses.InitVar",
        "dataclasses.FrozenInstanceError",
        "dataclasses._InitVarMeta",
        "dataclasses._FIELD_BASE",
        "dataclasses._FIELD_BASE.__init__",
        "dataclasses._DataclassParams"
    ],
    "calendar.LocaleHTMLCalendar": [],
    "numpy.core.overrides.set_module": [],
    "pkg_resources._macos_arch": [
        "<map>.get"
    ],
    "reprlib.recursive_repr": [],
    "zipfile.Path": [
        "<builtin>.property"
    ],
    "logging.BufferingFormatter": [],
    "email.feedparser.FeedParser": [],
    "pkg_resources.ZipManifests": [
        "<builtin>.classmethod"
    ],
    "ctypes.c_byte": [],
    "numpy.ma.core._DomainTan.__init__": [],
    "typing.TypedDict": [],
    "numpy.ma.core._MaskedUnaryOperation": [],
    "networkx.algorithms.approximation.connectivity": [],
    "xml.etree.ElementTree.TreeBuilder": [],
    "email.errors.InvalidHeaderDefect": [],
    "numpy.lib.mixins._binary_method": [],
    "numpy.lib.mixins._inplace_binary_method": [],
    "networkx.algorithms.flow.utils.GlobalRelabelThreshold": [],
    "email.parser.Parser": [],
    "networkx.generators.degree_seq.DegreeSequenceRandomGraph": [],
    "logging.Filterer.__init__": [],
    "numpy.ma.core._convert2ma": [],
    "pkg_resources.WorkingSet": [
        "<builtin>.classmethod"
    ],
    "numpy.core.overrides.set_array_function_like_doc": [],
    "datetime.tzinfo": [],
    "selectors.KqueueSelector": [],
    "networkx.algorithms.centrality.second_order": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for"
    ],
    "networkx.drawing": [
        "networkx.drawing.nx_pydot",
        "networkx.drawing.nx_pylab",
        "networkx.drawing.nx_agraph",
        "networkx.drawing.layout"
    ],
    "ctypes.c_ubyte": [],
    "calendar.different_locale": [],
    "functools.wraps": [],
    "posixpath._get_sep": [
        "<builtin>.isinstance"
    ],
    "networkx.algorithms.tree.branchings.MultiDiGraph_EdgeKey": [],
    "networkx.readwrite.graphml.GraphMLWriter": [],
    "calendar.IllegalWeekdayError": [],
    "email._policybase.Compat32": [],
    "networkx.classes.filters.show_nodes": [],
    "numpy.core.getlimits._fr1": [],
    "numpy.core.getlimits.iinfo.__init__": [
        "<builtin>.ValueError",
        "<builtin>.type"
    ],
    "networkx.algorithms.planar_drawing": [],
    "networkx.algorithms.centrality.percolation": [],
    "numpy.core._type_aliases._add_types": [
        "<map>.items"
    ],
    "numpy.ma.core._DomainGreaterEqual.__init__": [],
    "socket.SocketIO": [
        "<builtin>.property"
    ],
    "pkg_resources.EmptyProvider": [],
    "networkx.classes.reportviews.OutEdgeDataView": [],
    "networkx.utils.union_find.UnionFind": [],
    "networkx.algorithms.approximation.vertex_cover": [],
    "plistlib.UID": [],
    "numpy.ma.core.MaskedConstant": [
        "<builtin>.classmethod"
    ],
    "numpy.lib.index_tricks.ndenumerate": [],
    "pkg_resources.IMetadataProvider": [],
    "numpy.lib.index_tricks.AxisConcatenator.__init__": [],
    "networkx.exception.NetworkXError": [],
    "ctypes._check_size": [
        "<builtin>.SystemError"
    ],
    "sre_compile.isstring": [
        "<builtin>.isinstance"
    ],
    "numpy.lib._datasource.Repository": [],
    "numpy.ctypeslib._concrete_ndptr": [
        "<builtin>.property"
    ],
    "numpy.core.numeric.ComplexWarning": [],
    "numpy.ma.core._MaskedPrintOption": [],
    "pkg_resources.FileMetadata": [],
    "numpy.core.arrayprint.BoolFormat": [],
    "networkx.linalg": [
        "networkx.linalg.modularitymatrix",
        "networkx.linalg.algebraicconnectivity",
        "networkx.linalg.attrmatrix",
        "networkx.linalg.laplacianmatrix",
        "networkx.linalg.graphmatrix",
        "networkx.linalg.bethehessianmatrix",
        "networkx.linalg.spectrum"
    ],
    "pkg_resources.ZipProvider": [
        "<builtin>.staticmethod",
        "<builtin>.property"
    ],
    "datetime.datetime": [
        "<builtin>.classmethod",
        "<builtin>.property"
    ],
    "numpy._pytesttester.PytestTester.__init__": [],
    "networkx.exception.NetworkXNoPath": [],
    "abc.abstractmethod": [],
    "imp": [
        "imp.NullImporter",
        "imp._LoadSourceCompatibility",
        "importlib._bootstrap_external",
        "importlib._bootstrap",
        "warnings.warn",
        "imp._HackedGetData",
        "imp._LoadCompiledCompatibility"
    ],
    "ctypes.c_ushort": [],
    "re.escape": [
        "<builtin>.isinstance",
        "<str>.translate",
        "<str>.encode",
        "<builtin>.str"
    ],
    "numpy.ma.core._DomainGreater.__init__": [],
    "pkg_resources.EmptyProvider.__init__": [],
    "struct": [],
    "numpy.polynomial.polyutils.RankWarning": [],
    "numpy.core._internal._Stream": [
        "<builtin>.property"
    ],
    "networkx.algorithms.traversal": [
        "networkx.algorithms.traversal.depth_first_search",
        "networkx.algorithms.traversal.beamsearch",
        "networkx.algorithms.traversal.edgedfs",
        "networkx.algorithms.traversal.edgebfs"
    ],
    "email.errors.ObsoleteHeaderDefect": [],
    "networkx.classes.reportviews.OutDegreeView": [],
    "random.SystemRandom": [],
    "numpy.ma.extras._fromnxfunction_seq": [],
    "networkx.algorithms.connectivity.edge_augmentation": [
        "networkx.utils.py_random_state",
        "collections.namedtuple",
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.not_implemented_for",
        "networkx.utils.decorators.py_random_state"
    ],
    "numpy.core.arrayprint._TimelikeFormat": [],
    "networkx.exception.NodeNotFound": [],
    "numpy.ma.core._DomainSafeDivide.__init__": [],
    "email.quoprimime": [
        "<builtin>.range",
        "<builtin>.ord",
        "<str>.encode",
        "<builtin>.chr"
    ],
    "networkx.classes.digraph.DiGraph.in_degree": [],
    "networkx.classes.reportviews.MultiDegreeView": [],
    "numpy.core.arrayprint.IntegerFormat": [],
    "numpy.core._internal._ctypes": [
        "<builtin>.property"
    ],
    "numpy.lib.index_tricks.AxisConcatenator": [
        "<builtin>.staticmethod"
    ],
    "pkg_resources.EggInfoDistribution": [],
    "ctypes.c_long": [],
    "email.errors.InvalidBase64CharactersDefect": [],
    "jieba.lac_small.reader_small": [
        "jieba.lac_small.reader_small.Dataset"
    ],
    "pathlib._PathParents": [],
    "networkx.convert_matrix.from_numpy_array": [
        "<builtin>.zip",
        "networkx.NetworkXError",
        "<builtin>.sorted",
        "<builtin>.TypeError",
        "networkx.classes.graph.Graph.is_directed",
        "networkx.classes.graph.Graph.add_edges_from",
        "networkx.generators.classic.empty_graph",
        "networkx.classes.graph.Graph.add_nodes_from",
        "<builtin>.int",
        "<builtin>.dict",
        "<builtin>.range",
        "networkx.algorithms.centrality.closeness.NetworkXError",
        "networkx.classes.graph.Graph.is_multigraph"
    ],
    "networkx.classes.reportviews.EdgeView": [],
    "numpy.lib._iotools.ConversionWarning": [],
    "networkx.classes.reportviews.DiDegreeView": [],
    "numpy.lib.mixins._unary_method": [],
    "pkg_resources.WorkingSet.subscribe": [
        "pkg_resources._initialize_master_working_set.<lambda1>",
        "<list>.append"
    ],
    "numpy.core._exceptions._UFuncOutputCastingError": [],
    "inspect.getmro": [],
    "pkg_resources.ExtractionError": [],
    "networkx.algorithms.centrality.flow_matrix.CGInverseLaplacian": [],
    "pkg_resources.WorkingSet._build_from_requirements": [
        "pkg_resources.parse_requirements",
        "pkg_resources.WorkingSet.add_entry",
        "pkg_resources.Environment.__init__",
        "pkg_resources.WorkingSet.add",
        "pkg_resources.WorkingSet.__init__",
        "pkg_resources.WorkingSet.resolve"
    ],
    "numpy._globals.ModuleDeprecationWarning": [],
    "sre_compile._bytes_to_codes": [
        "<builtin>.memoryview",
        "<builtin>.len"
    ],
    "email.errors.NonASCIILocalPartDefect": [],
    "networkx.classes.coreviews.AtlasView": [],
    "posixpath.normpath": [
        "<list>.pop",
        "<list>.append",
        "<builtin>.isinstance",
        "os._fspath",
        "<str>.startswith",
        "<str>.split"
    ],
    "numpy.ma.core._MaskedPrintOption.__init__": [],
    "networkx.classes.digraph.DiGraph": [
        "functools.cached_property.__init__"
    ],
    "operator.itemgetter.__init__": [],
    "textrank4zh.Segmentation.Segmentation": [],
    "sre_parse.Tokenizer.tell": [
        "<builtin>.len"
    ],
    "numpy.lib._iotools.ConverterError": [],
    "networkx.classes.reportviews.NodeView": [
        "<builtin>.classmethod"
    ],
    "subprocess.Popen": [
        "<builtin>.property"
    ],
    "scipy.sparse._compressed._cs_matrix.sum": [
        "scipy.sparse._compressed._cs_matrix._minor_reduce",
        "<builtin>.hasattr",
        "<builtin>.len",
        "scipy.sparse._base.spmatrix._ascontainer",
        "<builtin>.ValueError",
        "scipy.sparse._base.spmatrix.sum",
        "scipy.sparse._sputils.get_sum_dtype"
    ],
    "datetime._days_before_year": [],
    "threading._RLock.__init__": [],
    "numpy.core.getlimits.finfo": [
        "<builtin>.property"
    ],
    "numpy.core.getlimits.MachArLike._float_conv": [],
    "networkx.exception.NetworkXUnfeasible": [],
    "pkg_resources.DefaultProvider": [
        "<builtin>.classmethod"
    ],
    "numpy.ma.extras._fromnxfunction_args": [],
    "networkx.exception.ExceededMaxIterations": [],
    "numpy.ma.core._convert2ma._replace_return_type": [
        "<builtin>.RuntimeError"
    ],
    "ctypes.c_wchar_p": [],
    "urllib.parse.DefragResultBytes": [],
    "ntpath._get_bothseps": [
        "<builtin>.isinstance"
    ],
    "email.header._ValueFormatter": [],
    "plistlib.InvalidFileException": [],
    "ctypes.c_char": [],
    "encoder.JSONEncoder": [],
    "pathlib._TerminatingSelector": [],
    "re.findall": [
        "<str>.findall",
        "re._compile"
    ],
    "networkx.exception.NetworkXException": [],
    "email.errors.HeaderMissingRequiredValue": [],
    "numpy.core._exceptions._UFuncBinaryResolutionError": [],
    "pkg_resources.EggProvider": [],
    "warnings.warn": [
        "warnings._is_internal_frame",
        "warnings._next_external_frame",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "<builtin>.type",
        "warnings.warn_explicit",
        "<builtin>.range",
        "<builtin>.issubclass"
    ],
    "linecache": [
        "tokenize",
        "os"
    ],
    "pkg_resources._always_object": [],
    "zipfile.FastLookup": [],
    "typing._Final": [],
    "numpy.lib.npyio.NpzFile": [],
    "numpy.core.arrayprint.FloatingFormat": [],
    "pathlib.Path": [
        "<builtin>.classmethod"
    ],
    "networkx.classes.graph.Graph.is_directed": [],
    "networkx.algorithms.centrality.flow_matrix.FullInverseLaplacian": [],
    "email._parseaddr.AddrlistClass": [],
    "pathlib._RecursiveWildcardSelector": [],
    "numpy.matrixlib.defmatrix.matrix": [
        "<builtin>.property"
    ],
    "numpy.ma.core.mvoid": [
        "<builtin>.property"
    ],
    "email._policybase._PolicyBase": [],
    "networkx.utils.py_random_state": [],
    "networkx.algorithms.isomorphism.ismags": [
        "networkx.algorithms.isomorphism.ismags.ISMAGS"
    ],
    "urllib.parse.Quoter": [],
    "networkx.classes.coreviews.UnionMultiAdjacency": [],
    "networkx.exception.PowerIterationFailedConvergence": [],
    "networkx.exception.NetworkXNotImplemented": [],
    "xml.etree.ElementTree._ListDataStream": [],
    "numpy.core.overrides.array_function_dispatch": [],
    "numpy.core.records.recarray": [],
    "networkx.algorithms.flow.utils.Level": [],
    "numpy.core._ufunc_config._setdef": [],
    "networkx.classes.graph.Graph.add_nodes_from": [
        "<builtin>.ValueError"
    ],
    "networkx.algorithms.community.louvain": [
        "networkx.utils.decorators.argmap.__init__",
        "networkx.utils.decorators.py_random_state",
        "networkx.utils.py_random_state"
    ],
    "textrank4zh.TextRank4Sentence.TextRank4Sentence": [],
    "networkx.algorithms.centrality.flow_matrix.SuperLUInverseLaplacian": [],
    "zipfile.LZMACompressor": [],
    "genericpath._splitext": [
        "<builtin>.max",
        "<str>.rfind"
    ],
    "subprocess._use_posix_spawn": [
        "<builtin>.hasattr",
        "<builtin>.map",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "numpy.core._internal._getintp_ctype": [
        "numpy.core._internal.dummy_ctype.__init__"
    ],
    "subprocess.CompletedProcess": [],
    "sysconfig._extend_dict": [
        "<map>.keys"
    ],
    "urllib.parse._ResultMixinStr": [],
    "networkx.classes.coreviews.FilterAtlas": [],
    "plistlib._BinaryPlistParser": []
}