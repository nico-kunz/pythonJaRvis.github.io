{
    "calendar._localized_day": [
        "<builtin>.range"
    ],
    "textual.app.App.measure": [
        "rich.console.Console.options",
        "measure.get",
        "rich.console.ConsoleOptions.update"
    ],
    "uu": [
        "uu.test",
        "uu.Error"
    ],
    "asyncio.coroutines": [
        "coroutines.CoroWrapper",
        "<builtin>.set",
        "coroutines._is_debug_mode",
        "<builtin>.object"
    ],
    "textual.widgets._scroll_view.ScrollView.update": [
        "textual.views._window_view.WindowView.update",
        "textual.widgets._scroll_view.ScrollView.home"
    ],
    "subprocess.Popen._execute_child": [
        "<builtin>.hasattr",
        "<builtin>.map",
        "<builtin>.getattr",
        "<builtin>.int",
        "<builtin>.issubclass",
        "subprocess.Popen._close_pipe_fds",
        "os._fscodec.fsencode",
        "posixpath.dirname",
        "<builtin>.bytes",
        "subprocess.Popen._handle_exitstatus",
        "os._fscodec.fsdecode",
        "<builtin>.bytearray",
        "<builtin>.list",
        "<builtin>.set",
        "<builtin>.tuple",
        "<builtin>.bool",
        "<builtin>.len",
        "os.get_exec_path",
        "subprocess.Popen._posix_spawn",
        "<builtin>.sorted",
        "<builtin>.isinstance",
        "os.fsencode",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.ValueError",
        "<builtin>.TypeError"
    ],
    "praat": [
        "praat.PraatLexer"
    ],
    "stata": [
        "stata.StataLexer",
        "pygments.lexer.__new__"
    ],
    "difflib.get_close_matches": [
        "difflib.SequenceMatcher.set_seq2",
        "difflib.SequenceMatcher.__init__",
        "difflib.SequenceMatcher.set_seq1",
        "heapq.nlargest",
        "difflib.SequenceMatcher.real_quick_ratio",
        "<builtin>.ValueError"
    ],
    "http.cookiejar.CookieJar._normalized_cookie_tuples": [
        "<list>.append",
        "http.cookiejar._debug",
        "<builtin>.int"
    ],
    "smithy.SmithyLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "rich.syntax.lexer": [
        "lexer.get_lexer_by_name"
    ],
    "html.XmlLexer": [],
    "constrain.Constrain.__rich_console__": [
        "rich.console.Console.render",
        "rich.console.ConsoleOptions.update_width"
    ],
    "textual.view": [
        "rich.repr.auto",
        "textual.widget.Widget.__init_subclass__",
        "textual.view.View"
    ],
    "typing._collect_type_vars": [
        "<list>.append",
        "<list>.extend",
        "<builtin>.isinstance",
        "<builtin>.tuple"
    ],
    "docutils.languages.LanguageImporter.import_from_packages": [
        "docutils.languages.import_module",
        "docutils.languages.RstLanguageImporter.check_content"
    ],
    "html.DtdLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups"
    ],
    "requests.cookies.unverifiable": [
        "requests.cookies.MockRequest.is_unverifiable"
    ],
    "requests.models.PreparedRequest.prepare_url": [
        "utils.requote_uri",
        "util.url.parse_url",
        "<builtin>.str",
        "urllib.parse.urlunparse",
        "<builtin>.isinstance",
        "_internal_utils.unicode_is_ascii",
        "requests.models.RequestEncodingMixin._encode_params"
    ],
    "urllib.parse.urlparse": [
        "urllib.parse._noop",
        "urllib.parse.urlsplit",
        "urllib.parse._coerce_args"
    ],
    "textual._animator.Animator.__init__": [
        "textual._timer.Timer.__init__"
    ],
    "requests.adapters.HTTPAdapter.__init__": [
        "urllib3.util.retry.Retry.from_int",
        "retry.__init__",
        "urllib3.util.retry.Retry.__init__",
        "<builtin>.super",
        "requests.adapters.BaseAdapter.__init__",
        "requests.adapters.HTTPAdapter.init_poolmanager"
    ],
    "configs.IniLexer": [
        "pygments.lexer.bygroups"
    ],
    "email.charset.Charset.__init__": [
        "<map>.get",
        "<str>.lower",
        "<builtin>.str",
        "<str>.encode",
        "<builtin>.isinstance"
    ],
    "asyncio.runners": [],
    "requests.utils.requote_uri": [
        "requests.utils.unquote_unreserved",
        "urllib.parse.quote"
    ],
    "rich.style.Style.__init__._make_color": [
        "rich.color.Color.parse",
        "<builtin>.isinstance"
    ],
    "typing.__new__": [
        "typing._make_nmtuple"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool._new_conn": [
        "timeout.connect_timeout",
        "urllib3.connectionpool.HTTPSConnectionPool._prepare_conn",
        "logging.Logger.debug",
        "urllib3.connection.HTTPSConnection.__init__"
    ],
    "gcodelexer.GcodeLexer": [
        "pygments.lexer.bygroups"
    ],
    "socket._intenum_converter": [
        "enum.EnumMeta.__call__"
    ],
    "rich.markdown.Markdown.__init__": [
        "commonmark.blocks.Parser.parse",
        "commonmark.blocks.Parser.__init__"
    ],
    "urllib3.util.url": [
        "urllib3.util.url.Url",
        "url.Url",
        "re.compile",
        "collections.namedtuple",
        "<builtin>.set"
    ],
    "rich.console.Console._render_buffer": [
        "rich.style.Style.__bool__",
        "rich.console.is_terminal",
        "rich.style.Style.render"
    ],
    "contextlib._BaseExitStack.callback": [
        "warnings.warn",
        "contextlib._BaseExitStack._push_exit_callback",
        "contextlib._BaseExitStack._create_cb_wrapper",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "typing.__class_getitem__": [
        "typing._check_generic",
        "typing._GenericAlias.__init__"
    ],
    "utllib3.poolmanager.PoolManager._new_pool": [
        "urllib3.connectionpool.HTTPSConnectionPool.__init__"
    ],
    "docutils.statemachine.State.add_initial_transitions": [
        "docutils.statemachine.State.add_transitions",
        "docutils.statemachine.State.make_transitions"
    ],
    "requests.models.RequestEncodingMixin._encode_params": [
        "<builtin>.hasattr",
        "<list>.append",
        "utils.to_key_val_list",
        "<builtin>.isinstance",
        "util.parse.urlencode"
    ],
    "inspect.Signature.replace": [
        "<builtin>.type",
        "inspect.Signature.__init__"
    ],
    "textual.layout.Layout.mount_all": [
        "textual.layouts.dock.DockLayout.get_widgets",
        "textual.layouts.grid.GridLayout.get_widgets",
        "textual.layouts.vertical.VerticalLayout.get_widgets",
        "textual.view.View.mount"
    ],
    "grammar_notation": [],
    "logging.Formatter.formatTime": [],
    "pathlib.PurePath.__str__": [
        "pathlib._format_parsed_parts"
    ],
    "rich.json": [
        "rich.console.Console.print",
        "rich.json.JSON.__init__",
        "argparse.ArgumentParser.__init__",
        "<builtin>.open",
        "codecs.StreamRecoder.read",
        "argparse._ActionsContainer.add_argument",
        "rich.json.JSON",
        "rich.console.Console.__init__",
        "argparse.ArgumentParser.parse_args"
    ],
    "textual.layouts.grid.GridLayout.add_areas": [
        "textual.layouts.grid.GridLayout._add_area",
        "textual.layout.Layout.require_update"
    ],
    "importlib.metadata.FastPath.joinpath": [],
    "textual.widget.Widget.__init__": [
        "textual.message_pump.MessagePump.__init__",
        "<builtin>.super"
    ],
    "requests._internal_utils.to_native_string": [
        "<str>.decode",
        "<builtin>.isinstance",
        "<map>.decode"
    ],
    "ntpath": [
        "<builtin>.hasattr",
        "genericpath"
    ],
    "rich.console.ConsoleOptions.update": [
        "rich.console.ConsoleOptions.copy",
        "<builtin>.isinstance",
        "<builtin>.max"
    ],
    "asyncio.tasks": [
        "types.coroutine",
        "asyncio.tasks._GatheringFuture",
        "asyncio.tasks.Task",
        "_weakrefset.WeakSet.__init__",
        "asyncio.base_tasks"
    ],
    "hashlib": [
        "<builtin>.bytes",
        "<builtin>.range",
        "hashlib.__get_builtin_constructor",
        "hashlib.__get_openssl_constructor",
        "<builtin>.set",
        "<builtin>.globals",
        "logging.exception"
    ],
    "requests.compat": [
        "http.cookies",
        "http.cookiejar",
        "charset_normalizer"
    ],
    "numbers.Integral": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "typing._remove_dups_flatten": [
        "typing._GenericAlias.__hash__",
        "typing.ForwardRef.__hash__",
        "<builtin>.set",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "typing._SpecialForm.__hash__",
        "<builtin>.len"
    ],
    "rich.syntax.Syntax.get_theme": [
        "rich.syntax.PygmentsSyntaxTheme.__init__",
        "<builtin>.isinstance",
        "rich.syntax.ANSISyntaxTheme.__init__"
    ],
    "inspect.ismodule": [
        "<builtin>.isinstance"
    ],
    "commonmark.blocks.Parser.add_child": [
        "commonmark.node.Node.__init__",
        "commonmark.node.Node.append_child",
        "commonmark.blocks.Parser.finalize",
        "commonmark.blocks.can_contain"
    ],
    "urllib3.contrib._appengine_environ.is_local_appengine": [
        "_collections_abc.Mapping.__contains__"
    ],
    "configparser.RawConfigParser._join_multiline_values": [
        "configparser.Interpolation.before_read",
        "<builtin>.isinstance"
    ],
    "urllib.parse._coerce_args": [
        "urllib.parse._decode_args",
        "<builtin>.TypeError",
        "<builtin>.isinstance"
    ],
    "textual.app.App.get_driver_class": [
        "textual.drivers.linux_driver",
        "textual.drivers.windows_driver"
    ],
    "rich.abc.RichRenderable": [
        "<builtin>.classmethod"
    ],
    "rich_rst.RSTVisitor.__init__": [
        "docutils.nodes.NodeVisitor.__init__",
        "<builtin>.super"
    ],
    "textual.layouts.grid.GridLayout.arrange": [
        "<builtin>.range",
        "textual.geometry.Region.__add__",
        "<builtin>.zip",
        "<builtin>.set",
        "<builtin>.sorted",
        "textual.geometry.from_corners"
    ],
    "inspect._signature_is_builtin": [
        "inspect.ismethoddescriptor",
        "<builtin>.isinstance",
        "inspect.isbuiltin"
    ],
    "click.core.MultiCommand": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "configs.AugeasLexer": [
        "pygments.lexer.bygroups"
    ],
    "ssl_._ssl_wrap_socket_impl": [
        "ssl.SSLContext.wrap_socket"
    ],
    "urllib3.connectionpool._normalize_host": [
        "util.url._normalize_host"
    ],
    "ipaddress.IPv6Address.__init__": [
        "ipaddress._ip_int_from_string",
        "ipaddress._IPAddressBase._check_int_address",
        "<builtin>.isinstance",
        "<builtin>.str"
    ],
    "textual.scrollbar.ScrollBarRender": [
        "<builtin>.classmethod",
        "rich.color.Color.parse"
    ],
    "types.ParamType.__call__": [
        "types.Choice.convert",
        "types.BoolParamType.convert",
        "types.StringParamType.convert",
        "types._NumberParamTypeBase.convert"
    ],
    "requests.cookies.MockRequest.get_origin_req_host": [
        "requests.cookies.MockRequest.get_host"
    ],
    "rich.containers.Lines.justify": [
        "rich.text.Text.truncate",
        "rich.cells.cell_len",
        "rich.text.Text.pad_left",
        "rich.text.Text.join",
        "rich.text.Text.split",
        "rich.text.Text.pad_right",
        "rich.containers.Lines.__len__",
        "rich.text.Text.__init__",
        "rich.style.Style.__eq__",
        "rich.text.Text.plain",
        "<builtin>.range",
        "rich.containers.Lines.__setitem__",
        "<builtin>.len",
        "rich.text.Text.get_style_at_offset",
        "rich.containers.Lines.__iter__",
        "<builtin>.sum",
        "<builtin>.enumerate",
        "rich.containers.Lines.__getitem__",
        "rich.text.Text.rstrip"
    ],
    "requests.models.PreparedRequest.prepare_auth": [
        "<builtin>.any",
        "utils.get_auth_from_url",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "dataclasses._get_field": [
        "dataclasses._is_initvar",
        "<builtin>.type",
        "dataclasses._is_type",
        "<builtin>.isinstance",
        "dataclasses.field",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "<builtin>.TypeError",
        "dataclasses._is_classvar"
    ],
    "requests.cookies.MockRequest.add_unredirected_header": [],
    "textual.app.App.process_messages": [
        "textual.log",
        "textual.message_pump.MessagePump.dispatch_message",
        "rich.console.Console.__init__",
        "textual.message_pump.MessagePump.process_messages",
        "textual.app.App.log",
        "<builtin>.super",
        "textual.message.Message.__init__",
        "textual.views.._dock_view.DockView.__init__",
        "textual.drivers.linux_driver.LinuxDriver.start_application_mode",
        "rich.console.Console.print_exception",
        "textual.app.App.animator",
        "textual.drivers.linux_driver.LinuxDriver.__init__",
        "textual._animator.Animator.stop",
        "textual._animator.Animator.start",
        "textual.app.App.close_all",
        "textual.message_pump.MessagePump.post_message",
        "textual.app.App.refresh",
        "textual.app.App.push_view",
        "textual.views._dock_view.DockView.__init__",
        "textual.message.Message.wait",
        "textual.drivers.linux_driver.LinuxDriver.stop_application_mode"
    ],
    "click.parser.OptionParser": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "dataclasses.field": [
        "dataclasses.Field.__init__",
        "<builtin>.ValueError"
    ],
    "certifi.core.where": [
        "pathlib.PurePath.__str__",
        "posixpath.join",
        "ntpath.join",
        "contextlib._GeneratorContextManager.__enter__",
        "<builtin>.str",
        "ntpath.dirname",
        "posixpath.dirname",
        "contextlib.helper"
    ],
    "rich.live_render": [
        "rich.live_render.LiveRender"
    ],
    "collections.Counter.__init__": [
        "collections.Counter.update",
        "<builtin>.super"
    ],
    "commonmark.normalize_reference._get_smp_regex": [
        "re.compile",
        "<list>.append",
        "<builtin>.sorted",
        "<builtin>.str"
    ],
    "textual._animator.Animator.bind": [
        "textual._animator.BoundAnimator.__init__"
    ],
    "inspect.isclass": [
        "<builtin>.isinstance"
    ],
    "weakref.WeakKeyDictionary.__init__": [
        "_weakref.ref",
        "<builtin>.set",
        "weakref.WeakKeyDictionary.update"
    ],
    "rich.syntax.Syntax._get_base_style": [
        "rich.syntax.ANSISyntaxTheme.get_background_style",
        "rich.syntax.PygmentsSyntaxTheme.get_background_style",
        "rich.style.Style.__add__"
    ],
    "ipaddress.IPv4Address": [
        "functools.lru_cache",
        "<builtin>.property",
        "functools._lru_cache_wrapper.wrapper",
        "functools.lru_cache.decorating_function"
    ],
    "requests.models.RequestEncodingMixin.path_url": [
        "urllib.parse.urlsplit"
    ],
    "ssl.SSLSocket.send": [
        "ssl.SSLSocket._checkClosed",
        "<builtin>.ValueError",
        "<builtin>.super"
    ],
    "configs.PropertiesLexer": [
        "pygments.lexer.bygroups"
    ],
    "configparser.BasicInterpolation": [
        "re.compile"
    ],
    "rich.theme.Theme": [
        "typing.inner",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "rdf.ShExCLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "inspect.unwrap._is_wrapper": [
        "<builtin>.hasattr",
        "inspect._signature_from_callable.<lambda1>"
    ],
    "datetime._check_time_fields": [
        "datetime._check_int_field",
        "<builtin>.ValueError"
    ],
    "requests.models.Response": [
        "<builtin>.property"
    ],
    "urllib3.connection": [
        "urllib3.connection.DummyConnection",
        "urllib3.connection.BrokenPipeError",
        "urllib3.connection.ConnectionError",
        "urllib3.connection.HTTPSConnection",
        "urllib3.util",
        "logging.getLogger",
        "re.compile",
        "urllib3.util.ssl_match_hostname",
        "urllib3.util.proxy",
        "urllib3.connection.BaseSSLError",
        "urllib3.connection.HTTPConnection",
        "urllib3.packages.six",
        "datetime.datetime.date"
    ],
    "textual.widgets._scroll_view.ScrollView.__init__": [
        "textual.scrollbar.ScrollBar.__init__",
        "textual.layouts.grid.GridLayout.add_areas",
        "_window_view.WindowView.__init__",
        "textual.layouts.grid.GridLayout.add_column",
        "<builtin>.super",
        "textual.layouts.grid.GridLayout.__init__",
        "textual.view.View.__init__",
        "textual.layouts.grid.GridLayout.show_row",
        "textual.layouts.grid.GridLayout.add_row",
        "textual.layouts.grid.GridLayout.show_column"
    ],
    "sre_compile._compile_charset": [
        "sre_constants.error.__init__",
        "<list>.extend"
    ],
    "requests.cookies.origin_req_host": [
        "requests.cookies.MockRequest.get_origin_req_host"
    ],
    "rich.text.Text.stylize": [
        "rich.style.Style.__bool__",
        "<builtin>.len",
        "rich.text.Text.__len__",
        "<builtin>.min"
    ],
    "rich.console.Console.print": [
        "rich.console.NewLine.__init__",
        "rich.console.Console.__exit__",
        "rich.console.Console.get_style",
        "rich.console.Console._collect_renderables",
        "<builtin>.min",
        "rich.console.ConsoleOptions.update",
        "segment.split_and_crop_lines",
        "segment.apply_style",
        "rich.console.Console.width",
        "rich.console._buffer",
        "rich.console.Console.__enter__",
        "rich.console.Console.options",
        "rich.console.Console.render",
        "<builtin>.len"
    ],
    "scdoc.ScdocLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "docutils.statemachine.StringList.get_text_block": [
        "<builtin>.len",
        "docutils.statemachine.ViewList.__getitem__"
    ],
    "subprocess.Popen.poll": [
        "subprocess.Popen._internal_poll"
    ],
    "urllib3.packages.six.MovedModule._resolve": [
        "urllib3.packages.six._import_module"
    ],
    "urllib3.util.ssltransport": [
        "urllib3.util.ssltransport.SSLTransport"
    ],
    "procfile.ProcfileLexer": [
        "pygments.lexer.bygroups"
    ],
    "retry.__init__": [],
    "rich.style.__new__": [
        "rich.style.colorformat",
        "pygments.token._TokenType.split"
    ],
    "inspect.Parameter.__init__": [
        "<builtin>.type",
        "enum.EnumMeta.__call__",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.TypeError"
    ],
    "requests.utils.is_valid_cidr": [
        "<builtin>.int"
    ],
    "requests.utils.default_headers": [
        "requests.utils.default_user_agent",
        "requests.structures.CaseInsensitiveDict.__init__"
    ],
    "rich.text.Text.rstrip_end": [
        "rich.text.Text.right_crop",
        "<builtin>.min",
        "rich.text.Text.__len__",
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "rich.markup": [
        "rich.markup.Tag",
        "typing.__new__",
        "typing.inner",
        "rich.markup.GroffLexer",
        "rich.markup.BBCodeLexer",
        "rich.markup.MozPreprocCssLexer",
        "rich.markup.MozPreprocPercentLexer",
        "rich.markup.MozPreprocHashLexer",
        "ast",
        "re.compile",
        "rich.markup.MoinWikiLexer",
        "rich.markup.RstLexer",
        "rich.markup.MozPreprocJavascriptLexer",
        "rich.markup.MarkdownLexer",
        "rich.markup.MozPreprocXulLexer",
        "rich.markup.TexLexer",
        "rich.markup.TiddlyWiki5Lexer"
    ],
    "rich.style._Bit": [
        "typing.inner"
    ],
    "fortran.FortranFixedLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__",
        "pygments.lexer.using"
    ],
    "pygments.regexopt": [
        "re.compile",
        "operator.itemgetter.__init__"
    ],
    "meson.MesonLexer": [
        "pygments.lexer.words.__init__"
    ],
    "http.cookiejar.http2time": [
        "<str>.sub",
        "<list>.index",
        "<str>.search",
        "<str>.groups",
        "http.cookiejar._str2time",
        "<builtin>.float",
        "<builtin>.int"
    ],
    "functools.partial": [
        "reprlib.recursive_repr",
        "reprlib.recursive_repr.decorating_function"
    ],
    "requests.sessions.Session.__init__": [
        "collections.OrderedDict.__init__",
        "requests.adapters.HTTPAdapter.__init__",
        "requests.sessions.Session.mount",
        "utils.default_headers",
        "hooks.default_hooks",
        "requests.cookies.cookiejar_from_dict",
        "requests.hooks.default_hooks",
        "requests.utils.default_headers"
    ],
    "inspect.Parameter.__str__": [
        "<builtin>.repr",
        "dataclasses._HAS_DEFAULT_FACTORY_CLASS.__repr__"
    ],
    "datetime": [
        "datetime.date",
        "datetime.timezone",
        "datetime.timezone._create",
        "datetime.time",
        "<list>.append",
        "datetime.tzinfo",
        "datetime.timedelta",
        "datetime._days_before_year",
        "datetime.datetime"
    ],
    "rich.traceback.Traceback": [
        "<builtin>.classmethod",
        "console.group",
        "typing.inner",
        "console.decorator"
    ],
    "textual.widgets._header.Header": [
        "typing.__new__",
        "<builtin>.property",
        "textual.reactive.Reactive.__init__",
        "typing.inner"
    ],
    "rich.console.Console.options": [
        "rich.console.Console.encoding",
        "rich.console.Console.width",
        "rich.console.Console.size",
        "rich.console.Console.is_terminal"
    ],
    "requests.cookies.MockRequest.get_full_url": [
        "_collections_abc.Mapping.get"
    ],
    "urllib.parse._splitnetloc": [
        "<list>.find",
        "<builtin>.min",
        "<builtin>.len"
    ],
    "requests.utils.is_ipv4_address": [],
    "textual.layout.width_view": [
        "rich.segment.Segment.divide"
    ],
    "typing._GenericAlias.__init__": [
        "<map>.get",
        "typing._collect_type_vars",
        "typing._GenericAlias.__setattr__",
        "<builtin>.isinstance",
        "<builtin>.tuple"
    ],
    "ipaddress._IPAddressBase": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "textual.views._window_view.WindowView.update": [
        "textual.widgets._static.Static.__init__",
        "<builtin>.isinstance",
        "textual.widget.Widget.refresh"
    ],
    "dataclasses._process_class": [
        "dataclasses._cmp_fn",
        "<builtin>.hasattr",
        "dataclasses._set_new_attribute",
        "inspect.Signature.__str__",
        "dataclasses._hash_set_none",
        "<builtin>.str",
        "dataclasses._DataclassParams.__init__",
        "<builtin>.setattr",
        "inspect.signature",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "dataclasses._repr_fn",
        "<builtin>.TypeError",
        "<builtin>.bool",
        "dataclasses._tuple_str",
        "<builtin>.delattr",
        "dataclasses._init_fn"
    ],
    "rich.pretty": [
        "rich.abc",
        "typing.inner",
        "rich.pretty.Pretty",
        "pretty.Pretty",
        "dataclasses.dataclass",
        "rich.pretty.Node",
        "_collections.defaultdict",
        "pretty._Line",
        "collections.namedtuple",
        "<builtin>.tuple",
        "rich.pretty._Line",
        "pretty.Node"
    ],
    "encoder": [
        "re.compile",
        "encoder.JSONEncoder"
    ],
    "requests.status_codes": [
        "requests.structures.LookupDict.__init__",
        "requests.status_codes._init"
    ],
    "requests.auth._basic_auth_str": [
        "requests._internal_utils.to_native_string",
        "<builtin>.type",
        "warnings.warn",
        "<builtin>.str",
        "<builtin>.isinstance",
        "base64.b64encode"
    ],
    "core.iter_params_for_processing": [
        "click.core.sort_key",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "click.decorators": [
        "typing.TypeVar.__init__",
        "typing.inner",
        "typing.overload"
    ],
    "rich.color_triplet.ColorTriplet": [
        "<builtin>.property"
    ],
    "rich.style.Style.render": [
        "rich.style.Style._make_ansi_codes"
    ],
    "traceback.print_stack": [
        "traceback.print_list",
        "traceback.extract_stack"
    ],
    "logging.Formatter.format": [
        "logging.Formatter.formatMessage",
        "logging.Formatter.formatException",
        "logging.Formatter.formatTime",
        "logging.Formatter.usesTime",
        "logging.LogRecord.getMessage",
        "logging.Formatter.formatStack"
    ],
    "requests.cookies.MockRequest.__init__": [
        "urllib.parse.urlparse"
    ],
    "rich.markdown.ListElement": [
        "<builtin>.classmethod"
    ],
    "rich.control.strip_control_codes": [
        "<str>.translate"
    ],
    "pathlib.__new__": [
        "pathlib._from_parts",
        "pathlib.Path._init"
    ],
    "utllib3.poolmanager.PoolManager.connection_from_pool_key": [
        "utllib3.poolmanager.PoolManager._new_pool",
        "_collections.RecentlyUsedContainer.__setitem__",
        "_collections_abc.Mapping.get"
    ],
    "rich.columns": [
        "rich.align",
        "<builtin>.enumerate",
        "<builtin>.sorted",
        "rich.columns.Columns.__init__",
        "rich.columns.Columns"
    ],
    "email._policybase": [
        "email._policybase.Compat32",
        "email._policybase.Policy",
        "email.header",
        "email._policybase._PolicyBase",
        "email._policybase._PolicyBase.__init__",
        "email._policybase._extend_docstrings"
    ],
    "types.ParamType": [
        "typing.inner"
    ],
    "textual._xterm_parser.XTermParser": [
        "re.compile"
    ],
    "scanner": [
        "scanner.Scanner",
        "re.compile",
        "scanner.EndOfText"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.urlopen": [
        "retry.is_retry",
        "url._encode_target",
        "urllib3.response.HTTPResponse.getheader",
        "proxy.connection_requires_http_tunnel",
        "six.ensure_str",
        "urllib3.connectionpool.HTTPConnectionPool._make_request",
        "timeout.connect_timeout",
        "<builtin>.isinstance",
        "_collections_abc.MutableMapping.update",
        "requests.structures.CaseInsensitiveDict.copy",
        "<builtin>.getattr",
        "urllib3.connectionpool.HTTPConnectionPool._get_timeout",
        "url.parse_url",
        "<builtin>.bool",
        "response.from_httplib",
        "urllib3.connectionpool.HTTPConnectionPool._get_conn",
        "request.set_file_position"
    ],
    "requests.utils.super_len": [
        "<builtin>.max",
        "<builtin>.hasattr",
        "<map>.tell",
        "<map>.fileno",
        "<builtin>.len"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._get_conn": [
        "queue.Queue.get",
        "urllib3.connectionpool.HTTPSConnectionPool._new_conn",
        "<builtin>.getattr"
    ],
    "asyncio.coroutines.iscoroutine": [
        "<builtin>.type",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "platform.system": [
        "platform.uname"
    ],
    "http.client": [
        "http.client.UnknownProtocol",
        "http.client.NotConnected",
        "http.client.HTTPResponse",
        "<builtin>.globals",
        "http.client.HTTPMessage",
        "http.client.CannotSendRequest",
        "http.client.UnknownTransferEncoding",
        "http.client.BadStatusLine",
        "http.client.RemoteDisconnected",
        "http.client.InvalidURL",
        "email.message",
        "http.client.LineTooLong",
        "email.parser",
        "http.client.ResponseNotReady",
        "http.client.CannotSendHeader",
        "http.client.IncompleteRead",
        "http",
        "re.compile",
        "http.client.UnimplementedFileMode",
        "http.client.HTTPException",
        "http.client.ImproperConnectionState",
        "http.client.HTTPConnection"
    ],
    "docutils.parsers.rst.roles.register_canonical_role": [
        "docutils.parsers.rst.roles.set_implicit_options",
        "<str>.lower"
    ],
    "inspect._signature_get_partial": [
        "inspect.Signature.replace",
        "inspect.Signature.bind_partial",
        "<builtin>.ValueError"
    ],
    "rich._inspect": [
        "rich._inspect.Inspect"
    ],
    "socket.SocketIO.readinto": [
        "<builtin>.OSError",
        "socket.SocketIO.readable",
        "ssl.SSLSocket.recv_into"
    ],
    "optparse.TitledHelpFormatter.__init__": [
        "optparse.HelpFormatter.__init__"
    ],
    "base_tasks": [],
    "ssl.SSLSocket._real_close": [
        "socket.socket._real_close",
        "<builtin>.super"
    ],
    "grammar_notation.AbnfLexer": [
        "pygments.lexer.words.__init__"
    ],
    "docutils.utils.Reporter.notify_observers": [
        "nodes.document.note_parse_message"
    ],
    "logging.Handler.format": [
        "logging.Formatter.format"
    ],
    "inspect._signature_bound_method": [
        "inspect.parameters",
        "inspect.Signature.replace",
        "inspect.kind",
        "<builtin>.ValueError",
        "<builtin>.tuple"
    ],
    "logging.Handler.emit": [
        "<builtin>.NotImplementedError"
    ],
    "rich.console.Console.export_html": [
        "html.escape",
        "rich.style.Style.get_html_style",
        "rich.style.link",
        "<builtin>.len",
        "color_triplet.hex",
        "rich.style.Style.__hash__",
        "segment.Segment.simplify",
        "rich.style.Style.__bool__",
        "segment.Segment.filter_control"
    ],
    "requests.packages": [
        "warnings.filterwarnings",
        "<builtin>.locals",
        "<builtin>.__import__",
        "<builtin>.list"
    ],
    "mime": [
        "pygments.lexer.__new__",
        "mime.MIMELexer"
    ],
    "rich.console.Console.save_html": [
        "rich.console.Console.export_html",
        "<builtin>.open",
        "codecs.IncrementalEncoder.__init__"
    ],
    "csv.Sniffer.has_header": [
        "csv.Sniffer.sniff",
        "<builtin>.range",
        "<builtin>.list",
        "<map>.keys",
        "<builtin>.type",
        "<map>.items",
        "<builtin>.len",
        "<builtin>.next"
    ],
    "textual.app.App.run": [
        "asyncio.runners.run",
        "textual.app.App.run.run_app"
    ],
    "urllib3.packages.six._SixMetaPathImporter.load_module": [
        "urllib3.packages.six.MovedModule._resolve",
        "<builtin>.isinstance",
        "urllib3.packages.six._SixMetaPathImporter.__get_module"
    ],
    "wait": [
        "wait.NoWayToWaitForSocketError"
    ],
    "rich._windows": [
        "rich._win32_console",
        "ctypes.LibraryLoader.__init__",
        "rich._windows.get_windows_console_features",
        "<builtin>.ImportError",
        "<builtin>.repr",
        "rich._windows.WindowsConsoleFeatures"
    ],
    "configs.NestedTextLexer": [
        "pygments.lexer.bygroups"
    ],
    "text": [
        "typing.__new__",
        "text.Text",
        "typing.inner",
        "re.compile",
        "text.Span"
    ],
    "mimetypes": [
        "mimetypes.MimeTypes",
        "mimetypes._default_mime_types"
    ],
    "idna": [
        "idna.package_data",
        "idna.core"
    ],
    "logging.RootLogger.__init__": [
        "logging.Logger.__init__"
    ],
    "textual.geometry.Region.__contains__": [
        "textual.geometry.Region.contains_region",
        "<builtin>.isinstance"
    ],
    "rich.table.Table.__init__": [
        "<builtin>.isinstance",
        "<builtin>.list",
        "<builtin>.len",
        "rich.padding.unpack"
    ],
    "fnmatch.translate": [
        "re.escape",
        "re.sub",
        "<str>.find",
        "<list>.append",
        "<builtin>.len"
    ],
    "rich.console.RichCast": [
        "typing.inner"
    ],
    "typing._proto_hook": [
        "typing._is_callable_members_only",
        "typing._get_protocol_attrs"
    ],
    "urllib3.packages.six._SixMetaPathImporter.find_spec": [],
    "sre_compile._compile": [
        "<map>.get",
        "sre_compile._combine_flags",
        "sre_parse.SubPattern.__getitem__",
        "sre_compile._compile",
        "sre_parse.SubPattern.getwidth",
        "sre_compile._simple",
        "sre_compile._optimize_charset",
        "sre_compile._compile_charset"
    ],
    "commonmark.inlines.InlineParser.parseBang": [
        "commonmark.inlines.text",
        "commonmark.inlines.InlineParser.peek",
        "commonmark.node.Node.append_child",
        "commonmark.inlines.InlineParser.addBracket"
    ],
    "urllib.parse.quote_from_bytes": [
        "<builtin>.bytes",
        "<str>.decode",
        "<builtin>.isinstance",
        "<str>.rstrip",
        "<builtin>.TypeError",
        "urllib.parse.Quoter.__init__"
    ],
    "graphics": [],
    "ride.RideLexer": [
        "pygments.lexer.words.__init__"
    ],
    "textual.widget.Widget.refresh": [
        "textual.message_pump.MessagePump.post_message_no_wait",
        "textual.widget.Widget.clear_render_cache"
    ],
    "docutils.statemachine.StringList.get_indented": [
        "docutils.statemachine.ViewList.__len__",
        "<builtin>.min",
        "<builtin>.len",
        "docutils.statemachine.ViewList.__getitem__"
    ],
    "rich.markdown.TextElement.on_enter": [
        "rich.markdown.MarkdownContext.enter_style",
        "rich.text.Text.__init__"
    ],
    "rich.cells.set_cell_size": [
        "rich.cells.cell_len",
        "<builtin>.len"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._make_request": [
        "timeout.Timeout.start_connect",
        "http.client.HTTPConnection.getresponse",
        "response.assert_header_parsing",
        "timeout.read_timeout",
        "logging.Logger.debug",
        "timeout.connect_timeout",
        "urllib3.connection.HTTPConnection.request",
        "<builtin>.getattr",
        "urllib3.connectionpool.HTTPConnectionPool._get_timeout",
        "urllib3.connectionpool.HTTPSConnectionPool._validate_conn"
    ],
    "weakref.WeakValueDictionary.__init__": [
        "<builtin>.set",
        "weakref.WeakValueDictionary.update"
    ],
    "urllib.parse": [
        "urllib.parse.SplitResult",
        "urllib.parse._ResultMixinStr",
        "<builtin>.bytes",
        "urllib.parse._ResultMixinBytes",
        "urllib.parse.SplitResultBytes",
        "urllib.parse._fix_result_transcoding",
        "urllib.parse.DefragResult",
        "urllib.parse._NetlocResultMixinBytes",
        "urllib.parse.DefragResultBytes",
        "re.compile",
        "urllib.parse.ParseResult",
        "<builtin>.frozenset",
        "collections.namedtuple",
        "urllib.parse.ParseResultBytes",
        "urllib.parse.Quoter",
        "urllib.parse._NetlocResultMixinStr",
        "urllib.parse._NetlocResultMixinBase"
    ],
    "requests.models.PreparedRequest.prepare_content_length": [
        "requests.utils.super_len"
    ],
    "graphics.HLSLShaderLexer": [
        "pygments.lexer.words.__init__"
    ],
    "logging.Logger.handle": [
        "logging.Filterer.filter",
        "logging.Logger.callHandlers"
    ],
    "rich.segment.Segment.get_line_length": [
        "<builtin>.sum",
        "cells.cell_len"
    ],
    "email.message.Message.items": [],
    "click._compat._AtomicFile": [
        "<builtin>.property"
    ],
    "importlib.resources": [
        "importlib.abc",
        "typing.inner",
        "contextlib.contextmanager",
        "pathlib"
    ],
    "ipaddress.IPv6Network": [
        "<builtin>.property"
    ],
    "click.core.Group": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner",
        "typing.overload"
    ],
    "http.cookiejar.deepvalues": [
        "http.cookiejar.vals_sorted_by_key"
    ],
    "rich.table.Table.get_row_style": [
        "rich.style.Style.null",
        "<builtin>.len"
    ],
    "typing.BinaryIO": [
        "typing.inner",
        "abc.abstractmethod"
    ],
    "re.sub": [
        "re._compile",
        "re._subx",
        "<str>.sub"
    ],
    "ntpath.splitdrive": [
        "<str>.replace",
        "<map>.replace",
        "<str>.find",
        "<builtin>.isinstance",
        "<builtin>.len",
        "os._fspath"
    ],
    "installers.DebianControlLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "commonmark.render.rst": [
        "commonmark.render.rst.ReStructuredTextRenderer"
    ],
    "rich.segment.Segment.split_cells": [
        "cells._is_single_cell_widths",
        "<builtin>.len",
        "rich.segment.Segment._split_cells"
    ],
    "difflib.SequenceMatcher.real_quick_ratio": [
        "difflib._calculate_ratio",
        "<builtin>.min",
        "<builtin>.len"
    ],
    "emil.message.Message.get": [
        "email._policybase.Compat32.header_fetch_parse"
    ],
    "textual.message_pump.MessagePump.log": [
        "textual.message_pump.app",
        "textual.app.App.log"
    ],
    "threading.Thread._stop": [
        "threading.daemon"
    ],
    "pygments.formatter": [
        "pygments.formatter.Formatter"
    ],
    "configs.TOMLLexer": [
        "pygments.lexer.bygroups"
    ],
    "requests.sessions.SessionRedirectMixin.resolve_redirects": [
        "requests.utils.requote_uri",
        "requests.models.Response.content",
        "<map>.startswith",
        "urllib.parse.urljoin",
        "requests.models.Response.close",
        "requests.sessions.SessionRedirectMixin.get_redirect_target",
        "requests.sessions.SessionRedirectMixin.rebuild_method",
        "requests.utils.rewind_body",
        "requests.cookies.extract_cookies_to_jar",
        "requests.sessions.SessionRedirectMixin.rebuild_proxies",
        "requests.sessions.SessionRedirectMixin.rebuild_auth",
        "_collections_abc.MutableMapping.pop",
        "requests._internal_utils.to_native_string",
        "requests.sessions.Session.send",
        "_internal_utils.to_native_string",
        "requests.cookies.merge_cookies",
        "<builtin>.len",
        "<str>.startswith",
        "requests.models.PreparedRequest.prepare_cookies",
        "parse.ParseResult.geturl",
        "<list>.append",
        "urllib.parse.urlparse",
        "requests.models.PreparedRequest.copy"
    ],
    "dataclasses._recursive_repr": [
        "functools.update_wrapper",
        "<builtin>.set",
        "functools.wraps"
    ],
    "http.client.HTTPConnection.close": [
        "socket.socket.close",
        "http.client.HTTPResponse.close"
    ],
    "requests.sessions.merge_hooks": [
        "requests.sessions.merge_setting"
    ],
    "click._compat._stream_is_misconfigured": [
        "click._compat.is_ascii_encoding",
        "<builtin>.getattr"
    ],
    "rich.style.Style.parse": [
        "<map>.get",
        "<builtin>.iter",
        "<str>.strip",
        "rich.style.Style.null",
        "rich.color.Color.parse",
        "rich.style.Style.__init__",
        "<builtin>.next"
    ],
    "rich.terminal_theme.TerminalTheme.__init__": [
        "palette.Palette.__init__"
    ],
    "rich.syntax.Syntax.highlight": [
        "rich.text.Text.append_tokens",
        "rich.syntax.lexer",
        "rich.text.Text.__init__",
        "rich.text.Text.append",
        "rich.style.Style.transparent_background",
        "rich.syntax.Syntax._get_base_style",
        "lexer.Lexer.get_tokens"
    ],
    "rich.text.Text.__contains__": [
        "<builtin>.isinstance",
        "rich.text.Text.plain"
    ],
    "requests.sessions.Session.request": [
        "<map>.update",
        "requests.sessions.Session.merge_environment_settings",
        "requests.sessions.Session.send",
        "requests.sessions.Session.prepare_request",
        "requests.models.Request.__init__",
        "<str>.upper"
    ],
    "css.CssLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "stata.StataLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "rich_cli.markdown": [
        "rich_cli.markdown.CodeBlock"
    ],
    "sre_parse._parse_sub": [
        "sre_parse.SubPattern.__delitem__",
        "sre_parse.SubPattern.__init__",
        "sre_parse._uniq",
        "sre_parse.SubPattern.__getitem__",
        "sre_parse.Tokenizer.match",
        "<list>.append",
        "sre_parse._parse",
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.append",
        "sre_parse.Tokenizer.tell",
        "<list>.extend",
        "<builtin>.len"
    ],
    "ntpath.normcase": [
        "<str>.replace",
        "<str>.lower",
        "<builtin>.isinstance",
        "os._fspath"
    ],
    "textual.layouts.dock": [
        "textual.layouts.dock.Dock",
        "textual._layout_resolve",
        "textual.layouts.dock.DockOptions",
        "textual.layout",
        "textual.layouts.dock.DockLayout"
    ],
    "requests.utils.resolve_proxies": [
        "<map>.get",
        "requests.utils.should_bypass_proxies",
        "requests.utils.get_environ_proxies",
        "<map>.setdefault",
        "urllib.parse.urlparse",
        "<map>.copy"
    ],
    "rdf.SparqlLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "oberon.ComponentPascalLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__"
    ],
    "textual.widgets._static.Static.__init__": [
        "textual.widget.Widget.__init__",
        "<builtin>.super"
    ],
    "threading.Thread.__init__": [
        "_weakrefset.WeakSet.add",
        "threading.daemon",
        "threading.Event.__init__",
        "<builtin>.str",
        "threading._make_invoke_excepthook",
        "threading._newname",
        "threading.current_thread"
    ],
    "http.cookiejar.reach": [
        "http.cookiejar.is_HDN"
    ],
    "rich.measure.Measurement.normalize": [
        "<builtin>.max",
        "<builtin>.min"
    ],
    "commonmark.inlines.InlineParser.parseString": [
        "<map>.get",
        "commonmark.inlines.InlineParser.match",
        "re.sub",
        "commonmark.inlines.text",
        "commonmark.node.Node.append_child"
    ],
    "textual.widgets._placeholder": [
        "textual.widgets._placeholder.Placeholder",
        "textual.widget.Widget.__init_subclass__",
        "logging.getLogger"
    ],
    "http.cookiejar.CookieJar.clear_expired_cookies": [
        "http.cookiejar.CookieJar.clear",
        "http.cookiejar.deepvalues"
    ],
    "abc": [
        "abc.abstractproperty",
        "abc.abstractclassmethod",
        "_py_abc",
        "abc.ABC",
        "abc.abstractstaticmethod"
    ],
    "functools._make_key": [
        "functools._HashedSeq.__init__",
        "<builtin>.type",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "graphics.PostScriptLexer": [
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "ntpath._get_bothseps": [
        "<builtin>.isinstance"
    ],
    "threading.Thread._wait_for_tstate_lock": [
        "threading.Thread._stop"
    ],
    "logging._StderrHandler": [
        "<builtin>.property"
    ],
    "signal._int_to_enum": [
        "enum.EnumMeta.__call__"
    ],
    "gettext.NullTranslations.ngettext": [],
    "rich.table.Table._calculate_column_widths": [
        "<builtin>.iter",
        "rich.table.Table._extra_width",
        "<builtin>.min",
        "<builtin>.zip",
        "<builtin>.sum",
        "<builtin>.any",
        "<builtin>.enumerate",
        "<builtin>.len",
        "rich.table.Table.expand",
        "<builtin>.next"
    ],
    "click._compat.get_text_stdout": [
        "click._compat._get_windows_console_stream",
        "click._compat._force_correct_text_writer"
    ],
    "rich.highlighter.JSONHighlighter": [
        "rich.highlighter._combine_regex"
    ],
    "requests.api.request": [
        "requests.sessions.Session.__init__",
        "requests.sessions.Session.request"
    ],
    "rich.markup.escape": [
        "typing.inner"
    ],
    "modeling.JagsLexer": [
        "pygments.lexer.bygroups"
    ],
    "sre_compile._code": [
        "sre_compile._compile",
        "sre_compile._compile_info",
        "<list>.append"
    ],
    "docutils.statemachine.State.__init__": [
        "docutils.statemachine.StateWS.add_initial_transitions"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._put_conn": [
        "queue.Queue.put"
    ],
    "logging.Logger.isEnabledFor": [
        "logging._releaseLock",
        "logging.disable",
        "logging._acquireLock",
        "logging.Logger.getEffectiveLevel"
    ],
    "socket.type": [
        "socket._intenum_converter"
    ],
    "optparse.OptionGroup._create_option_list": [
        "optparse.OptionContainer._share_option_mappings"
    ],
    "traceback.extract_stack": [
        "traceback.StackSummary.extract",
        "traceback.walk_stack"
    ],
    "configparser.SectionProxy.__init__": [
        "<builtin>.setattr",
        "configparser.ConverterMapping.__iter__",
        "configparser.converters",
        "<builtin>.getattr"
    ],
    "functools": [
        "<builtin>.object",
        "reprlib",
        "functools.partial",
        "functools.singledispatchmethod",
        "functools._HashedSeq",
        "functools.cached_property",
        "functools.partialmethod"
    ],
    "requests.models.PreparedRequest.prepare": [
        "requests.models.PreparedRequest.prepare_method",
        "requests.models.PreparedRequest.prepare_cookies",
        "requests.models.PreparedRequest.prepare_url",
        "requests.models.PreparedRequest.prepare_hooks",
        "requests.models.PreparedRequest.prepare_auth",
        "requests.models.PreparedRequest.prepare_headers",
        "requests.models.PreparedRequest.prepare_body"
    ],
    "requests.status_codes._init": [
        "<builtin>.setattr",
        "<map>.items",
        "<builtin>.sorted"
    ],
    "json": [
        "decoder.JSONDecoder",
        "encoder.JSONEncoder"
    ],
    "http.cookiejar.CookieJar": [
        "re.compile"
    ],
    "rich._windows.get_windows_console_features": [
        "<builtin>.bool"
    ],
    "rich.text.Text.render": [
        "<builtin>.list",
        "rich.console.Console.get_style",
        "rich.style.Style.null",
        "<builtin>.zip",
        "<builtin>.enumerate",
        "text.get_current_style",
        "rich.text.Text.plain"
    ],
    "dataclasses.wrap": [
        "dataclasses._process_class"
    ],
    "rich._log_render": [
        "_log_render.LogRender",
        "rich._log_render.LogRender"
    ],
    "docutils.utils.Reporter.system_message": [
        "<builtin>.max",
        "<builtin>.str",
        "docutils.nodes.system_message.__init__",
        "docutils.utils.Reporter.notify_observers",
        "<builtin>.isinstance",
        "docutils.statemachine.StateMachine.get_source_and_line"
    ],
    "cryptography.hazmat.bindings.openssl.binding": [
        "cryptography",
        "dataclasses.dataclass",
        "cryptography.hazmat.bindings.openssl.binding._OpenSSLError",
        "cryptography.hazmat.bindings.openssl.binding.Binding",
        "cryptography.hazmat.bindings.openssl.binding.Binding.init_static_locks",
        "cryptography.hazmat.bindings.openssl.binding._verify_openssl_version",
        "cryptography.hazmat.bindings.openssl.binding._verify_package_version",
        "cryptography.hazmat.bindings.openssl._conditional"
    ],
    "requests.hooks": [],
    "rich.console.align_append": [
        "typing.cast",
        "align.Align.__init__"
    ],
    "rich.traceback.Trace": [
        "typing.inner"
    ],
    "signal.signal": [
        "signal._int_to_enum",
        "signal._enum_to_int"
    ],
    "rich.panel.Panel": [
        "typing.inner",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "textual.message_pump.MessagePump.close_messages": [
        "_weakrefset.WeakSet.__iter__",
        "queues.Queue.put",
        "_weakrefset.WeakSet.clear"
    ],
    "dataclasses._is_type": [
        "dataclasses._is_classvar",
        "dataclasses._is_initvar"
    ],
    "unix_events": [
        "unix_events.MultiLoopChildWatcher",
        "unix_events._UnixSubprocessTransport",
        "unix_events._UnixWritePipeTransport",
        "unix_events._UnixReadPipeTransport",
        "unix_events.AbstractChildWatcher",
        "unix_events.ThreadedChildWatcher",
        "unix_events._UnixSelectorEventLoop",
        "unix_events.SafeChildWatcher",
        "unix_events._UnixDefaultEventLoopPolicy",
        "unix_events.FastChildWatcher",
        "unix_events.BaseChildWatcher"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool._validate_conn": [
        "<builtin>.super",
        "urllib3.connection.HTTPSConnection.connect",
        "urllib3.connectionpool.HTTPConnectionPool._validate_conn",
        "<builtin>.getattr"
    ],
    "logging.Logger.getEffectiveLevel": [],
    "functools.partialmethod": [
        "<builtin>.property"
    ],
    "resource": [
        "pygments.lexer.__new__",
        "resource.ResourceLexer"
    ],
    "configs.do_indent": [
        "pygments.lexer.default.__init__",
        "configs._rx_indent"
    ],
    "textual.layout_map.LayoutMap.add_widget": [
        "textual.geometry.Region.__add__",
        "textual.geometry.Region.__sub__",
        "textual.geometry.Region.intersection",
        "textual.geometry.size",
        "textual.geometry.region",
        "textual.view.View.scroll",
        "<builtin>.isinstance",
        "textual.widget.Widget.layout_offset",
        "textual.geometry.origin",
        "textual.geometry.Region.union",
        "textual.layout_map.LayoutMap.add_widget",
        "textual.view.View.get_arrangement"
    ],
    "urllib3.response.HTTPResponse._flush_decoder": [
        "response.GzipDecoder.decompress",
        "response.GzipDecoder.__getattr__"
    ],
    "make": [
        "make.CMakeLexer",
        "make.BaseMakefileLexer",
        "pygments.lexer.__new__",
        "make.MakefileLexer"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool._prepare_conn": [
        "<builtin>.isinstance",
        "urllib3.connection.HTTPSConnection.set_cert"
    ],
    "rich.highlighter.Highlighter.__call__": [
        "rich.highlighter.RegexHighlighter.highlight",
        "rich.highlighter.JSONHighlighter.highlight",
        "rich.text.Text.__init__",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "rich.text.Text.copy"
    ],
    "charset_normalizer.cd": [
        "charset_normalizer.md",
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "charset_normalizer.assets",
        "charset_normalizer.constant",
        "functools.lru_cache.decorating_function",
        "functools.lru_cache"
    ],
    "unistring.combine": [],
    "hooks.default_hooks": [],
    "re.filter": [
        "sre_parse.expand_template"
    ],
    "_osx_support._save_modified_value": [],
    "pathlib._Flavour.parse_parts": [
        "<builtin>.reversed",
        "pathlib._PosixFlavour.splitroot"
    ],
    "ssl.SSLSocket.recv_into": [
        "ssl.SSLSocket._checkClosed",
        "<builtin>.super",
        "<builtin>.ValueError",
        "ssl.SSLSocket.read",
        "<builtin>.len"
    ],
    "re.split": [
        "re._compile",
        "<str>.split"
    ],
    "tree.Tree": [
        "typing.inner"
    ],
    "rich.table.Row": [
        "typing.inner"
    ],
    "textual.geometry.Region.contains_region": [
        "textual.geometry.corners"
    ],
    "commonmark.inlines.InlineParser.scanDelims": [
        "re.search",
        "commonmark.inlines.InlineParser.peek"
    ],
    "click.core.Option": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner",
        "typing.overload"
    ],
    "hdl.SystemVerilogLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "ipaddress._BaseV4": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "logging.Logger.__init__": [
        "logging._checkLevel",
        "logging.Filterer.__init__"
    ],
    "pathlib._parse_args": [
        "pathlib._Flavour.parse_parts"
    ],
    "smalltalk": [
        "pygments.lexer.__new__",
        "smalltalk.NewspeakLexer",
        "smalltalk.SmalltalkLexer"
    ],
    "pygments.lexers.get_lexer_for_mimetype": [
        "pygments.lexers._load_lexers"
    ],
    "urllib3.connection.HTTPSConnection.connect": [
        "ssl_.create_urllib3_context",
        "ssl.SSLSocket.version",
        "urllib3.connection._match_hostname",
        "ssl_.resolve_ssl_version",
        "<builtin>.hasattr",
        "urllib3.connection.HTTPConnection._new_conn",
        "ssl_.resolve_cert_reqs",
        "ssl.SSLSocket.getpeercert",
        "urllib3.connection.host",
        "ssl_.ssl_wrap_socket",
        "<builtin>.getattr",
        "urllib3.connection.HTTPConnection._is_using_tunnel",
        "ssl.verify_mode"
    ],
    "gettext.NullTranslations._parse": [],
    "ipaddress._IPAddressBase._split_addr_prefix": [
        "ipaddress._split_optional_netmask",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "functools._HashedSeq.__init__": [
        "<builtin>.hash"
    ],
    "comal": [
        "pygments.lexer.__new__",
        "comal.Comal80Lexer"
    ],
    "functools.total_ordering": [
        "<builtin>.max",
        "<builtin>.setattr",
        "<builtin>.ValueError",
        "<builtin>.getattr"
    ],
    "slash.SlashLanguageLexer": [
        "slash.move_state",
        "pygments.lexer.bygroups"
    ],
    "macaulay2.Macaulay2Lexer": [
        "pygments.lexer.words.__init__"
    ],
    "ssl.Purpose": [],
    "rich.panel.Panel.__init__": [],
    "http.cookiejar.request_host": [
        "requests.cookies.MockRequest.get_full_url",
        "urllib.parse.urlparse",
        "<str>.sub",
        "<str>.lower"
    ],
    "sre_parse.Tokenizer.get": [
        "sre_parse.Tokenizer.__next"
    ],
    "typing.SupportsBytes": [
        "abc.abstractmethod"
    ],
    "typing._GenericAlias.__hash__": [
        "typing._GenericAlias.__hash__",
        "typing.ForwardRef.__hash__",
        "<builtin>.hash",
        "<builtin>.frozenset",
        "typing._SpecialForm.__hash__"
    ],
    "textual.widgets._header": [
        "textual.widgets._header.Header",
        "textual.widget.Widget.__init_subclass__",
        "logging.getLogger"
    ],
    "requests._check_cryptography": [
        "<builtin>.map",
        "warnings.warn",
        "<str>.split",
        "<builtin>.list"
    ],
    "inspect.isfunction": [
        "<builtin>.isinstance"
    ],
    "rich.markdown.TextElement.on_text": [
        "rich.markdown.current_style",
        "rich.text.Text.append",
        "<builtin>.isinstance"
    ],
    "pointless": [
        "pointless.PointlessLexer"
    ],
    "hdl.VhdlLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__",
        "pygments.lexer.using"
    ],
    "charset_normalizer.constant": [
        "<builtin>.range",
        "constant.<lambda>",
        "typing.inner",
        "<builtin>.list",
        "<builtin>.filter",
        "re.compile",
        "<builtin>.sorted",
        "<builtin>.set",
        "<map>.values",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "requests.utils.get_netrc_auth": [
        "posixpath.expanduser",
        "genericpath.exists",
        "ntpath.expanduser",
        "netrc.netrc.__init__",
        "<builtin>.isinstance",
        "urllib.parse.urlparse",
        "netrc.netrc.authenticators",
        "netrc"
    ],
    "rich.rule": [
        "rich.rule.Rule"
    ],
    "docutils.statemachine.StateMachine.add_state": [
        "states.RSTState.__init__"
    ],
    "rich.console.is_terminal": [
        "rich.console.file"
    ],
    "docutils.utils.Reporter.error": [
        "docutils.utils.Reporter.system_message"
    ],
    "http.cookiejar.CookieJar.make_cookies": [
        "http.cookiejar.CookieJar._cookies_from_attrs_set",
        "http.cookiejar.parse_ns_headers",
        "http.cookiejar.CookieJar._process_rfc2109_cookies",
        "<builtin>.filter",
        "email.message.Message.get_all",
        "http.cookies.MockResponse.info",
        "http.cookiejar.split_header_words",
        "<list>.extend",
        "<builtin>.int"
    ],
    "rich.measure.Measurement.with_maximum": [
        "<builtin>.min"
    ],
    "configparser.BasicInterpolation._interpolate_some": [
        "configparser.RawConfigParser.get"
    ],
    "html.PugLexer": [
        "css._starts_block",
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__",
        "pygments.lexer.using"
    ],
    "click.parser.ParsingState": [
        "typing.inner"
    ],
    "rich.scope": [
        "rich.scope.test",
        "typing.inner"
    ],
    "rich.table.Table": [
        "typing.inner",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "re.search": [
        "re._compile",
        "<str>.search"
    ],
    "requests.adapters.HTTPAdapter.build_response": [
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.cookies.extract_cookies_to_jar",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "requests.models.Response.__init__",
        "utils.get_encoding_from_headers"
    ],
    "logging": [
        "weakref.WeakValueDictionary.__init__",
        "logging.PercentStyle",
        "logging.StreamHandler",
        "ntpath.normcase",
        "<builtin>.hasattr",
        "threading.RLock",
        "logging.RootLogger.__init__",
        "logging.Logger",
        "logging.BufferingFormatter",
        "logging.PlaceHolder",
        "string",
        "logging.LoggerAdapter",
        "logging.Filterer",
        "logging.FileHandler",
        "logging.Filter",
        "logging.StrFormatStyle",
        "posixpath.normcase",
        "_weakrefset.WeakSet.__init__",
        "logging.RootLogger",
        "logging.Formatter",
        "logging.Manager",
        "logging.Handler",
        "logging.LogRecord",
        "logging.StringTemplateStyle",
        "logging.NullHandler",
        "logging._StderrHandler",
        "logging.Formatter.__init__",
        "logging._StderrHandler.__init__",
        "logging.Manager.__init__"
    ],
    "docutils.statemachine.ViewList.__getitem__": [
        "docutils.statemachine.ViewList.__init__",
        "<builtin>.isinstance"
    ],
    "typing.__getitem_inner__": [
        "typing._type_check",
        "typing._GenericAlias.copy_with",
        "typing._SpecialForm.__eq__"
    ],
    "textual._animator.Animator.stop": [
        "textual._timer.Timer.stop"
    ],
    "rich.text.Text.from_ansi": [
        "rich.ansi.AnsiDecoder.__init__",
        "rich.text.Text.__init__",
        "rich.text.Text.join"
    ],
    "importlib.metadata._from_config": [
        "configparser.RawConfigParser.sections"
    ],
    "textual.geometry.unpack": [
        "typing.cast",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "robotframework.RowSplitter": [
        "re.compile"
    ],
    "warnings.filterwarnings": [
        "re.compile",
        "<builtin>.isinstance",
        "warnings._add_filter",
        "<builtin>.issubclass"
    ],
    "rich.style.StyleStack.push": [
        "rich.style.Style.__add__"
    ],
    "random": [
        "random.Random.__init__",
        "<builtin>.hasattr",
        "random.Random",
        "random.__init_subclass__",
        "random._test",
        "random.SystemRandom"
    ],
    "requests.structures": [
        "requests.structures.LookupDict",
        "requests.structures.CaseInsensitiveDict"
    ],
    "rich.style.Style.null": [],
    "sre_parse.SubPattern.__setitem__": [
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__getitem__"
    ],
    "requests.cookies.MockRequest.get_host": [
        "urllib.parse.urlparse"
    ],
    "requests.utils": [
        "requests.cookies",
        "contextlib.contextmanager",
        "requests.__version__",
        "requests._internal_utils",
        "<str>.encode",
        "zipfile",
        "<builtin>.frozenset",
        "certifi.core.where",
        "requests.structures",
        "requests.certs"
    ],
    "datetime.__new__": [
        "datetime._check_time_fields",
        "datetime._check_tzinfo_arg",
        "datetime._check_date_fields"
    ],
    "posixpath.expanduser": [
        "posixpath._get_sep",
        "<builtin>.str",
        "_collections_abc.Mapping.__contains__",
        "<str>.find",
        "<builtin>.isinstance",
        "<str>.rstrip",
        "<map>.startswith",
        "<builtin>.len",
        "os._Environ.__getitem__",
        "<str>.startswith"
    ],
    "requests.cookies.MockRequest.get_new_headers": [],
    "urllib3.filepost.iter_field_objects": [
        "<builtin>.iter",
        "<builtin>.isinstance",
        "urllib3.fields.RequestField.from_tuples",
        "urllib3.packages.six.iteritems"
    ],
    "timeout.Timeout.__init__": [
        "timeout._validate_timeout"
    ],
    "typing.SupportsFloat": [
        "abc.abstractmethod"
    ],
    "requests.sessions.Session.mount": [
        "<builtin>.len"
    ],
    "sre_compile._get_literal_prefix": [
        "sre_compile._get_iscased",
        "sre_compile._get_literal_prefix",
        "<list>.extend",
        "<builtin>.len",
        "sre_compile._combine_flags"
    ],
    "inspect.Signature": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "_scroll_view.ScrollView.home": [],
    "rich.console.ConsoleOptions.update_height": [
        "rich.console.ConsoleOptions.copy"
    ],
    "ipaddress.IPv4Network.__init__": [
        "ipaddress._split_addr_prefix",
        "ipaddress._make_netmask",
        "ipaddress._IPAddressBase._split_addr_prefix",
        "ipaddress._BaseV4._make_netmask",
        "ipaddress.IPv4Address.__init__",
        "<builtin>.ValueError",
        "ipaddress._BaseAddress.__int__",
        "<builtin>.int"
    ],
    "textual.app.App.push_view": [
        "textual.app.App.register"
    ],
    "ipaddress.IPv6Address": [
        "functools.lru_cache",
        "<builtin>.property",
        "functools._lru_cache_wrapper.wrapper",
        "functools.lru_cache.decorating_function"
    ],
    "asyncio.runners.run": [
        "<builtin>.RuntimeError",
        "asyncio.events._get_running_loop",
        "asyncio.coroutines.iscoroutine",
        "<builtin>.ValueError",
        "asyncio.events.set_event_loop",
        "asyncio.events.new_event_loop"
    ],
    "rich.markdown.CodeBlock": [
        "<builtin>.classmethod"
    ],
    "typing.SupportsInt": [
        "abc.abstractmethod"
    ],
    "color.Color.get_truecolor": [
        "palette.Palette.__getitem__"
    ],
    "rich.emoji": [
        "typing.inner",
        "rich._emoji_codes",
        "rich.emoji.Emoji",
        "<builtin>.sorted",
        "<builtin>.len",
        "rich.emoji.NoEmoji",
        "rich._emoji_replace"
    ],
    "posixpath.join": [
        "posixpath._get_sep",
        "<map>.endswith",
        "<str>.endswith",
        "<builtin>.map"
    ],
    "textual.app.App.shutdown": [
        "textual.message_pump.MessagePump.close_messages",
        "linux_driver.LinuxDriver.disable_input"
    ],
    "docutils.nodes": [
        "docutils.nodes.classifier",
        "docutils.nodes.substitution_definition",
        "docutils.nodes.tbody",
        "docutils.nodes.Invisible",
        "docutils.nodes.attention",
        "docutils.nodes.definition_list",
        "docutils.nodes.line_block",
        "docutils.nodes.target",
        "docutils.nodes.field",
        "docutils.nodes.caution",
        "docutils.nodes.strong",
        "docutils.nodes.field_body",
        "docutils.nodes.emphasis",
        "docutils.nodes.NodeFound",
        "docutils.nodes.row",
        "docutils.nodes.footnote",
        "docutils.nodes.citation_reference",
        "<str>.split",
        "docutils.nodes.revision",
        "docutils.nodes.block_quote",
        "docutils.nodes.Labeled",
        "docutils.nodes.GenericNodeVisitor",
        "docutils.nodes.line",
        "docutils.nodes.term",
        "docutils.nodes.paragraph",
        "docutils.nodes.TreeCopyVisitor",
        "docutils.nodes.option_list_item",
        "docutils.nodes.PreBibliographic",
        "docutils.nodes.SkipSiblings",
        "docutils.nodes.meta",
        "docutils.nodes.pending",
        "docutils.nodes.SkipChildren",
        "docutils.nodes.superscript",
        "docutils.nodes.math_block",
        "docutils.nodes.system_message",
        "docutils.nodes.definition_list_item",
        "docutils.nodes.SparseNodeVisitor",
        "docutils.nodes.list_item",
        "docutils.nodes.hint",
        "docutils.nodes.Referential",
        "docutils.nodes.entry",
        "docutils.nodes.BackLinkable",
        "docutils.nodes.SkipDeparture",
        "docutils.nodes.footnote_reference",
        "docutils.nodes.rubric",
        "docutils.nodes.error",
        "docutils.nodes.authors",
        "docutils.nodes.header",
        "docutils.nodes.literal",
        "docutils.nodes.definition",
        "docutils.nodes.footer",
        "docutils.nodes.container",
        "docutils.nodes.reference",
        "re.compile",
        "docutils.nodes.section",
        "docutils.nodes.tip",
        "docutils.nodes.option",
        "docutils.nodes.decoration",
        "docutils.nodes.document",
        "docutils.nodes.note",
        "docutils.nodes.TextElement",
        "docutils.nodes.comment",
        "docutils.nodes.StopTraversal",
        "docutils.nodes.Node",
        "docutils.nodes.sidebar",
        "docutils.nodes.image",
        "docutils.nodes.Root",
        "docutils.nodes.enumerated_list",
        "docutils.nodes.description",
        "docutils.nodes.version",
        "docutils.nodes.table",
        "docutils.nodes.docinfo",
        "docutils.nodes.generated",
        "docutils.nodes.subtitle",
        "docutils.nodes.Decorative",
        "docutils.nodes.substitution_reference",
        "docutils.nodes.label",
        "docutils.nodes.Part",
        "docutils.nodes.important",
        "docutils.nodes.Admonition",
        "docutils.nodes.option_argument",
        "docutils.nodes.author",
        "docutils.nodes.Body",
        "docutils.nodes.raw",
        "docutils.nodes.citation",
        "docutils.nodes.status",
        "docutils.nodes.subscript",
        "docutils.nodes.Bibliographic",
        "docutils.nodes.Special",
        "docutils.nodes.abbreviation",
        "docutils.nodes.Structural",
        "docutils.nodes.address",
        "docutils.nodes.acronym",
        "docutils.nodes.organization",
        "docutils.nodes.option_group",
        "docutils.nodes.math",
        "docutils.nodes.General",
        "docutils.nodes.reprunicode",
        "docutils.nodes.figure",
        "docutils.nodes.contact",
        "docutils.nodes.TreePruningException",
        "docutils.nodes._add_node_class_names",
        "docutils.nodes.date",
        "docutils.nodes.warning",
        "docutils.nodes.colspec",
        "docutils.nodes.inline",
        "docutils.nodes.transition",
        "docutils.nodes.SkipNode",
        "docutils.nodes.admonition",
        "docutils.nodes.option_list",
        "docutils.nodes.field_list",
        "docutils.nodes.title_reference",
        "docutils.nodes.thead",
        "docutils.nodes.topic",
        "docutils.nodes.option_string",
        "docutils.nodes.Sequential",
        "docutils.nodes.legend",
        "docutils.nodes.NodeVisitor",
        "docutils.nodes.danger",
        "docutils.nodes.Resolvable",
        "docutils.nodes.attribution",
        "docutils.nodes.problematic",
        "docutils.nodes.bullet_list",
        "docutils.nodes.doctest_block",
        "docutils.nodes.Targetable",
        "docutils.nodes.FixedTextElement",
        "docutils.nodes.Titular",
        "docutils.nodes.Element",
        "docutils.nodes.literal_block",
        "docutils.nodes.copyright",
        "docutils.nodes.Text",
        "docutils.nodes.caption",
        "docutils.nodes.Inline",
        "docutils.nodes.compound",
        "docutils.nodes.field_name",
        "docutils.nodes.title",
        "docutils.nodes.tgroup"
    ],
    "rich._stack.Stack": [
        "<builtin>.property"
    ],
    "rich.markdown.current_style": [
        "rich.style.Style.current"
    ],
    "inspect._signature_from_callable.<lambda1>": [
        "<builtin>.hasattr"
    ],
    "rich.themes": [
        "rich.theme",
        "rich.theme.Theme.__init__",
        "rich.default_styles"
    ],
    "urllib3.packages.six": [
        "urllib3.packages.six.Iterator",
        "<builtin>.setattr",
        "<builtin>.getattr",
        "urllib3.packages.six.Module_six_moves_urllib_error",
        "<builtin>.globals",
        "<builtin>.int",
        "urllib3.packages.six._MovedItems",
        "operator.attrgetter.__init__",
        "urllib3.packages.six._LazyModule.__init__",
        "urllib3.packages.six.MovedAttribute",
        "urllib3.packages.six._LazyModule",
        "urllib3.packages.six.MovedModule",
        "urllib3.packages.six.Module_six_moves_urllib_response",
        "urllib3.packages.six._LazyDescr",
        "urllib3.packages.six.Module_six_moves_urllib_request",
        "urllib3.packages.six.Module_six_moves_urllib_parse",
        "urllib3.packages.six.MovedAttribute.__init__",
        "urllib3.packages.six._SixMetaPathImporter",
        "urllib3.packages.six._SixMetaPathImporter.__init__",
        "<builtin>.len",
        "urllib3.packages.six.Module_six_moves_urllib",
        "urllib3.packages.six._SixMetaPathImporter._add_module",
        "operator.itemgetter.__init__",
        "urllib3.packages.six.X",
        "<builtin>.type",
        "urllib3.packages.six._LazyDescr.__get__",
        "<builtin>.enumerate",
        "<builtin>.isinstance",
        "urllib3.packages.six._add_doc",
        "urllib3.packages.six.Module_six_moves_urllib_robotparser",
        "urllib3.packages.six.exec_",
        "urllib3.packages.six.MovedModule.__init__",
        "operator.methodcaller.__init__"
    ],
    "rich.tree": [
        "rich.table.Table.__init__",
        "rich.console.Console.print",
        "rich.panel.Panel.__init__",
        "rich.markdown.Markdown.__init__",
        "rich.syntax.Syntax.__init__",
        "rich.panel.Panel.fit",
        "rich.table.Table.add_row",
        "rich.tree.Tree",
        "rich.console.Group.__init__",
        "rich.tree.Tree.add",
        "rich.table.Table.add_column",
        "rich.tree.Tree.__init__",
        "rich.console.Console.__init__"
    ],
    "rich.table.Column": [
        "<builtin>.property",
        "typing.inner",
        "dataclasses.field"
    ],
    "platform": [
        "re.compile",
        "collections.namedtuple",
        "<builtin>.print"
    ],
    "email._policybase.Policy": [
        "abc.abstractmethod"
    ],
    "requests.models.Response.is_redirect": [
        "_collections_abc.Mapping.__contains__"
    ],
    "logging.Handler.handleError": [
        "posixpath.dirname",
        "traceback.print_stack",
        "traceback.print_exception",
        "ntpath.dirname"
    ],
    "docutils.statemachine.StateMachine.next_line": [
        "docutils.statemachine.StateMachine.notify_observers",
        "docutils.statemachine.ViewList.__getitem__"
    ],
    "email._parseaddr": [
        "email._parseaddr.AddrlistClass",
        "email._parseaddr.AddressList",
        "calendar"
    ],
    "ipaddress._IPAddressBase._prefix_from_prefix_string": [
        "<builtin>.int",
        "ipaddress._IPAddressBase._report_invalid_netmask"
    ],
    "csound.CsoundLexer": [
        "pygments.lexer.bygroups"
    ],
    "commonmark.inlines.text": [
        "commonmark.node.Node.__init__"
    ],
    "spice.SpiceLexer": [
        "token._TokenType.__getattr__",
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "textual.message_pump.MessagePump.on_timer": [
        "emil.message.Message.stop",
        "_callback.invoke",
        "emil.message.Message.prevent_default"
    ],
    "sre_parse.State.opengroup": [
        "sre_parse.groups"
    ],
    "rich.console.Console.get_style": [
        "rich.console.Console.get_style",
        "rich.style.Style.parse",
        "rich.style.link",
        "<builtin>.isinstance",
        "rich.console._theme_stack"
    ],
    "posixpath.split": [
        "posixpath._get_sep",
        "<str>.rfind",
        "<builtin>.len"
    ],
    "calendar.Calendar.__init__": [
        "calendar.Calendar.setfirstweekday"
    ],
    "rich.markup.render": [
        "rich.markup._parse",
        "rich._emoji_replace._emoji_replace",
        "rich.markup.render.pop_style",
        "<str>.match",
        "rich.text.Text.append",
        "<builtin>.str",
        "rich.text.Text.__init__",
        "<str>.groups",
        "rich.markup.Tag.__str__",
        "rich.markup.pop_style",
        "<builtin>.sorted",
        "<builtin>.isinstance",
        "rich.style.Style.normalize",
        "ast.literal_eval",
        "<builtin>.len"
    ],
    "rich._extension": [],
    "rich.text.Text.split": [
        "rich.containers.Lines.pop",
        "rich.text.Text.divide",
        "typing.inner",
        "rich.containers.Lines.__iter__",
        "rich.containers.Lines.__init__",
        "rich.text.Text.copy",
        "rich.text.Text.plain"
    ],
    "rich": [
        "posixpath.abspath",
        "rich._extension",
        "ntpath._abspath_fallback"
    ],
    "docutils.parsers.rst.Body": [
        "re.escape",
        "re.compile",
        "docutils.parsers.rst.Struct.__init__"
    ],
    "testing.TAPLexer": [
        "pygments.lexer.bygroups"
    ],
    "textual.widgets._placeholder.Placeholder": [
        "typing.__new__",
        "textual.reactive.Reactive.__init__"
    ],
    "gettext.translation": [
        "<map>.get",
        "gettext.find",
        "<builtin>.open",
        "<map>.setdefault",
        "<builtin>.FileNotFoundError"
    ],
    "re._compile_repl": [
        "sre_parse.parse_template"
    ],
    "rich.errors": [
        "rich.errors.MarkupError",
        "rich.errors.StyleSyntaxError",
        "rich.errors.NotRenderableError",
        "rich.errors.NoAltScreen",
        "rich.errors.MissingStyle",
        "rich.errors.StyleError",
        "rich.errors.StyleStackError",
        "rich.errors.LiveError",
        "rich.errors.ConsoleError"
    ],
    "pathlib.PurePath._make_child": [
        "pathlib._parse_args",
        "pathlib._Flavour.join_parsed_parts",
        "pathlib._from_parsed_parts"
    ],
    "rich.console.check_text": [
        "rich.text.Text.__init__",
        "rich.console.align_append",
        "rich.text.Text.join"
    ],
    "textual.views._window_view": [
        "textual.views._window_view.WindowView",
        "textual.message.Message.__init_subclass__",
        "textual.view.View.__init_subclass__",
        "textual.views._window_view.WindowChange"
    ],
    "docutils.utils.Reporter.__init__": [
        "io.ErrorOutput.__init__",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "html.ScamlLexer": [
        "css._starts_block",
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__",
        "pygments.lexer.using"
    ],
    "importlib.metadata.EntryPoint": [
        "re.compile",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "inspect._signature_from_callable": [
        "inspect._signature_is_builtin",
        "inspect._signature_bound_method",
        "<builtin>.type",
        "inspect.isfunction",
        "inspect._signature_from_function",
        "<builtin>.callable",
        "inspect._signature_get_user_defined_method",
        "<builtin>.TypeError",
        "inspect._signature_is_functionlike",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.tuple",
        "inspect._signature_from_callable",
        "inspect.unwrap"
    ],
    "timeout.Timeout.clone": [
        "timeout.Timeout.__init__"
    ],
    "logging.Logger.error": [
        "logging.Logger._log",
        "logging.Logger.isEnabledFor"
    ],
    "urllib3.connection.HTTPConnection._new_conn": [
        "util.connection.create_connection"
    ],
    "docutils.nodes.Element.astext": [],
    "pathlib._from_parsed_parts": [
        "pathlib.Path._init"
    ],
    "urllib3.util.url._encode_invalid_chars": [
        "<builtin>.hex",
        "<str>.subn",
        "<builtin>.range",
        "<builtin>.bytearray",
        "<builtin>.ord",
        "<str>.count",
        "packages.six.ensure_text",
        "<builtin>.len"
    ],
    "io": [
        "io.RawIOBase",
        "io.TextIOBase",
        "io.IOBase",
        "io.BufferedIOBase"
    ],
    "datetime._check_date_fields": [
        "datetime._days_in_month",
        "datetime._check_int_field",
        "<builtin>.ValueError"
    ],
    "sre_parse.SubPattern.getwidth": [
        "<builtin>.max",
        "<builtin>.min",
        "sre_parse.SubPattern.getwidth"
    ],
    "types.Tuple": [
        "typing.inner"
    ],
    "docutils.utils.column_width": [
        "<builtin>.sum",
        "docutils.utils.find_combining_chars",
        "<builtin>.len"
    ],
    "posixpath.abspath": [
        "posixpath.isabs",
        "<builtin>.isinstance",
        "posixpath.normpath",
        "posixpath.join"
    ],
    "http.cookiejar.DefaultCookiePolicy.set_ok_path": [
        "http.cookiejar.request_path"
    ],
    "rich.cells.cell_len": [
        "<builtin>.sum",
        "<builtin>.len",
        "rich.cells.cached_cell_len"
    ],
    "typing._GenericAlias.copy_with": [
        "typing._GenericAlias.__init__"
    ],
    "requests.utils.get_auth_from_url": [
        "urllib.parse.unquote",
        "urllib.parse.urlparse"
    ],
    "ssl.SSLSocket.sendall": [
        "<builtin>.memoryview",
        "ssl.SSLSocket._checkClosed",
        "<builtin>.super",
        "<builtin>.ValueError",
        "ssl.SSLSocket.send",
        "<builtin>.len"
    ],
    "ipaddress.IPv6Interface": [
        "<builtin>.property",
        "functools.cached_property.__init__"
    ],
    "rich.color.parse": [],
    "textual.events": [
        "textual.events.Load",
        "textual.events.Idle",
        "textual.message.Message.__init_subclass__",
        "textual.events.MouseEvent",
        "textual.events.Click",
        "textual.events.MouseUp",
        "typing.TypeVar.__init__",
        "textual.events.Show",
        "textual.events.Blur",
        "textual.events.ShutdownRequest",
        "textual.events.Mount",
        "textual.events.Leave",
        "textual.events.Unmount",
        "textual.events.MouseCapture",
        "events.__init_subclass__",
        "textual.events.MouseRelease",
        "textual.events.InputEvent",
        "textual.events.Shutdown",
        "textual.events.Hide",
        "textual.events.MouseMove",
        "textual.events.Action",
        "textual.events.MouseDown",
        "textual.events.Event",
        "textual.events.DoubleClick",
        "textual.events.Focus",
        "textual.events.MouseScrollDown",
        "textual.events.Null",
        "textual.events.Enter",
        "textual.events.MouseScrollUp",
        "textual.events.Resize",
        "textual.events.Key",
        "textual.events.Timer",
        "textual.events.Callback"
    ],
    "importlib.metadata.distributions": [
        "importlib.metadata.discover"
    ],
    "docutils.utils.smartquotes": [
        "docutils.utils.smartquotes.smartchars",
        "itertools.combinations",
        "<builtin>.range",
        "smartquotes.smartchars",
        "argparse.ArgumentParser.__init__",
        "argparse.ArgumentParser.parse_args",
        "unittest.loader.TestLoader.__init__",
        "unittest.loader.TestLoader.loadTestsFromTestCase",
        "locale.getdefaultlocale",
        "locale.setlocale",
        "re.sub",
        "codecs.StreamRecoder.read",
        "<builtin>.sorted",
        "argparse._ActionsContainer.add_argument",
        "unittest.runner.TextTestRunner.run",
        "unittest.runner.TextTestRunner.__init__",
        "<builtin>.len",
        "<builtin>.print"
    ],
    "urllib3.util.retry.Retry.__init__": [
        "warnings.warn",
        "<builtin>.frozenset",
        "<builtin>.set",
        "<builtin>.ValueError",
        "<builtin>.tuple"
    ],
    "csound.CsoundScoreLexer": [
        "pygments.lexer.bygroups"
    ],
    "docutils.frontend": [
        "docutils.frontend.OptionParser",
        "docutils.utils",
        "docutils.frontend.Values",
        "docutils.frontend.ConfigDeprecationWarning",
        "docutils.frontend.Option",
        "docutils.frontend.ConfigParser"
    ],
    "http.cookiejar.Cookie.__init__": [
        "<str>.lower",
        "<builtin>.ValueError",
        "<builtin>.float",
        "copy.copy",
        "<builtin>.int"
    ],
    "inspect.cleandoc": [
        "<builtin>.range",
        "<builtin>.min",
        "<builtin>.len",
        "<map>.expandtabs"
    ],
    "click.parser": [
        "click.parser.Argument",
        "<builtin>.object",
        "typing.inner",
        "click.parser.OptionParser",
        "click.parser.ParsingState",
        "typing.TypeVar.__init__",
        "typing._VariadicGenericAlias.__getitem__",
        "re.compile",
        "click.parser.Option"
    ],
    "csound": [
        "csound.CsoundDocumentLexer",
        "pygments.lexer.bygroups",
        "csound.CsoundLexer",
        "csound.CsoundScoreLexer",
        "pygments.lexer.__new__",
        "csound.CsoundOrchestraLexer"
    ],
    "rich.text.Text.stylize_before": [
        "rich.style.Style.__bool__",
        "<builtin>.len",
        "rich.text.Text.__len__",
        "<builtin>.min"
    ],
    "logging.Logger.setLevel": [
        "logging._checkLevel"
    ],
    "ipaddress._IPv4Constants": [
        "ipaddress.IPv4Address.__init__",
        "ipaddress.IPv4Network.__init__"
    ],
    "urllib3.response.HTTPResponse._decode": [
        "response.GzipDecoder.decompress"
    ],
    "email.base64mime": [],
    "rich._emoji_replace._emoji_replace": [
        "<map>.get",
        "typing.inner"
    ],
    "enum.EnumMeta._convert_": [
        "warnings.warn",
        "enum.__members__",
        "<builtin>.vars"
    ],
    "ipaddress.IPv6Network.__init__": [
        "ipaddress._split_addr_prefix",
        "ipaddress._BaseV6._make_netmask",
        "ipaddress._IPAddressBase._split_addr_prefix",
        "ipaddress.IPv6Address.__init__",
        "<builtin>.ValueError",
        "ipaddress._BaseAddress.__int__",
        "<builtin>.int"
    ],
    "smalltalk.NewspeakLexer": [
        "pygments.lexer.bygroups"
    ],
    "rich.spinner": [
        "rich.spinner.Spinner.__init__",
        "rich.panel.Panel.__init__",
        "time.sleep",
        "rich.text.Text.__init__",
        "rich.live.Live.__init__",
        "rich._spinners",
        "rich.spinner.Spinner",
        "<builtin>.repr",
        "<builtin>.sorted",
        "rich.columns.Columns.__init__"
    ],
    "_osx_support._check_for_unavailable_sdk": [
        "<str>.group",
        "genericpath.exists",
        "re.sub",
        "re.search",
        "_osx_support._save_modified_value"
    ],
    "sre_parse.Tokenizer.getuntil": [
        "sre_parse.Tokenizer.__next",
        "<builtin>.len"
    ],
    "textual.app.App.register": [
        "textual.message.Message.__init__",
        "textual.message_pump.MessagePump.post_message_no_wait",
        "textual.message_pump.MessagePump.start_messages",
        "textual.message_pump.MessagePump.set_parent"
    ],
    "rich.markdown.Heading": [
        "<builtin>.classmethod"
    ],
    "charset_normalizer.md.TooManySymbolOrPunctuationPlugin": [
        "<builtin>.property"
    ],
    "email.charset": [
        "email.quoprimime",
        "email.base64mime",
        "charset.Charset",
        "email.charset.Charset",
        "email.errors",
        "email.encoders"
    ],
    "rich.console": [
        "rich.console.Console",
        "rich.console.RichCast",
        "typing.inner",
        "rich.console.PagerContext",
        "rich.region",
        "getpass",
        "rich.console.Group",
        "rich.console.ConsoleOptions",
        "rich.scope",
        "<map>.items",
        "rich.screen",
        "rich.console.Console.__init__",
        "pygments.lexer.__new__",
        "rich.styled",
        "rich.errors",
        "dataclasses.Field.__set_name__",
        "rich.console.ScreenUpdate",
        "rich._windows",
        "rich._log_render",
        "typing._VariadicGenericAlias.__getitem__",
        "rich.console.ThemeContext",
        "rich._export_format",
        "<builtin>.repr",
        "platform",
        "rich.console.ConsoleRenderable",
        "platform.system",
        "typing.__new__",
        "rich.console.Capture",
        "rich.themes",
        "dataclasses.dataclass",
        "rich.console.CaptureError",
        "rich.live",
        "rich._null_file",
        "rich_cli.pager",
        "typing.runtime_checkable",
        "rich.console.ConsoleThreadLocals",
        "rich.console.NoChange",
        "dataclasses",
        "rich.console.NewLine",
        "rich.status",
        "rich.console.ConsoleDimensions",
        "rich.console.ScreenContext",
        "rich.console.RenderHook"
    ],
    "ntpath.dirname": [
        "ntpath.split"
    ],
    "rich.syntax.Syntax._get_number_styles": [
        "rich.style.Style.__add__",
        "rich.style.Style.null",
        "rich.style.Style.transparent_background",
        "rich.console.color_system",
        "rich.style.Style.__init__",
        "rich.syntax.Syntax._get_base_style"
    ],
    "objective": [
        "objective.LogosLexer",
        "objective.objective",
        "objective.SwiftLexer",
        "objective.ObjectiveCLexer",
        "pygments.lexer.__new__",
        "objective.ObjectiveCppLexer"
    ],
    "types.BoolParamType": [
        "typing.inner"
    ],
    "urllib3.util": [
        "urllib3.util.connection",
        "urllib3.util.retry",
        "urllib3.util.timeout",
        "urllib3.util.request",
        "urllib3.util.response"
    ],
    "http.cookiejar.CookieJar._cookie_attrs": [
        "<list>.append",
        "<list>.sort",
        "<str>.search",
        "<str>.sub"
    ],
    "docutils.languages.normalize_language_tag": [
        "re.sub"
    ],
    "docutils.parsers": [
        "docutils.frontend",
        "docutils.parsers.Parser"
    ],
    "ipaddress.IPv4Network": [
        "functools.lru_cache",
        "<builtin>.property",
        "functools._lru_cache_wrapper.wrapper",
        "functools.lru_cache.decorating_function"
    ],
    "requests.cookies.create_cookie": [
        "<map>.update",
        "<builtin>.list",
        "http.cookiejar.Cookie.__init__",
        "<builtin>.set",
        "<builtin>.bool",
        "<builtin>.TypeError"
    ],
    "rich.console.is_dumb_terminal": [
        "rich.console.is_terminal",
        "_collections_abc.Mapping.get"
    ],
    "objective.LogosLexer": [
        "re.compile",
        "pygments.lexer.bygroups"
    ],
    "urllib3.response.HTTPResponse.read_chunked": [
        "contextlib._GeneratorContextManager.__enter__",
        "urllib3.response.HTTPResponse._handle_chunk",
        "urllib3.response.HTTPResponse._flush_decoder",
        "urllib3.response.HTTPResponse._update_chunk_length",
        "response.is_response_to_head",
        "urllib3.response.HTTPResponse._init_decoder",
        "http.client.HTTPResponse.close",
        "urllib3.response.HTTPResponse._decode",
        "contextlib._GeneratorContextManager.__exit__",
        "contextlib.helper",
        "urllib3.response.HTTPResponse.supports_chunked_reads"
    ],
    "urllib3.response.HTTPResponse._update_chunk_length": [
        "<builtin>.int",
        "socket.SocketIO.readinto"
    ],
    "idna.intranges": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "requests.models.Response.content": [
        "requests.models.Response.generate",
        "<builtin>.RuntimeError",
        "utils.iter_slices",
        "requests.models.Response.iter_content"
    ],
    "http.cookiejar": [
        "http.cookiejar.Cookie",
        "http.cookiejar.Absent",
        "http.cookiejar.LWPCookieJar",
        "http.cookiejar.CookiePolicy",
        "<builtin>.str",
        "http.cookiejar.MozillaCookieJar",
        "urllib.request",
        "http.cookiejar.FileCookieJar",
        "http.cookiejar.DefaultCookiePolicy",
        "<list>.append",
        "re.compile",
        "http.cookiejar.LoadError",
        "http.cookiejar.CookieJar"
    ],
    "socket.socketpair": [
        "socket.socket.__init__",
        "<builtin>.ValueError"
    ],
    "dataclasses._tuple_str": [],
    "logging.basicConfig": [
        "logging.StreamHandler.__init__",
        "logging.Logger.addHandler",
        "logging.FileHandler.__init__",
        "<map>.keys",
        "logging.Handler.setFormatter",
        "logging.Formatter.__init__",
        "logging.Logger.removeHandler",
        "<builtin>.len",
        "<builtin>.ValueError",
        "logging._acquireLock",
        "logging.Logger.setLevel"
    ],
    "requests.cookies.RequestsCookieJar.copy": [
        "requests.cookies.RequestsCookieJar.get_policy",
        "http.cookiejar.CookieJar.__init__",
        "http.cookiejar.CookieJar.set_policy",
        "requests.cookies.RequestsCookieJar.update"
    ],
    "rich.console.Console.export_svg.make_tag": [],
    "installers.NSISLexer": [
        "pygments.lexer.bygroups"
    ],
    "requests.auth.HTTPBasicAuth.__init__": [],
    "textual.widget.Widget": [
        "typing.__new__",
        "<builtin>.property",
        "textual.reactive.Reactive.__init__"
    ],
    "textual.widgets._scroll_view": [
        "textual.widgets._scroll_view.ScrollView",
        "textual.view.View.__init_subclass__",
        "textual.scrollbar",
        "_scroll_view.ScrollView"
    ],
    "configs.TermcapLexer": [
        "pygments.lexer.bygroups"
    ],
    "rich.markdown.MarkdownContext.on_text": [
        "rich.markdown.TextElement.on_text",
        "_stack.top"
    ],
    "socket.SocketIO.close": [
        "socket.socket._decref_socketios"
    ],
    "configs": [
        "configs.NestedTextLexer",
        "configs.NginxConfLexer",
        "configs.IniLexer",
        "configs.TermcapLexer",
        "configs.ApacheConfLexer",
        "pygments.lexer.__new__",
        "configs.TerraformLexer",
        "configs.PacmanConfLexer",
        "configs.Cfengine3Lexer",
        "configs.TOMLLexer",
        "configs.SingularityLexer",
        "configs.PropertiesLexer",
        "configs.SquidConfLexer",
        "configs.PkgConfigLexer",
        "configs.TerminfoLexer",
        "configs.UnixConfigLexer",
        "configs.RegeditLexer",
        "configs.AugeasLexer",
        "configs.DockerLexer",
        "configs.KconfigLexer",
        "configs.LighttpdConfLexer"
    ],
    "sieve.SieveLexer": [
        "pygments.lexer.bygroups"
    ],
    "textual.layouts.grid.GridLayout.show_row": [
        "textual.layout.Layout.require_update"
    ],
    "rich.highlighter.RegexHighlighter.highlight": [
        "rich.text.Text.highlight_regex"
    ],
    "socket.family": [
        "socket._intenum_converter"
    ],
    "difflib": [
        "re.compile",
        "difflib._test",
        "collections.namedtuple"
    ],
    "docutils.statemachine.StateWS.blank": [
        "docutils.statemachine.State.nop"
    ],
    "urllib3.fields.RequestField.__init__": [
        "<builtin>.dict"
    ],
    "http.client.<genexpr>": [
        "structures.<genexpr>"
    ],
    "requests.utils.guess_filename": [
        "posixpath.basename",
        "<builtin>.isinstance",
        "ntpath.basename",
        "<builtin>.getattr"
    ],
    "rich.console.Console.export_svg.get_svg_style": [
        "<list>.append",
        "rich.color.blend_rgb"
    ],
    "rich._win32_console.LegacyWindowsTerm.write_text": [
        "codecs.StreamRecoder.write"
    ],
    "textual.geometry.from_corners": [],
    "solidity": [
        "solidity.SolidityLexer",
        "pygments.lexer.__new__"
    ],
    "css.ScssLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "copy.copy",
        "pygments.lexer.default.__init__"
    ],
    "typing._alias": [
        "typing._GenericAlias.__init__"
    ],
    "inspect._signature_fromstr": [
        "<builtin>.object",
        "inspect.Signature.__init__",
        "inspect._signature_fromstr.RewriteSymbolics",
        "<builtin>.list",
        "inspect.ismodule",
        "<builtin>.reversed",
        "inspect._signature_strip_non_python_syntax",
        "<builtin>.zip",
        "<builtin>.enumerate",
        "<builtin>.isinstance",
        "inspect._signature_fromstr.p",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "<list>.pop",
        "ast.parse"
    ],
    "_osx_support._get_system_version": [
        "<builtin>.open"
    ],
    "click.formatting.HelpFormatter": [
        "contextlib.contextmanager",
        "typing.inner"
    ],
    "importlib.metadata.FastPath.search": [
        "importlib.metadata.FastPath.joinpath",
        "importlib.metadata.FastPath.is_egg",
        "importlib.metadata.FastPath.children"
    ],
    "docutils.utils.code_analyzer": [
        "code_analyzer.Lexer",
        "docutils.utils.code_analyzer.Lexer",
        "docutils.utils.code_analyzer.LexerError",
        "docutils.utils.code_analyzer.NumberLines",
        "pygments",
        "code_analyzer.LexerError",
        "pygments.formatters.html",
        "code_analyzer.NumberLines"
    ],
    "textual._profile": [
        "contextlib.contextmanager",
        "typing.inner"
    ],
    "importlib.metadata": [
        "importlib.metadata.Prepared",
        "importlib.metadata.FastPath",
        "importlib.metadata.PathDistribution",
        "importlib.metadata.FileHash",
        "importlib.metadata.PackagePath",
        "importlib.metadata.MetadataPathFinder",
        "collections.namedtuple",
        "importlib.metadata.DistributionFinder",
        "importlib.metadata.Distribution",
        "importlib.metadata.PackageNotFoundError",
        "importlib.metadata.EntryPoint"
    ],
    "sre_parse.State.closegroup": [
        "sre_parse.SubPattern.getwidth"
    ],
    "textual.layouts.grid.GridLayout.__init__": [
        "<builtin>.isinstance",
        "<builtin>.set",
        "textual.layout.Layout.__init__",
        "<builtin>.super"
    ],
    "rich.padding.Padding.unpack": [
        "typing.cast",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.ValueError"
    ],
    "rich.console.Console.rule": [
        "rich.console.Console.rule.Rule"
    ],
    "rich.repr.do_replace": [
        "typing.inner"
    ],
    "docutils.utils.Reporter.info": [
        "docutils.utils.Reporter.system_message"
    ],
    "socket": [
        "socket.SocketIO",
        "<list>.extend",
        "enum.EnumMeta._convert_",
        "<builtin>.object",
        "<builtin>.hasattr",
        "<list>.append",
        "socket.socket",
        "<builtin>.getattr",
        "os._get_exports_list",
        "socket._GiveupOnSendfile"
    ],
    "subprocess.": [
        "subprocess._use_posix_spawn"
    ],
    "rich.text.Text.truncate": [
        "rich.text.Text.plain",
        "rich.cells.cell_len",
        "<builtin>.len",
        "rich.cells.set_cell_size"
    ],
    "commonmark.blocks.Parser.process_inlines": [
        "commonmark.inlines.InlineParser.parseInlines",
        "commonmark.node.NodeWalker.nxt",
        "commonmark.node.Node.walker"
    ],
    "textual.widget": [
        "typing.__new__",
        "rich.repr.auto",
        "textual.message_pump",
        "textual.view",
        "textual.widget.RenderCache",
        "textual.reactive",
        "textual.widget.Widget",
        "logging.getLogger",
        "textual.messages"
    ],
    "inspect.ismethod": [
        "<builtin>.isinstance"
    ],
    "rich.table.Table.add_column": [
        "<builtin>.len"
    ],
    "requests.utils.set_environ": [],
    "rich.style": [
        "rich.style.Style",
        "repr.rich_repr",
        "rich.style.StyleStack",
        "typing.inner",
        "rich.style.__new__",
        "rich.style.StyleMeta",
        "rich.style._Bit",
        "rich.style.Style.__init__"
    ],
    "textual.layout.Layout.render": [
        "textual.geometry.corners",
        "<builtin>.range",
        "textual.segment.SegmentLines.__init__",
        "<builtin>.list",
        "rich.console.Console.get_style",
        "textual.geometry.x_extents",
        "textual.geometry.Region.intersection",
        "textual.layout.Layout._assemble_chops",
        "<builtin>.zip",
        "textual.geometry.Region.__bool__",
        "<builtin>.len",
        "textual.layout.Layout._get_renders",
        "textual.layout.Layout.cuts",
        "textual.segment.Segment.divide",
        "textual.geometry.y_range"
    ],
    "rich.text.Text.append": [
        "control.strip_control_codes",
        "<list>.append",
        "rich.text.Text.__len__",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.TypeError",
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "rich.console.group": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "text.Span": [
        "typing.inner"
    ],
    "rich.palette": [
        "rich.color_triplet",
        "rich.table",
        "rich.palette.Palette"
    ],
    "urllib3.util.url._remove_path_dot_segments": [
        "<list>.insert",
        "<list>.append",
        "<list>.pop"
    ],
    "inspect": [
        "importlib.machinery",
        "inspect.BlockFinder",
        "<builtin>.object",
        "dis",
        "<builtin>.hasattr",
        "<builtin>.type",
        "inspect._ParameterKind",
        "inspect.Parameter",
        "inspect._empty",
        "inspect.Signature",
        "inspect.EndOfBlock",
        "inspect.BoundArguments",
        "inspect._main",
        "<builtin>.globals",
        "inspect._void"
    ],
    "_markupbase": [
        "re.compile",
        "_markupbase.ParserBase"
    ],
    "rich.file_proxy": [
        "rich.file_proxy.FileProxy",
        "rich.ansi"
    ],
    "inspect._signature_strip_non_python_syntax": [
        "<builtin>.iter",
        "<builtin>.next"
    ],
    "rich.console.ScreenUpdate": [
        "typing.inner"
    ],
    "testing": [
        "testing.TAPLexer",
        "pygments.lexer.__new__",
        "testing.GherkinLexer"
    ],
    "textual._callback.count_parameters": [
        "inspect.signature",
        "<builtin>.len"
    ],
    "pathlib.Path._opener": [
        "pathlib.PurePath.__fspath__"
    ],
    "requests.utils.to_key_val_list": [
        "<builtin>.list",
        "<map>.items",
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "requests.models.PreparedRequest": [
        "<builtin>.staticmethod"
    ],
    "typing._GenericAlias.__setattr__": [
        "typing._is_dunder",
        "<builtin>.setattr",
        "<builtin>.super"
    ],
    "rich.live.Live": [
        "<builtin>.property"
    ],
    "urllib3.poolmanager.<lambda>": [
        "urllib3.connectionpool.HTTPConnectionPool.close"
    ],
    "requests.cookies.RequestsCookieJar.set_cookie": [
        "<builtin>.hasattr",
        "<builtin>.super",
        "http.cookiejar.CookieJar.set_cookie"
    ],
    "http.cookiejar.offset_from_tz_string": [
        "<str>.search",
        "<str>.group",
        "<builtin>.int"
    ],
    "rich.syntax.ANSISyntaxTheme": [
        "typing.inner"
    ],
    "docutils.frontend.Option.__init__": [
        "optparse.Option.__init__",
        "<builtin>.super"
    ],
    "rich.panel._title": [
        "rich.text.Text.pad",
        "rich.text.Text.plain",
        "rich.text.Text.expand_tabs",
        "rich.text.Text.from_markup"
    ],
    "unistring.allexcept": [],
    "textual.message_pump.MessagePump.post_message": [
        "queues.Queue.put",
        "textual.message_pump.MessagePump.check_message_enabled"
    ],
    "rich.markup.MarkdownLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "ssl.SSLContext": [
        "<builtin>.hasattr",
        "<builtin>.property"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.__init__": [
        "request.RequestMethods.__init__",
        "queue.Queue.__init__",
        "queue.Queue.put",
        "<builtin>.isinstance",
        "timeout.from_float",
        "urllib3.connectionpool.ConnectionPool.__init__"
    ],
    "requests.api.get": [
        "api.request"
    ],
    "ipaddress._IPAddressBase._prefix_from_ip_int": [
        "ipaddress._count_righthand_zero_bits",
        "<builtin>.ValueError"
    ],
    "socket.getaddrinfo": [
        "socket._intenum_converter",
        "idna.Codec.encode"
    ],
    "subprocess.Popen.__init__": [
        "subprocess._cleanup",
        "<builtin>.hasattr",
        "<builtin>.filter",
        "codecs.BufferedIncrementalDecoder.__init__",
        "_bootlocale.getpreferredencoding",
        "subprocess.Popen._execute_child",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.bool",
        "<builtin>.TypeError",
        "subprocess.Popen._get_handles"
    ],
    "fortran": [
        "fortran.FortranLexer",
        "fortran.FortranFixedLexer"
    ],
    "asyncio.constants": [
        "constants._SendfileMode"
    ],
    "commonmark.inlines": [
        "re.compile",
        "commonmark.node",
        "commonmark.inlines.InlineParser",
        "commonmark.normalize_reference"
    ],
    "optparse.OptionContainer.add_option": [
        "docutils.frontend.Option.__init__",
        "<builtin>.isinstance",
        "optparse.OptionContainer._check_conflict",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "rich.highlighter.RegexHighlighter": [
        "typing.inner"
    ],
    "http.cookiejar.request_path": [
        "http.cookiejar.escape_path",
        "parse.urlsplit",
        "requests.cookies.MockRequest.get_full_url",
        "<str>.startswith"
    ],
    "rich.console.NewLine.__init__": [],
    "supercollider": [
        "supercollider.SuperColliderLexer",
        "pygments.lexer.__new__"
    ],
    "logging.StreamHandler.__init__": [
        "logging.Handler.__init__"
    ],
    "textual.view.View": [
        "typing.__new__",
        "<builtin>.property",
        "textual.reactive.Reactive.__init__"
    ],
    "ipaddress._IPAddressBase._check_int_address": [],
    "docutils.utils.roman": [
        "docutils.utils.roman.InvalidRomanNumeralError",
        "re.compile",
        "docutils.utils.roman.NotIntegerError",
        "docutils.utils.roman.RomanError",
        "docutils.utils.roman.OutOfRangeError"
    ],
    "functools.update_wrapper": [
        "<builtin>.setattr",
        "<builtin>.getattr"
    ],
    "urllib3.response.HTTPResponse.release_conn": [
        "urllib3.connectionpool.HTTPConnectionPool._put_conn"
    ],
    "sophia.SophiaLexer": [
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "web": [],
    "commonmark.blocks.Parser.incorporate_line": [
        "commonmark.blocks.Parser.finalize",
        "commonmark.blocks.Parser.advance_next_nonspace",
        "commonmark.blocks.Parser.close_unmatched_blocks",
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "commonmark.blocks.Parser.add_child",
        "commonmark.blocks.Parser.find_next_nonspace",
        "re.search",
        "commonmark.blocks.Parser.add_line"
    ],
    "ssl.SSLSocket.read": [
        "ssl.SSLSocket._checkClosed",
        "<builtin>.ValueError"
    ],
    "logging.FileHandler.emit": [
        "logging.StreamHandler.emit",
        "logging.FileHandler._open"
    ],
    "urllib.parse.urlunsplit": [
        "urllib.parse._noop",
        "urllib.parse._coerce_args"
    ],
    "sre_compile._compile_info": [
        "<str>.getwidth",
        "sre_compile._generate_overlap_table",
        "<builtin>.min",
        "sre_compile._get_literal_prefix",
        "sre_parse.SubPattern.getwidth",
        "<list>.extend",
        "sre_compile._optimize_charset",
        "<builtin>.len",
        "sre_compile._get_charset_prefix",
        "sre_compile._compile_charset"
    ],
    "click": [
        "click.core",
        "click.decorators"
    ],
    "rich.text.Text.rstrip": [
        "rich.text.Text.plain"
    ],
    "threading.Event.__init__": [
        "threading.Condition.__init__"
    ],
    "rich.panel": [
        "rich.panel.Panel.__init__",
        "rich.panel.Panel"
    ],
    "click._compat._is_compatible_text_stream": [
        "click._compat._is_compat_stream_attr"
    ],
    "typing._subs_tvars": [
        "<builtin>.list",
        "<builtin>.enumerate",
        "<builtin>.isinstance",
        "typing._GenericAlias.copy_with",
        "<builtin>.tuple"
    ],
    "rich_rst.RSTVisitor.visit_title": [
        "docutils.nodes.Element.astext",
        "rich.align.Align.__init__",
        "rich.panel.Panel.__init__",
        "rich.console.Console.get_style"
    ],
    "typing._tp_cache": [
        "functools._lru_cache_wrapper.wrapper",
        "<list>.append",
        "functools.lru_cache",
        "functools.wraps",
        "functools.lru_cache.decorating_function"
    ],
    "urllib3.connection.HTTPConnection.request": [
        "requests.structures.CaseInsensitiveDict.__iter__",
        "http.client.HTTPConnection.request",
        "requests.structures.CaseInsensitiveDict.copy",
        "<builtin>.super"
    ],
    "functools.lru_cache.decorating_function": [
        "functools.update_wrapper",
        "functools._lru_cache_wrapper"
    ],
    "requests.adapters.HTTPAdapter.request_url": [
        "requests.models.RequestEncodingMixin.path_url",
        "urllib.parse.urlparse",
        "utils.select_proxy"
    ],
    "textual.geometry.origin": [],
    "typing": [
        "typing._Immutable",
        "typing.inner",
        "typing.TypeVar.__init__",
        "typing.re",
        "typing.Protocol",
        "typing._GenericAlias.__setattr__",
        "typing._VariadicGenericAlias",
        "typing.SupportsAbs",
        "typing._TypedDictMeta",
        "typing.Generic",
        "typing._GenericAlias.__mro_entries__",
        "typing.SupportsBytes",
        "typing.NamedTuple",
        "collections",
        "typing.__init_subclass__",
        "typing._GenericAlias.__init__",
        "typing._GenericAlias",
        "typing._SpecialForm.__init__",
        "typing._SpecialForm",
        "typing.SupportsRound",
        "typing.TextIO",
        "typing.ForwardRef",
        "typing.TypedDict",
        "typing.SupportsInt",
        "typing.SupportsComplex",
        "typing.TypeVar",
        "abc",
        "typing._Final",
        "typing.IO",
        "typing.SupportsIndex",
        "typing._alias",
        "typing._TypingEmpty",
        "typing.runtime_checkable",
        "typing._ProtocolMeta",
        "typing.BinaryIO",
        "typing._TypingEllipsis",
        "typing.io",
        "typing.SupportsFloat",
        "typing.NamedTupleMeta"
    ],
    "inspect.BoundArguments.__init__": [],
    "rich.console.ConsoleOptions": [
        "<builtin>.property",
        "typing.inner"
    ],
    "rich.table.Table._get_padding_width": [
        "<builtin>.max",
        "rich.table.Table.padding"
    ],
    "logging.FileHandler.__init__": [
        "posixpath.abspath",
        "logging.StreamHandler.__init__",
        "logging.FileHandler._open",
        "ntpath._abspath_fallback",
        "os._fspath",
        "logging.Handler.__init__"
    ],
    "logging.Handler.handle": [
        "logging.FileHandler.emit",
        "logging.Handler.acquire",
        "logging.Filterer.filter",
        "logging.StreamHandler.emit",
        "logging.Handler.emit"
    ],
    "rich.console.Console.save_svg": [
        "rich.console.Console.export_svg",
        "<builtin>.open"
    ],
    "requests.models.RequestEncodingMixin._encode_files": [
        "urllib3.filepost.encode_multipart_formdata",
        "requests.utils.to_key_val_list",
        "<builtin>.hasattr",
        "requests.utils.guess_filename",
        "<builtin>.str",
        "urllib3.fields.RequestField.make_multipart",
        "<list>.append",
        "urllib3.fields.RequestField.__init__",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<builtin>.len"
    ],
    "logging.PercentStyle": [
        "re.compile"
    ],
    "smv.NuSMVLexer": [
        "pygments.lexer.words.__init__"
    ],
    "docutils.utils.new_reporter": [
        "docutils.utils.Reporter.__init__"
    ],
    "operator.attrgetter.__init__": [
        "<builtin>.map",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.TypeError",
        "<str>.split"
    ],
    "requests.models.PreparedRequest.copy": [
        "requests.models.PreparedRequest.__init__",
        "requests.cookies._copy_cookie_jar",
        "requests.structures.CaseInsensitiveDict.copy"
    ],
    "textual.keys": [
        "dataclasses.dataclass",
        "textual.keys.Keys",
        "textual.keys.Binding"
    ],
    "logging.LogRecord.getMessage": [
        "<builtin>.str"
    ],
    "typing._ProtocolMeta.__instancecheck__": [
        "abc.ABCMeta.__subclasscheck__",
        "<builtin>.hasattr",
        "<builtin>.issubclass",
        "<builtin>.super",
        "<builtin>.callable",
        "typing._is_callable_members_only",
        "<builtin>.getattr",
        "<builtin>.all"
    ],
    "click._winconsole": [
        "ctypes",
        "click._winconsole._WindowsConsoleWriter",
        "ctypes.WINFUNCTYPE",
        "ctypes.wintypes",
        "click._winconsole.ConsoleStream",
        "click._winconsole._WindowsConsoleReader",
        "click._winconsole._WindowsConsoleRawIOBase"
    ],
    "click.parsers.TreetopBaseLexer": [
        "pygments.lexer.bygroups"
    ],
    "configparser.BasicInterpolation.before_get": [
        "configparser.BasicInterpolation._interpolate_some"
    ],
    "docutils.frontend.Values.__init__": [
        "<builtin>.super",
        "utils.DependencyList.__init__",
        "optparse.Values.__init__",
        "<builtin>.getattr"
    ],
    "emil.message.Message.__init__": [
        "textual.case.camel_to_snake"
    ],
    "logging.Handler.createLock": [
        "logging._register_at_fork_reinit_lock",
        "threading.RLock"
    ],
    "rich.text.Text.pad_right": [
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "inferno.LimboLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "rich.syntax.PygmentsSyntaxTheme": [
        "typing.inner"
    ],
    "rich_rst.RestructuredText.__rich_console__": [
        "rich.console.Console.get_style",
        "utils.new_document",
        "docutils.parsers.Parser.parse",
        "docutils.frontend.OptionParser.__init__",
        "rich_rst.RSTVisitor.__init__",
        "docutils.frontend.OptionParser.get_default_values",
        "io.Input.__init__",
        "docutils.nodes.Node.walkabout",
        "rich.console.Console.render",
        "docutils.parsers.Parser.__init__",
        "io.StringInput.read"
    ],
    "sre_parse.Tokenizer.__next": [
        "sre_parse.Tokenizer.error",
        "<builtin>.len"
    ],
    "ipaddress._split_addr_prefix": [
        "ipaddress._split_optional_netmask"
    ],
    "optparse.OptionParser._create_option_list": [
        "optparse.OptionContainer._create_option_mappings"
    ],
    "commonmark.inlines.InlineParser.parseBackticks": [
        "commonmark.inlines.InlineParser.match",
        "commonmark.node.Node.__init__",
        "commonmark.node.Node.append_child",
        "<builtin>.len"
    ],
    "rich_cli.__main__.run": [
        "rich_cli.__main__.main"
    ],
    "rich.padding.Padding": [
        "<builtin>.classmethod",
        "typing.inner",
        "<builtin>.staticmethod"
    ],
    "textual.app.App.display": [
        "rich.console.Console.print",
        "_collections_abc.Mapping.get"
    ],
    "keys.Keys": [
        "enum._EnumDict.__setitem__"
    ],
    "optparse": [
        "optparse.OptionContainer",
        "optparse.OptionConflictError",
        "optparse.OptionParser",
        "optparse.AmbiguousOptionError",
        "optparse.OptParseError",
        "optparse.Values",
        "optparse.TitledHelpFormatter",
        "optparse.HelpFormatter",
        "optparse.IndentedHelpFormatter",
        "gettext.gettext",
        "optparse.OptionGroup",
        "optparse.OptionValueError",
        "optparse.Option",
        "optparse.BadOptionError",
        "optparse.OptionError"
    ],
    "typing.__init_subclass__": [
        "typing._collect_type_vars",
        "message.__init_subclass__",
        "widget.__init_subclass__",
        "typing.__init_subclass__",
        "typing._GenericAlias.__eq__"
    ],
    "rich.table.Table.add_row.add_cell": [],
    "rich.table.align_cell": [
        "segment.Segment.align_top"
    ],
    "sre_parse._parse_flags": [
        "sre_parse.Tokenizer.get",
        "<builtin>.len"
    ],
    "textual.message_pump.MessagePump.peek_message": [
        "queues.Queue.get_nowait"
    ],
    "typing._is_callable_members_only": [
        "<builtin>.callable",
        "<builtin>.all",
        "typing._get_protocol_attrs",
        "<builtin>.getattr"
    ],
    "http.cookiejar.CookieJar.clear": [
        "<builtin>.ValueError"
    ],
    "requests.sessions.SessionRedirectMixin.rebuild_method": [],
    "email.header": [
        "email.charset.Charset.__init__",
        "email.header._Accumulator",
        "email.header.Header",
        "re.compile",
        "email.header._ValueFormatter"
    ],
    "logging.Formatter.__init__": [
        "logging.PercentStyle.__init__",
        "<map>.keys",
        "logging.PercentStyle.validate",
        "<builtin>.ValueError"
    ],
    "rich.style.Style.__init__": [
        "random.Random.randint",
        "typing.inner",
        "<builtin>.hash",
        "<builtin>.sum",
        "rich.style.Style._make_color"
    ],
    "requsts.sessions.Session.mount": [],
    "textual.geometry.size": [],
    "textwrap": [
        "re.compile",
        "<builtin>.print",
        "textwrap.TextWrapper"
    ],
    "difflib.SequenceMatcher.__init__": [
        "difflib.SequenceMatcher.set_seqs"
    ],
    "threading.Thread.start": [
        "threading.Event.is_set",
        "threading.Event.wait",
        "<builtin>.RuntimeError"
    ],
    "click.core.Option.__init__": [
        "inspect.cleandoc",
        "<builtin>.super",
        "<builtin>.isinstance",
        "<builtin>.bool",
        "<builtin>.TypeError",
        "click.types.convert_type"
    ],
    "rich_rst.RSTVisitor.visit_system_message": [
        "docutils.nodes.system_message.astext",
        "rich.panel.Panel.__init__",
        "rich.console.Console.render_str"
    ],
    "asyncio.base_events": [
        "asyncio.events",
        "subprocess",
        "<builtin>.object",
        "asyncio.futures",
        "asyncio.coroutines",
        "asyncio.base_events.BaseEventLoop",
        "<builtin>.hasattr",
        "socket",
        "asyncio.staggered",
        "asyncio.constants",
        "ssl",
        "asyncio.trsock",
        "asyncio.protocols",
        "asyncio.base_events._SendfileFallbackProtocol",
        "concurrent.futures",
        "asyncio.base_events.Server",
        "asyncio.sslproto"
    ],
    "charset_normalizer.md.MessDetectorPlugin": [
        "<builtin>.property"
    ],
    "rich.markup.GroffLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "csv.Sniffer.sniff": [
        "csv.dialect",
        "csv.Sniffer._guess_quote_and_delimiter",
        "csv.Sniffer.sniff.dialect"
    ],
    "textual.widgets._tree_control": [
        "typing.inner",
        "typing._GenericAlias.__mro_entries__",
        "textual.widgets._tree_control.TreeNode",
        "typing.TypeVar.__init__",
        "typing.NewType",
        "typing.__init_subclass__",
        "textual.widgets._tree_control.TreeClick",
        "textual.reactive.Reactive.__set_name__",
        "textual.widgets._tree_control.TreeControl"
    ],
    "requests.utils.should_bypass_proxies.get_proxy": [],
    "requests.models.RequestHooksMixin.register_hook": [
        "<builtin>.hasattr",
        "<builtin>.isinstance",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.ValueError"
    ],
    "typing._GenericAlias.__eq__": [
        "<builtin>.frozenset",
        "typing._GenericAlias.__hash__",
        "<builtin>.isinstance",
        "typing._SpecialForm.__eq__"
    ],
    "commonmark.blocks.Parser.close_unmatched_blocks": [
        "commonmark.blocks.Parser.finalize"
    ],
    "rich.syntax.PygmentsSyntaxTheme.__init__": [
        "rich.style.Style.__init__",
        "pygments.styles.get_style_by_name",
        "<builtin>.isinstance"
    ],
    "configs.TerminfoLexer": [
        "pygments.lexer.bygroups"
    ],
    "ssl.SSLSocket": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "ssl._sslcopydoc"
    ],
    "docutils.statemachine.StateMachine.get_source_and_line": [
        "docutils.statemachine.ViewList.info"
    ],
    "grammar_notation.PegLexer": [
        "pygments.lexer.bygroups"
    ],
    "logging._checkLevel": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "<builtin>.str",
        "<builtin>.ValueError"
    ],
    "rich._log_render.LogRender.__init__": [],
    "rich.protocol.is_renderable": [
        "<builtin>.hasattr",
        "<builtin>.isinstance"
    ],
    "locale.getlocale": [
        "<builtin>.TypeError",
        "locale._parse_localename",
        "locale.setlocale"
    ],
    "rich._inspect.Inspect.__init__": [
        "rich._inspect.Inspect._make_title"
    ],
    "rich.style.StyleStack": [
        "<builtin>.property"
    ],
    "types._NumberParamTypeBase": [
        "typing.inner"
    ],
    "rich.panel.align_text": [
        "text.Text.assemble",
        "rich.text.Text.truncate",
        "rich.cells.cell_len",
        "rich.text.Text.copy",
        "rich.text.Text.plain"
    ],
    "rich.highlighter.JSONHighlighter.highlight": [
        "rich.highlighter.RegexHighlighter.highlight",
        "<builtin>.super",
        "rich.text.Text.plain",
        "re.finditer",
        "<builtin>.len",
        "text.spans"
    ],
    "logging._addHandlerRef": [
        "<list>.append",
        "logging.Logger",
        "logging._releaseLock"
    ],
    "urllib.request": [
        "urlib.request.FancyURLopener",
        "urllib.request.HTTPCookieProcessor",
        "urllib.request.Request",
        "<builtin>.hasattr",
        "urllib.request.AbstractDigestAuthHandler",
        "urlib.request.URLopener",
        "urlib.request.HTTPRedirectHandler",
        "urlib.request.AbstractBasicAuthHandler",
        "urllib.request.UnknownHandler",
        "urllib.request.ProxyBasicAuthHandler",
        "urlib.request.Request",
        "urlib.request.ProxyDigestAuthHandler",
        "urlib.request.RequestMethods",
        "urlib.request.HTTPDefaultErrorHandler",
        "urlib.request.HTTPBasicAuthHandler",
        "urlib.request.AbstractHTTPHandler",
        "urlib.request.OpenerDirector",
        "urllib.request.DataHandler",
        "urlib.request.HTTPPasswordMgrWithPriorAuth",
        "urllib.request.HTTPDefaultErrorHandler",
        "urllib.request.AbstractBasicAuthHandler",
        "urllib.request.OpenerDirector",
        "urllib.request.HTTPDigestAuthHandler",
        "urlib.request.ftpwrapper",
        "urllib.request.HTTPBasicAuthHandler",
        "urlib.request.HTTPSHandler",
        "urllib.request.ftpwrapper",
        "urllib.request.HTTPPasswordMgr",
        "urlib.request.ProxyHandler",
        "urllib.request.HTTPErrorProcessor",
        "urlib.request.ProxyBasicAuthHandler",
        "urllib.request.HTTPPasswordMgrWithDefaultRealm",
        "urlib.request.HTTPErrorProcessor",
        "urllib.request.FancyURLopener",
        "urllib.request.AbstractHTTPHandler",
        "urllib.request.CacheFTPHandler",
        "urlib.request.AbstractDigestAuthHandler",
        "urlib.request.CacheFTPHandler",
        "urllib.request.ProxyHandler",
        "urllib.request.FileHandler",
        "urlib.request.DataHandler",
        "urlib.request.HTTPDigestAuthHandler",
        "urllib.request.HTTPPasswordMgrWithPriorAuth",
        "urllib.request.BaseHandler",
        "urlib.request.BaseHandler",
        "nturl2path",
        "urlib.request.FileHandler",
        "urlib.request.HTTPCookieProcessor",
        "urllib.request.URLopener",
        "urllib.error",
        "urlib.request.HTTPPasswordMgrWithDefaultRealm",
        "urllib.request.HTTPHandler",
        "urllib.request.HTTPSHandler",
        "urllib3.packages.six._LazyDescr.__get__",
        "re.compile",
        "urllib.request.ProxyDigestAuthHandler",
        "urlib.request.HTTPHandler",
        "urlib.request.FTPHandler",
        "urlib.request.UnknownHandler",
        "<list>.append",
        "urllib.request.HTTPRedirectHandler",
        "urlib.request.HTTPPasswordMgr",
        "urllib.request.FTPHandler"
    ],
    "sre_compile.compile": [
        "sre_parse.groups",
        "sre_parse.parse",
        "<map>.items",
        "<builtin>.tuple",
        "sre_compile.isstring",
        "sre_compile._code",
        "<builtin>.print"
    ],
    "textual.geometry.Region.union": [
        "textual.geometry.corners",
        "<builtin>.max",
        "textual.geometry.from_corners",
        "<builtin>.min"
    ],
    "rich.emoji.Emoji": [
        "<builtin>.classmethod",
        "typing.inner"
    ],
    "rich.style.Style._make_ansi_codes": [
        "rich.color.Color.downgrade",
        "<builtin>.range",
        "rich.color.Color.get_ansi_codes"
    ],
    "objective.GeneratedObjectiveCVariant": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "_osx_support.get_platform_osx": [
        "<map>.get",
        "<list>.strip",
        "<list>.get",
        "re.findall",
        "<builtin>.sorted",
        "_osx_support._get_system_version",
        "<builtin>.set",
        "<builtin>.tuple",
        "<builtin>.ValueError",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "rich.syntax.Syntax.__init__": [
        "rich.style.Style.__init__",
        "<builtin>.set",
        "rich.syntax.get_theme"
    ],
    "random.Random.randrange": [
        "<builtin>.ValueError",
        "random._randbelow_with_getrandbits"
    ],
    "threading.Condition.wait": [
        "threading.Condition._is_owned",
        "threading.Condition._acquire_restore",
        "<builtin>.RuntimeError",
        "threading.Condition._release_save"
    ],
    "posixpath.isabs": [
        "posixpath._get_sep",
        "os._fspath",
        "<str>.startswith"
    ],
    "ntpath.splitext": [
        "<builtin>.isinstance",
        "os._fspath",
        "genericpath._splitext"
    ],
    "asyncio.queue": [
        "asyncio.queue.PriorityQueue",
        "asyncio.queue.LifoQueue",
        "asyncio.queue.Queue",
        "asyncio.queue.Full",
        "asyncio.queue._PySimpleQueue"
    ],
    "charset_normalizer.models.CharsetMatches": [
        "typing.inner"
    ],
    "asyncio.sslproto": [
        "asyncio.transports",
        "asyncio.sslproto.SSLProtocol",
        "asyncio.sslproto._SSLPipe",
        "asyncio.sslproto._SSLProtocolTransport"
    ],
    "ast.NodeVisitor.visit": [
        "<builtin>.getattr"
    ],
    "numbers.Real": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "http.cookiejar.escape_path": [
        "parse.quote",
        "<str>.sub"
    ],
    "ntpath.split": [
        "ntpath._get_bothseps",
        "<builtin>.len",
        "ntpath.splitdrive",
        "os._fspath"
    ],
    "sre_parse.Tokenizer.__init__": [
        "sre_parse.Tokenizer.__next",
        "<builtin>.isinstance",
        "<builtin>.str"
    ],
    "textual.layouts.grid.GridLayout._add_area": [
        "<builtin>.isinstance"
    ],
    "csv.Sniffer._guess_quote_and_delimiter": [
        "<str>.findall",
        "<map>.get",
        "<builtin>.max",
        "<str>.search",
        "re.escape",
        "re.compile",
        "enum.IntFlag.__or__"
    ],
    "urllib3.contrib._appengine_environ.is_appengine_sandbox": [
        "urllib3.contrib._appengine_environ.is_appengine"
    ],
    "rich._loop": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.TypeVar.__init__",
        "typing.inner"
    ],
    "graphics._shortened": [],
    "commonmark.normalize_reference": [
        "re.compile",
        "commonmark.normalize_reference._get_smp_regex",
        "commonmark.normalize_reference._parse_table",
        "commonmark.normalize_reference._check_native"
    ],
    "logging.Logger.debug": [
        "logging.Logger._log",
        "logging.Logger.isEnabledFor"
    ],
    "http.cookiejar.CookieJar._cookie_from_cookie_tuple": [
        "<str>.rfind",
        "http.cookiejar.escape_path",
        "http.cookiejar.Cookie.__init__",
        "<builtin>.bool",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "requests.sessions.Session.get_adapter": [
        "<str>.startswith",
        "<str>.lower"
    ],
    "csv": [
        "csv.unix_dialect",
        "csv.Sniffer",
        "csv.Dialect",
        "csv.excel",
        "csv.excel_tab",
        "csv.DictWriter",
        "csv.DictReader"
    ],
    "logging.Logger.findCaller": [
        "logging.currentframe",
        "_io.StringIO",
        "ntpath.normcase",
        "<builtin>.hasattr",
        "posixpath.normcase",
        "traceback.print_stack"
    ],
    "rich.region": [
        "rich.region.Region",
        "typing.__new__"
    ],
    "commonmark.common.normalize_uri": [
        "re.sub",
        "urllib.parse.quote",
        "<builtin>.str"
    ],
    "_osx_support._supports_universal_builds": [
        "_osx_support._get_system_version",
        "<builtin>.bool",
        "<str>.split",
        "<builtin>.tuple",
        "<builtin>.int"
    ],
    "encodings.idna": [
        "encodings.idna.Codec",
        "encodings.idna.IncrementalEncoder",
        "encodings.idna.StreamWriter",
        "re.compile",
        "stringprep",
        "encodings.idna.StreamReader",
        "encodings.idna.IncrementalDecoder"
    ],
    "urllib3.packages.six.MovedAttribute.__init__": [
        "urllib3.packages.six._LazyDescr.__init__",
        "<builtin>.super"
    ],
    "sre_parse._class_escape": [
        "<builtin>.ord",
        "sre_parse.Tokenizer.getwhile",
        "<builtin>.chr",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "configparser.RawConfigParser._unify_values": [
        "collections.ChainMap.__init__",
        "<builtin>.str"
    ],
    "types.Choice": [
        "typing.inner"
    ],
    "main": [],
    "textual.widgets._static": [
        "textual.widgets._static.Static",
        "textual.widget.Widget.__init_subclass__"
    ],
    "urllib3.response.HTTPResponse._handle_chunk": [
        "http.client.HTTPResponse._safe_read"
    ],
    "pygments.lexer": [
        "pygments.lexer._This",
        "pygments.lexer.RegexLexerMeta",
        "pygments.lexer._inherit",
        "pygments.lexer.default",
        "pygments.lexer.RegexLexer",
        "pygments.lexer.ExtendedRegexLexer",
        "pygments.lexer.include",
        "pygments.lexer.combined",
        "pygments.filters",
        "pygments.lexer.ProfilingRegexLexer",
        "pygments.lexer.DelegatingLexer",
        "pygments.regexopt",
        "pygments.lexer.ProfilingRegexLexerMeta",
        "pygments.lexer.Lexer",
        "<builtin>.staticmethod",
        "pygments.lexer._PseudoMatch",
        "pygments.lexer.LexerContext",
        "pygments.filter",
        "pygments.lexer.words",
        "pygments.lexer.LexerMeta"
    ],
    "requests.sessions.SessionRedirectMixin.rebuild_proxies": [
        "requests.auth._basic_auth_str",
        "requests.utils.get_auth_from_url",
        "_collections_abc.Mapping.__contains__",
        "urllib.parse.urlparse",
        "requests.utils.resolve_proxies"
    ],
    "rich.status": [
        "rich.spinner",
        "time.sleep",
        "rich.status.Status"
    ],
    "inspect.Parameter": [
        "<builtin>.property"
    ],
    "socket.socket": [
        "<builtin>.hasattr",
        "<builtin>.property"
    ],
    "urllib3.contrib._appengine_environ.is_prod_appengine": [
        "_collections_abc.Mapping.__contains__"
    ],
    "rich.align.Align": [
        "<builtin>.classmethod",
        "typing.inner"
    ],
    "functools._lru_cache_wrapper.wrapper": [
        "functools._make_key"
    ],
    "textual.app.App.action": [
        "textual.app.App.dispatch_action",
        "textual.log",
        "actions.parse",
        "<builtin>.getattr"
    ],
    "urllib3.poolmanager._default_key_normalizer": [
        "<builtin>.frozenset",
        "<builtin>.list",
        "<builtin>.tuple"
    ],
    "inspect._ParameterKind": [
        "<builtin>.property"
    ],
    "urllib.parse.unquote": [
        "<builtin>.range",
        "<str>.split",
        "<builtin>.len"
    ],
    "rich.traceback.install.ipy_excepthook_closure": [],
    "rnc": [
        "rnc.RNCCompactLexer",
        "pygments.lexer.__new__"
    ],
    "urllib3.packages.six._SixMetaPathImporter.create_module": [
        "urllib3.packages.six._SixMetaPathImporter.load_module"
    ],
    "supercollider.SuperColliderLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "fractions": [
        "re.compile",
        "fractions.Fraction",
        "enum.IntFlag.__or__",
        "decimal"
    ],
    "commonmark.node.NodeWalker.__next__": [
        "node.is_container"
    ],
    "docutils.statemachine.string2lines": [],
    "commonmark.node": [
        "commonmark.node.Node",
        "re.compile",
        "commonmark.node.NodeWalker"
    ],
    "rich_cli.__main__.render_csv": [
        "csv.Sniffer.has_header",
        "_csv.get_dialect",
        "_operator.itemgetter.__new__",
        "csv.Sniffer.__init__",
        "rich_cli.__main__.read_resource",
        "rich.table.Table.__init__",
        "rich.table.Table.add_row",
        "typing.Pattern.fullmatch",
        "rich.table.Table.add_column",
        "rich.box",
        "rich_cli.__main__.on_error",
        "<builtin>.str",
        "_csv.reader",
        "csv.Sniffer.sniff",
        "<builtin>.iter",
        "_io.StringIO",
        "re.compile",
        "<builtin>.enumerate",
        "<builtin>.next"
    ],
    "enum._power_of_two": [
        "enum._high_bit"
    ],
    "urllib3.contrib._appengine_environ.is_appengine": [
        "urllib3.contrib._appengine_environ.is_local_appengine",
        "urllib3.contrib._appengine_environ.is_prod_appengine"
    ],
    "hdl": [
        "hdl.SystemVerilogLexer",
        "hdl.VhdlLexer",
        "hdl.VerilogLexer"
    ],
    "rich.align.Align.__init__": [
        "<builtin>.ValueError"
    ],
    "requests.utils.should_bypass_proxies": [
        "requests.utils.address_in_network",
        "requests.utils.is_ipv4_address",
        "requests.utils.is_valid_cidr",
        "requests.utils.set_environ",
        "requests.utils.should_bypass_proxies.get_proxy",
        "urllib.parse.urlparse"
    ],
    "ssl._TLSAlertType": [],
    "requests.sessions.SessionRedirectMixin.rebuild_auth": [
        "requests.sessions.SessionRedirectMixin.should_strip_auth",
        "_collections_abc.Mapping.__contains__",
        "requests.models.PreparedRequest.prepare_auth",
        "requests.utils.get_netrc_auth"
    ],
    "signal": [
        "functools.update_wrapper",
        "enum.EnumMeta._convert_",
        "<builtin>.globals",
        "functools.wraps"
    ],
    "requests.models.PreparedRequest._get_idna_encoded_host": [
        "idna.core.encode",
        "idna"
    ],
    "rich.terminal_theme": [
        "rich.terminal_theme.TerminalTheme.__init__",
        "rich.terminal_theme.TerminalTheme",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "json.JSON": [
        "typing.inner"
    ],
    "click.globals": [
        "typing.inner",
        "_thread._local",
        "typing.overload"
    ],
    "configparser.RawConfigParser": [
        "re.compile",
        "<builtin>.property"
    ],
    "urllib.parse.quote": [
        "<builtin>.TypeError",
        "<builtin>.isinstance",
        "urllib.parse.quote_from_bytes"
    ],
    "os._get_exports_list": [
        "<builtin>.dir",
        "<builtin>.list"
    ],
    "re.finditer": [
        "re._compile"
    ],
    "ssl.SSLSocket.do_handshake": [
        "ssl.SSLSocket._check_connected"
    ],
    "typing._SpecialForm": [
        "typing._tp_cache"
    ],
    "inspect.from_callable": [
        "inspect._signature_from_callable"
    ],
    "requests.cookies.merge_cookies": [
        "requests.cookies.RequestsCookieJar.update",
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "inspect.formatannotation": [
        "typing._GenericAlias.__repr__",
        "<builtin>.repr",
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "rich._null_file": [
        "typing.inner",
        "typing.__init_subclass__",
        "rich._null_file.NullFile",
        "typing._GenericAlias.__mro_entries__"
    ],
    "rich.style.Style.__str__": [],
    "textual._parser.Parser.__init__": [
        "textual._xterm_parser.XTermParser.parse",
        "<builtin>.next"
    ],
    "copy": [
        "<builtin>.type",
        "copy.Error",
        "<builtin>.getattr"
    ],
    "configparser.LegacyInterpolation": [
        "re.compile",
        "<builtin>.staticmethod"
    ],
    "ipaddress.IPv4Interface": [
        "<builtin>.property",
        "functools.cached_property.__init__"
    ],
    "configparser": [
        "configparser.DuplicateSectionError",
        "configparser.RawConfigParser",
        "configparser.DuplicateOptionError",
        "configparser.ConverterMapping",
        "configparser.MissingSectionHeaderError",
        "configparser.InterpolationSyntaxError",
        "configparser.InterpolationDepthError",
        "configparser.ParsingError",
        "configparser.NoSectionError",
        "configparser.ExtendedInterpolation",
        "configparser.SafeConfigParser",
        "configparser.SectionProxy",
        "configparser.Interpolation",
        "configparser.NoOptionError",
        "<builtin>.object",
        "configparser.InterpolationMissingOptionError",
        "configparser.InterpolationError",
        "configparser.BasicInterpolation",
        "configparser.Error",
        "configparser.ConfigParser",
        "configparser.LegacyInterpolation"
    ],
    "textual.widgets._directory_tree": [
        "textual.widgets._directory_tree.DirectoryTree",
        "rich.repr.auto",
        "typing.inner",
        "textual.message.Message.__init_subclass__",
        "typing._GenericAlias.__mro_entries__",
        "dataclasses.dataclass",
        "typing.__init_subclass__",
        "textual.reactive.Reactive.__set_name__",
        "textual.widgets._directory_tree.DirEntry",
        "textual.widgets._directory_tree.FileClick"
    ],
    "fractions.Fraction": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "fractions._operator_fallbacks"
    ],
    "logging.getLevelName": [
        "<map>.get"
    ],
    "cclick.ore.BaseCommand": [
        "typing.inner",
        "typing.overload"
    ],
    "robotframework": [
        "robotframework.UnknownTable",
        "robotframework.TemplatedKeywordCall",
        "robotframework.GherkinTokenizer",
        "robotframework.Variable",
        "pygments.lexer.__new__",
        "robotframework.Comment",
        "robotframework.VariableSplitter",
        "robotframework._Table",
        "robotframework.KeywordSetting",
        "robotframework.Setting",
        "robotframework.KeywordTable",
        "robotframework.RowSplitter",
        "robotframework.TestCaseTable",
        "robotframework.SettingTable",
        "robotframework.TestCaseSetting",
        "robotframework.KeywordCall",
        "robotframework.ImportSetting",
        "robotframework.ForLoop",
        "robotframework.Tokenizer",
        "robotframework.RowTokenizer",
        "robotframework.VariableTable",
        "robotframework.VariableTokenizer",
        "robotframework.RobotFrameworkLexer"
    ],
    "charset_normalizer": [
        "charset_normalizerlegacy.CharsetNormalizerMatches",
        "typing.inner",
        "charset_normalizerlegacy.CharsetDoctor",
        "charset_normalizerlegacy.CharsetDetector",
        "charset_normalizerlegacy.CharsetNormalizerMatch"
    ],
    "rich.text.Text.expand_tabs": [
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "textual.message_pump.MessagePump.get_message": [
        "queues.Queue.get"
    ],
    "rich.markdown": [
        "rich.markdown.UnknownElement",
        "rich.markdown.CodeBlock",
        "rich.markdown.Heading",
        "rich.markdown.BlockQuote",
        "rich.markdown.Markdown",
        "argparse.ArgumentParser.parse_args",
        "pydoc.pager",
        "rich.markdown.MarkdownContext",
        "rich.markdown.TextElement",
        "rich.markdown.ListItem",
        "rich.markdown.Markdown.__init__",
        "<builtin>.open",
        "pydoc",
        "codecs.StreamRecoder.read",
        "rich.markdown.HorizontalRule",
        "rich.markdown.MarkdownElement",
        "rich.markdown.ImageItem",
        "_io.StringIO",
        "argparse.ArgumentParser.__init__",
        "rich.rule",
        "rich._stack",
        "commonmark.blocks",
        "argparse._ActionsContainer.add_argument",
        "rich.markdown.Paragraph",
        "rich.markdown.ListElement"
    ],
    "rich.text.Text.wrap": [
        "rich.text.Text.divide",
        "rich.text.Text.truncate",
        "rich.containers.Lines.justify",
        "_pick.pick_bool",
        "rich.text.Text.rstrip_end",
        "_wrap.divide_line",
        "rich.containers.Lines.__iter__",
        "<builtin>.str",
        "rich.containers.Lines.__init__",
        "rich.text.Text.__contains__",
        "rich.text.Text.__str__",
        "rich.text.Text.split",
        "rich.containers.Lines.extend"
    ],
    "threading.Condition.notify_all": [
        "threading.Condition.notify",
        "<builtin>.len"
    ],
    "textual.layout_map": [
        "typing.__new__",
        "textual.layout_map.LayoutMap",
        "textual.layout_map.RenderRegion"
    ],
    "requests.models.Response.__init__": [
        "requests.cookies.cookiejar_from_dict",
        "requests.structures.CaseInsensitiveDict.__init__"
    ],
    "requests.models.Request.__init__": [
        "hooks.default_hooks",
        "<builtin>.list"
    ],
    "requests.sessions.Session.send": [
        "requests.sessions.Session.get_adapter",
        "requests.adapters.HTTPAdapter.send",
        "<list>.insert",
        "requests.sessions.SessionRedirectMixin.resolve_redirects",
        "<list>.pop",
        "requests.models.Response.content",
        "hooks.dispatch_hook",
        "requests.cookies.extract_cookies_to_jar",
        "<builtin>.isinstance",
        "requests.hooks.dispatch_hook",
        "<builtin>.ValueError",
        "requests.utils.resolve_proxies",
        "time.time",
        "<builtin>.next"
    ],
    "rich.color.Color": [
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "<builtin>.classmethod",
        "typing._VariadicGenericAlias.__getitem__",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function",
        "<builtin>.property"
    ],
    "socket.SocketIO": [
        "<builtin>.property"
    ],
    "http.cookiejar.domain_match": [
        "http.cookiejar.is_HDN"
    ],
    "typing.TextIO": [
        "<builtin>.property",
        "typing.inner",
        "abc.abstractmethod"
    ],
    "http.cookiejar.is_third_party": [
        "http.cookiejar.request_host",
        "requests.cookies.origin_req_host",
        "http.cookiejar.reach",
        "http.cookiejar.domain_match"
    ],
    "smalltalk.SmalltalkLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "commonmark.inlines.InlineParser.parseInlines": [
        "commonmark.inlines.InlineParser.processEmphasis",
        "commonmark.inlines.InlineParser.parseInline"
    ],
    "textual.layouts.dock.DockLayout.__init__": [
        "textual.layout.Layout.__init__",
        "<builtin>.super"
    ],
    "textual.case": [
        "re.compile",
        "typing.inner",
        "<builtin>.print"
    ],
    "types.StringParamType": [
        "typing.inner"
    ],
    "rich.console.Console.__init__": [
        "rich.console.detect_legacy_windows",
        "rich._log_render.LogRender.__init__",
        "rich.console.Console._detect_color_system",
        "threading.RLock",
        "rich.console.is_dumb_terminal",
        "_collections_abc.Mapping.__contains__",
        "theme.ThemeStack.__init__",
        "rich.console._is_jupyter",
        "rich.console.is_terminal",
        "_log_render.LogRender.__init__",
        "_collections_abc.Mapping.get",
        "<builtin>.int"
    ],
    "decimal": [
        "_pydecimal"
    ],
    "rich_cli.pager.PagerApp.on_load": [
        "textual.app.App.bind"
    ],
    "rich_cli.__main__.render_ipynb": [
        "rich.panel.Panel.__init__",
        "rich.text.Text.from_ansi",
        "rich.syntax.Syntax.__init__",
        "rich.text.Text.from_markup",
        "rich_cli.markdown",
        "rich.text.Text.__init__",
        "rich.console.Group.__init__",
        "<str>.splitlines",
        "<builtin>.isinstance",
        "rich.text.Text.__add__",
        "<builtin>.len",
        "json.loads",
        "<str>.rstrip",
        "rich_cli.__main__.read_resource",
        "rich_cli.__main__._line_range"
    ],
    "rich_cli.__main__.RichCommand.format_help": [
        "rich_cli.__main__.RichCommand.format_help.OptionHighlighter",
        "rich_cli.__main__.blend_text",
        "<builtin>.reversed",
        "<builtin>.len"
    ],
    "rich_cli.markdown.CodeBlock.create": [
        "rich_cli.markdown.CodeBlock.__init__"
    ],
    "types": [
        "types.FloatParamType",
        "typing.inner",
        "types.IntRange",
        "types.ParamType",
        "types.CompositeParamType",
        "types.IntParamType",
        "<builtin>.globals",
        "types.UUIDParameterType",
        "types.Choice",
        "types.FloatRange",
        "types.Path",
        "types.File",
        "types.FuncParamType",
        "types.DateTime",
        "types.Tuple",
        "types._NumberRangeBase",
        "types.DynamicClassAttribute",
        "types._C",
        "types._GeneratorWrapper",
        "<builtin>.object",
        "<builtin>.type",
        "types.BoolParamType",
        "types.StringParamType",
        "types.UnprocessedParamType",
        "types._NumberParamTypeBase"
    ],
    "rich.padding.Padding.__init__": [
        "rich.padding.unpack"
    ],
    "ssl_.ssl_wrap_socket": [
        "ssl_.is_ipaddress",
        "ssl.SSLContext.set_alpn_protocols",
        "ssl_._ssl_wrap_socket_impl"
    ],
    "email.encoders": [
        "quopri"
    ],
    "click.termui": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.TypeVar.__init__",
        "typing.inner"
    ],
    "rich.console.Console.rule.Rule": [
        "typing.inner"
    ],
    "click.decorators.command": [
        "<builtin>.callable",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "sre_constants.dump": [
        "<builtin>.sorted"
    ],
    "configs.RegeditLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "requests.cookies.RequestsCookieJar.get_policy": [],
    "tempfile": [
        "tempfile.TemporaryDirectory",
        "tempfile._TemporaryFileCloser",
        "<builtin>.hasattr",
        "tempfile.SpooledTemporaryFile",
        "random",
        "tempfile._TemporaryFileWrapper",
        "tempfile._RandomNameSequence"
    ],
    "typing.SupportsAbs": [
        "abc.abstractmethod"
    ],
    "rich.control.Control": [
        "<builtin>.classmethod"
    ],
    "email._encoded_words": [
        "re.compile",
        "email._encoded_words._QByteMap",
        "<builtin>.ord",
        "_encoded_words._QByteMap"
    ],
    "textual._tree_control.TreeControl": [
        "typing.new_type",
        "textual.reactive.Reactive.__init__",
        "typing.__new__"
    ],
    "textual.widgets._tree_control.TreeNode": [
        "<builtin>.property"
    ],
    "rich.syntax.PygmentsSyntaxTheme.get_style_for_token": [
        "rich.style.Style.__init__",
        "rich.style.StyleMeta.style_for_token"
    ],
    "constants._SendfileMode": [],
    "textual._callback": [
        "functools.lru_cache",
        "functools._lru_cache_wrapper.wrapper",
        "functools.lru_cache.decorating_function"
    ],
    "sre_parse._parse": [
        "sre_parse.SubPattern.__getitem__",
        "<builtin>.int",
        "sre_parse._parse_sub",
        "sre_parse.SubPattern.__init__",
        "sre_parse._parse_flags",
        "sre_parse.State.checkgroup",
        "sre_parse.State.checklookbehindgroup",
        "sre_parse.State.closegroup",
        "sre_parse.Tokenizer.getuntil",
        "<builtin>.range",
        "sre_parse.Tokenizer.seek",
        "<builtin>.OverflowError",
        "sre_parse.State.opengroup",
        "sre_parse.Tokenizer.tell",
        "<builtin>.len",
        "sre_parse.groups",
        "sre_parse._uniq",
        "sre_parse.Tokenizer.match",
        "sre_parse._class_escape",
        "sre_parse.Tokenizer.get",
        "sre_parse.SubPattern.__len__",
        "sre_parse.SubPattern.__setitem__",
        "sre_parse.SubPattern.append",
        "<builtin>.AssertionError",
        "sre_parse._escape"
    ],
    "rich._spinners": [],
    "inspect._main": [
        "importlib.import_module",
        "argparse.ArgumentParser.__init__",
        "<builtin>.hasattr",
        "argparse.ArgumentParser.parse_args",
        "<builtin>.type",
        "inspect.findsource",
        "<builtin>.repr",
        "argparse._ActionsContainer.add_argument",
        "importlib",
        "<builtin>.getattr",
        "<builtin>.print"
    ],
    "rich.padding": [
        "padding.Padding",
        "rich.padding.Padding",
        "typing.inner",
        "rich"
    ],
    "sre_parse.parse": [
        "sre_parse._parse_sub",
        "sre_parse.Tokenizer.seek",
        "sre_parse.fix_flags",
        "sre_parse.State.__init__",
        "sre_parse.Tokenizer.__init__"
    ],
    "ssl": [
        "enum.__prepare__",
        "enum.EnumMeta._convert_",
        "ssl.SSLContext",
        "<builtin>.hasattr",
        "enum.__new__",
        "ssl._ASN1Object",
        "ssl._TLSMessageType",
        "ssl.Purpose",
        "collections.namedtuple",
        "ssl.SSLSocket",
        "enum.__members__",
        "ssl._TLSAlertType",
        "<builtin>.getattr",
        "ssl.SSLObject",
        "ssl._TLSContentType",
        "ssl.TLSVersion"
    ],
    "email.message._done_event": [
        "locks.Event.__init__"
    ],
    "requests.auth": [
        "requests.auth.AuthBase",
        "requests.auth.HTTPDigestAuth",
        "requests.auth.HTTPProxyAuth",
        "requests.auth.HTTPBasicAuth"
    ],
    "typing.Generic": [
        "typing._tp_cache"
    ],
    "difflib.SequenceMatcher.set_seq2": [
        "difflib.SequenceMatcher.__chain_b"
    ],
    "logging.getLogger": [
        "logging.Manager.getLogger"
    ],
    "requests.exceptions": [
        "requests.exceptions.HTTPError",
        "requests.exceptions.URLRequired",
        "requests.exceptions.InvalidSchema",
        "requests.exceptions.TooManyRedirects",
        "requests.exceptions.RequestsWarning",
        "requests.exceptions.ContentDecodingError",
        "requests.exceptions.RequestException",
        "requests.exceptions.Timeout",
        "requests.exceptions.InvalidJSONError",
        "requests.exceptions.RequestsDependencyWarning",
        "requests.exceptions.ProxyError",
        "requests.exceptions.ReadTimeout",
        "requests.exceptions.JSONDecodeError",
        "requests.exceptions.RetryError",
        "requests.exceptions.ConnectionError",
        "requests.exceptions.ConnectTimeout",
        "requests.exceptions.StreamConsumedError",
        "requests.exceptions.FileModeWarning",
        "requests.exceptions.UnrewindableBodyError",
        "requests.compat",
        "requests.exceptions.MissingSchema",
        "requests.exceptions.InvalidHeader",
        "requests.exceptions.InvalidURL",
        "requests.exceptions.SSLError",
        "requests.exceptions.ChunkedEncodingError",
        "requests.exceptions.InvalidProxyURL"
    ],
    "typing._GenericAlias.__mro_entries__": [
        "<builtin>.any",
        "<builtin>.isinstance",
        "<builtin>.issubclass",
        "<builtin>.tuple"
    ],
    "textual.widgets._footer.Footer": [
        "typing.__new__",
        "textual.reactive.Reactive.__init__"
    ],
    "make.CMakeLexer": [
        "pygments.lexer.bygroups"
    ],
    "docutils.parsers.rst.states": [
        "<builtin>.ord",
        "docutils.parsers.rst.states.RSTStateMachine",
        "docutils.parsers.rst.languages",
        "docutils.parsers.rst.MarkupMismatch",
        "docutils.parsers.rst.states.Inliner",
        "docutils.parsers.rst.ParserError",
        "docutils.parsers.rst.states.InterpretedRoleNotImplementedError",
        "docutils.parsers.rst.Line",
        "docutils.parsers.rst.OptionList",
        "docutils.parsers.rst.states.UnknownInterpretedRoleError",
        "docutils.parsers.rst.states.RFC2822List",
        "docutils.parsers.rst.SubstitutionDef",
        "docutils.parsers.rst.DefinitionList",
        "docutils.parsers.rst.RFC2822List",
        "docutils.parsers.rst.states.EnumeratedList",
        "docutils.utils.punctuation_chars",
        "docutils.parsers.rst.states.BulletList",
        "docutils.parsers.rst.MarkupError",
        "docutils.parsers.rst.EnumeratedList",
        "docutils.parsers.rst.states.FieldList",
        "docutils.parsers.rst.states.Body",
        "docutils.parsers.rst.Body",
        "docutils.parsers.rst.states.ExtensionOptions",
        "docutils.parsers.rst.states.SubstitutionDef",
        "docutils.parsers.rst.states.Explicit",
        "docutils.parsers.rst.SpecializedBody",
        "docutils.parsers.rst.states.DefinitionList",
        "docutils.parsers.rst.RSTState",
        "docutils.parsers.rst.states.NestedStateMachine",
        "docutils.parsers.rst.states.SpecializedText",
        "docutils.parsers.rst.UnknownInterpretedRoleError",
        "docutils.parsers.rst.states.Text",
        "docutils.parsers.rst.RFC2822Body",
        "docutils.parsers.rst.Definition",
        "docutils.parsers.rst.Struct",
        "docutils.parsers.rst.states.Line",
        "docutils.parsers.rst.ExtensionOptions",
        "docutils.parsers.rst.QuotedLiteralBlock",
        "docutils.parsers.rst.Explicit",
        "docutils.parsers.rst.states.LineBlock",
        "docutils.parsers.rst.BulletList",
        "docutils.parsers.rst.states.SpecializedBody",
        "docutils.parsers.rst.states.ParserError",
        "docutils.parsers.rst.states.RSTState",
        "docutils.parsers.rst.NestedStateMachine",
        "docutils.parsers.rst.LineBlock",
        "docutils.parsers.rst.tableparser",
        "docutils.parsers.rst.states.MarkupError",
        "docutils.parsers.rst.Inliner",
        "docutils.parsers.rst.SpecializedText",
        "docutils.parsers.rst.InterpretedRoleNotImplementedError",
        "docutils.parsers.rst.states.MarkupMismatch",
        "docutils.parsers.rst.states.RFC2822Body",
        "docutils.utils.roman",
        "docutils.parsers.rst.RSTStateMachine",
        "docutils.parsers.rst.states.Struct",
        "docutils.parsers.rst.states.Definition",
        "docutils.parsers.rst.FieldList",
        "docutils.parsers.rst.Text",
        "docutils.utils.urischemes",
        "docutils.parsers.rst.states.QuotedLiteralBlock",
        "docutils.parsers.rst.states.OptionList"
    ],
    "smv": [
        "smv.NuSMVLexer",
        "pygments.lexer.__new__"
    ],
    "tracemalloc": [
        "tracemalloc._Traces",
        "tracemalloc.Statistic",
        "functools.total_ordering",
        "tracemalloc.Filter",
        "tracemalloc.Snapshot",
        "tracemalloc.Trace",
        "tracemalloc.Frame",
        "tracemalloc.BaseFilter",
        "tracemalloc.Traceback",
        "tracemalloc.StatisticDiff",
        "tracemalloc.DomainFilter"
    ],
    "rich.repr.rich_repr": [
        "rich.repr.auto"
    ],
    "subprocess.check_output": [
        "subprocess.Popen.__del__",
        "subprocess.run",
        "<builtin>.ValueError"
    ],
    "ssl._ASN1Object": [
        "<builtin>.classmethod"
    ],
    "chapel": [
        "pygments.lexer.__new__",
        "chapel.ChapelLexer"
    ],
    "dataclasses": [
        "dataclasses._InitVarMeta",
        "dataclasses._MISSING_TYPE",
        "re.compile",
        "dataclasses._DataclassParams",
        "dataclasses._HAS_DEFAULT_FACTORY_CLASS",
        "dataclasses._FIELD_BASE",
        "dataclasses.InitVar",
        "dataclasses._FIELD_BASE.__init__",
        "dataclasses.Field",
        "dataclasses.FrozenInstanceError"
    ],
    "optparse.OptionContainer.__init__": [
        "optparse.OptionContainer.set_description",
        "optparse.OptionParser._create_option_list",
        "optparse.OptionContainer.set_conflict_handler",
        "optparse.OptionGroup._create_option_list"
    ],
    "email.EmailHeaderLexer": [
        "pygments.lexer.bygroups"
    ],
    "gettext": [
        "gettext.GNUTranslations",
        "posixpath.join",
        "ntpath.join",
        "re.compile",
        "locale",
        "<builtin>.enumerate",
        "gettext.NullTranslations"
    ],
    "rich.style.Style.normalize": [
        "rich.style.Style.parse",
        "<builtin>.str",
        "rich.style.Style.__str__"
    ],
    "rich.text": [
        "rich.text.Span",
        "rich.text.Text.__init__",
        "rich.emoji",
        "rich.control",
        "re.compile",
        "rich.measure",
        "rich._wrap",
        "rich._pick",
        "rich.text.Text"
    ],
    "textual.message_pump.MessagePump.on_event": [
        "textual.log",
        "_callback.invoke",
        "textual.message_pump.MessagePump._get_dispatch_methods"
    ],
    "textual.views._dock_view.DockView.__init__": [
        "textual.layouts.dock.DockLayout.__init__",
        "textual.view.View.__init__",
        "<builtin>.super"
    ],
    "dalvik.SmaliLexer": [
        "pygments.lexer.bygroups"
    ],
    "http.cookiejar.split_header_words": [
        "<str>.group",
        "<str>.sub",
        "<str>.search",
        "re.subn",
        "<list>.append",
        "http.cookiejar.unmatched",
        "<builtin>.isinstance",
        "<str>.rstrip"
    ],
    "docutils.statemachine.State.make_transitions": [
        "<builtin>.isinstance",
        "docutils.statemachine.State.make_transition"
    ],
    "hmac": [
        "<builtin>.bytes",
        "<builtin>.frozenset",
        "<builtin>.range",
        "hmac.HMAC"
    ],
    "click.formatting.join_options": [
        "<builtin>.len",
        "parser.split_opt"
    ],
    "comal.Comal80Lexer": [
        "pygments.lexer.words.__init__"
    ],
    "dataclasses._repr_fn": [
        "dataclasses._create_fn",
        "dataclasses._recursive_repr"
    ],
    "functools.singledispatch": [
        "weakref.WeakKeyDictionary.__init__",
        "functools.update_wrapper",
        "<builtin>.getattr"
    ],
    "click.decorators.decorator": [
        "click.core.Option.__init__",
        "click.decorators._param_memo",
        "click.core.Command.__init__",
        "click.core.Argument.__init__"
    ],
    "commonmark.node.Node.is_container": [
        "node.is_container"
    ],
    "click.utils": [
        "contextlib.contextmanager",
        "typing.inner",
        "click.utils.KeepOpenFile",
        "typing.TypeVar.__init__",
        "typing._VariadicGenericAlias.__getitem__",
        "click.utils.PacifyFlushWrapper",
        "re.compile",
        "click.utils.LazyFile",
        "functools.lru_cache",
        "certifi.core.where",
        "functools.decorating_function",
        "request.make_headers",
        "re.split"
    ],
    "pygments.lexer.RegexLexer.get_tokens_unprocessed": [
        "<builtin>.list",
        "<builtin>.type",
        "pygments.lexer.callback",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.abs"
    ],
    "sre_parse.Tokenizer.seek": [
        "sre_parse.Tokenizer.__next"
    ],
    "rich.traceback.Frame": [
        "typing.inner"
    ],
    "inspect.Signature.__str__": [
        "inspect.Parameter.__str__",
        "<builtin>.str"
    ],
    "urllib3.response.HTTPResponse": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "contextlib.contextmanager"
    ],
    "utllib3.poolmanager.PoolManager.connection_from_context": [
        "utllib3.poolmanager.PoolManager.connection_from_pool_key",
        "utllib3.poolmanager._default_key_normalizer"
    ],
    "rich.theme.Theme.__init__": [
        "<builtin>.isinstance",
        "rich.theme.<dictcomp>"
    ],
    "subprocess.Popen._close_pipe_fds": [
        "contextlib._BaseExitStack.callback",
        "contextlib._BaseExitStack.__init__",
        "<builtin>.getattr",
        "contextlib.ExitStack.__exit__",
        "contextlib.ExitStack.__enter__"
    ],
    "rich._inspect.Inspect._make_title": [
        "inspect.ismodule",
        "<builtin>.type",
        "<builtin>.str",
        "inspect.isclass",
        "<builtin>.callable"
    ],
    "inspect.Signature.from_callable": [
        "inspect._signature_from_callable"
    ],
    "urllib3.packages.six._SixMetaPathImporter.is_package": [
        "<builtin>.hasattr",
        "urllib3.packages.six._SixMetaPathImporter.__get_module"
    ],
    "sre_parse.Tokenizer.match": [
        "sre_parse.Tokenizer.__next"
    ],
    "codecs.BufferedIncrementalDecoder.__init__": [
        "codecs.IncrementalDecoder.__init__"
    ],
    "rich._cell_widths": [],
    "warnings._add_filter": [
        "<list>.insert",
        "<list>.append",
        "<list>.remove",
        "warnings._filters_mutated"
    ],
    "ipaddress._make_netmask": [
        "ipaddress._ip_int_from_prefix",
        "ipaddress.IPv6Address.__init__",
        "ipaddress.IPv4Address.__init__",
        "ipaddress._prefix_from_prefix_string"
    ],
    "inspect.isbuiltin": [
        "<builtin>.isinstance"
    ],
    "rich.console.Console.print_exception": [
        "traceback.Traceback",
        "rich.console.Console.print"
    ],
    "rich.style.Style._make_color": [
        "rich.color.Color.parse"
    ],
    "string": [
        "string.Template",
        "string.Formatter",
        "string._TemplateMetaclass.__init__",
        "string._TemplateMetaclass"
    ],
    "importlib.metadata._from_text": [
        "importlib.metadata._from_config",
        "configparser.RawConfigParser.__init__",
        "configparser.RawConfigParser.read_string"
    ],
    "rich.style._Bit.__init__": [],
    "textual.geometry.region": [],
    "requests.structures.CaseInsensitiveDict.__init__": [
        "_collections_abc.MutableMapping.update"
    ],
    "pathlib": [
        "pathlib._PathParents",
        "functools._lru_cache_wrapper.wrapper",
        "<builtin>.hasattr",
        "pathlib._PosixFlavour",
        "pathlib.PureWindowsPath",
        "pathlib.PurePath",
        "pathlib._Flavour.__init__",
        "pathlib.PurePosixPath",
        "pathlib._Selector",
        "pathlib._Accessor",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function",
        "pathlib._WildcardSelector",
        "pathlib._WindowsFlavour",
        "pathlib.PosixPath",
        "pathlib.Path",
        "pathlib._RecursiveWildcardSelector",
        "pathlib.WindowsPath",
        "pathlib._NormalAccessor",
        "pathlib._TerminatingSelector",
        "pathlib._Flavour",
        "pathlib._PreciseSelector"
    ],
    "optparse.OptionGroup.__init__": [
        "optparse.OptionContainer.__init__"
    ],
    "commonmark.inlines.InlineParser.handleDelim": [
        "<map>.get",
        "commonmark.node.Node.append_child",
        "commonmark.inlines.InlineParser.scanDelims",
        "commonmark.inlines.text"
    ],
    "rich.containers": [
        "rich.text",
        "typing.TypeVar.__init__",
        "rich.containers.Renderables",
        "rich.containers.Lines"
    ],
    "rich_rst": [
        "rich.rule",
        "rich.traceback.install",
        "rich_rst.MLStripper",
        "docutils.parsers.rst",
        "rich_rst.RSTVisitor",
        "docutils.nodes",
        "html.parser",
        "rich_rst.RestructuredText",
        "docutils.io"
    ],
    "email.feedparser.BufferedSubFile.close": [
        "email.feedparser.BufferedSubFile.pushlines"
    ],
    "shlex": [
        "shlex._print_tokens",
        "shlex.shlex",
        "shlex.shlex.__init__",
        "<builtin>.open",
        "re.compile",
        "<builtin>.len"
    ],
    "html.HamlLexer": [
        "css._starts_block",
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__",
        "pygments.lexer.using"
    ],
    "types.FloatRange": [
        "typing.inner"
    ],
    "rich.markup.RstLexer": [
        "re.escape",
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "configs.Cfengine3Lexer": [
        "pygments.lexer.bygroups"
    ],
    "rich.console.detect_legacy_windows": [
        "rich.console.get_windows_console_features"
    ],
    "textual.geometry.Region.translate": [],
    "_osx_support.customize_config_vars": [
        "_osx_support._supports_universal_builds",
        "_osx_support._check_for_unavailable_sdk",
        "_osx_support._override_all_archs",
        "_osx_support._remove_universal_flags"
    ],
    "commonmark.inlines.InlineParser.match": [
        "<str>.end",
        "re.search",
        "<str>.group"
    ],
    "rich_rst.RSTVisitor.depart_paragraph": [
        "rich.text.Text.append",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "random.Random.seed": [
        "<builtin>.ord",
        "<builtin>.super",
        "<builtin>.map",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "inspect._signature_fromstr.parse_name": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "logging.Logger._log": [
        "logging.Logger.makeRecord",
        "<builtin>.type",
        "logging.Logger.findCaller",
        "logging.Logger.handle",
        "<builtin>.isinstance"
    ],
    "requests.check_compatibility": [
        "<builtin>.Exception",
        "<str>.split",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "genericpath._check_arg_types": [
        "<builtin>.TypeError",
        "<builtin>.isinstance"
    ],
    "rich.console.group.decorator": [
        "functools.wraps"
    ],
    "typing._make_nmtuple": [
        "collections.namedtuple",
        "<builtin>.dict"
    ],
    "email.feedparser.BufferedSubFile.__next__": [
        "email.feedparser.BufferedSubFile.readline"
    ],
    "rich.markup._parse": [
        "<str>.finditer",
        "<builtin>.len"
    ],
    "ipaddress._IPAddressBase._report_invalid_netmask": [],
    "rich.syntax": [
        "typing.inner",
        "rich.syntax.Syntax.__init__",
        "rich.syntax._SyntaxHighlightRange",
        "pygments.lexers",
        "pygments.styles",
        "pygments.lexer",
        "argparse.ArgumentParser.parse_args",
        "rich.containers",
        "rich.syntax.ANSISyntaxTheme",
        "platform.system",
        "typing.__new__",
        "rich.syntax.Syntax",
        "codecs.StreamRecoder.read",
        "rich.padding",
        "rich.style.Style.__init__",
        "pygments.style",
        "argparse.ArgumentParser.__init__",
        "rich.syntax.PygmentsSyntaxTheme",
        "textwrap",
        "rich.syntax.Syntax.from_path",
        "argparse._ActionsContainer.add_argument",
        "rich.syntax.SyntaxTheme"
    ],
    "typing.SupportsRound": [
        "abc.abstractmethod"
    ],
    "textual.app": [
        "warnings.simplefilter",
        "textual._context",
        "textual.app.App.run",
        "textual.binding",
        "typing.TypeVar.__init__",
        "textual._animator",
        "textual.app.App",
        "textual._event_broker",
        "textual.app.ActionError",
        "textual.reactive.Reactive.__set_name__",
        "textual.driver",
        "textual.actions",
        "textual.layouts.dock",
        "textual.views",
        "textual._callback"
    ],
    "logging.FileHandler._open": [
        "<builtin>.open"
    ],
    "urllib3.response.HTTPResponse.getheader": [
        "_collections_abc.Mapping.get"
    ],
    "rich.view.View.refresh_layout": [
        "emil.message.Message.__init__",
        "textual.view.View.is_root_view",
        "textual.widget.Widget.size",
        "textual.widget.Widget.Widget._update_size",
        "rich.view.View.refresh_layout",
        "textual.message_pump.MessagePump.post_message_no_wait",
        "textual.widget.Widget.console",
        "textual.geometry.size",
        "textual.app.App.view",
        "textual.layout.Layout.map",
        "textual.message_pump.app",
        "textual.layout.Layout.reflow",
        "textual.geometry.Size.__bool__",
        "rich.console.size",
        "textual.layout.Layout.__iter__",
        "events.Resize.__init__",
        "textual.layout.Layout.mount_all"
    ],
    "http.cookiejar.CookieJar.__init__": [
        "http.cookiejar.DefaultCookiePolicy.__init__",
        "threading.RLock"
    ],
    "textual.layout": [
        "textual.layout_map",
        "textual.layout.NoWidget",
        "textual._loop",
        "textual.layout.ReflowResult",
        "textual._profile",
        "textual.layout.OrderedRegion",
        "textual.layout.Layout",
        "textual.layout.WidgetPlacement",
        "textual.layout.LayoutUpdate",
        "textual._lines"
    ],
    "subprocess.Popen._get_handles": [
        "subprocess.Popen._get_devnull",
        "<builtin>.isinstance"
    ],
    "click._compat._make_cached_stream_func": [
        "weakref.WeakKeyDictionary.__init__"
    ],
    "optparse.OptionParser.set_usage": [
        "gettext.gettext"
    ],
    "data": [
        "data.YamlLexer",
        "data.JsonBareObjectLexer",
        "data.JsonLdLexer",
        "data.JsonLexer",
        "data.YamlLexerContext",
        "pygments.lexer.__new__"
    ],
    "requests.sessions.Session.merge_environment_settings": [
        "utils.get_environ_proxies",
        "collections.ChainMap.get",
        "requests.utils.get_environ_proxies",
        "<map>.items",
        "requests.sessions.merge_setting",
        "weakref.WeakKeyDictionary.get",
        "weakref.WeakValueDictionary.get",
        "_collections_abc.Mapping.get"
    ],
    "grammar_notation.JsgfLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__",
        "pygments.lexer.using"
    ],
    "graphics.PovrayLexer": [
        "pygments.lexer.words.__init__"
    ],
    "ntpath.normpath": [
        "<str>.replace",
        "<str>.endswith",
        "<str>.lstrip",
        "ntpath.splitdrive",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<str>.append",
        "<str>.split",
        "os._fspath",
        "<str>.startswith"
    ],
    "rich.markup.render.pop_style": [
        "<builtin>.enumerate",
        "<builtin>.KeyError",
        "<builtin>.reversed"
    ],
    "textual.drivers.linux_driver": [
        "textual._xterm_parser",
        "rich.console.Console.__init__",
        "textual.app.App.run"
    ],
    "sre_compile._simple": [
        "sre_parse.SubPattern.__len__",
        "<builtin>.len",
        "sre_parse.SubPattern.__getitem__"
    ],
    "oberon": [
        "oberon.ComponentPascalLexer"
    ],
    "subprocess.Popen.wait": [
        "time.monotonic",
        "<builtin>.min",
        "subprocess.Popen._wait"
    ],
    "requests.models.PreparedRequest.prepare_method": [
        "<str>.upper",
        "_internal_utils.to_native_string"
    ],
    "data.YamlLexer": [
        "data.parse_plain_scalar_indent",
        "token._TokenType.__getattr__",
        "data.parse_block_scalar_empty_line",
        "data.parse_block_scalar_indent",
        "data.something",
        "pygments.lexer.bygroups",
        "data.set_indent",
        "data.set_block_scalar_indent",
        "data.save_indent",
        "data.reset_indent"
    ],
    "http.cookiejar.CookieJar.extract_cookies": [
        "http.cookiejar.CookieJar.make_cookies",
        "http.cookiejar._debug",
        "http.cookiejar.CookieJar.set_cookie",
        "requests.cookies.RequestsCookieJar.set_cookie",
        "requests.cookies.MockResponse.info"
    ],
    "commonmark.inlines.InlineParser.processEmphasis": [
        "commonmark.inlines.InlineParser.removeDelimiter",
        "commonmark.node.Node.unlink",
        "inlines.removeDelimitersBetween",
        "commonmark.node.Node.insert_after",
        "commonmark.inlines.InlineParser.removeDelimitersBetween",
        "commonmark.node.Node.__init__",
        "commonmark.node.Node.append_child",
        "<builtin>.len"
    ],
    "requests.__version__": [],
    "rich.style.Style.get_html_style": [
        "rich.style.Style.bgcolor",
        "rich.color.Color.get_truecolor",
        "rich.style._Bit.__get__",
        "rich.style.Style.color",
        "color_triplet.hex"
    ],
    "roboconf.RoboconfGraphLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__"
    ],
    "requests.models.PreparedRequest.prepare_cookies": [
        "requests.cookies.get_cookie_header",
        "<builtin>.isinstance"
    ],
    "random.Random.__init__": [
        "random.Random.seed"
    ],
    "zipfile.Path.__init__": [
        "zipfile.make"
    ],
    "pygments.token._TokenType.__getattr__": [
        "<builtin>.setattr",
        "pygments.token._TokenType.__init__"
    ],
    "ntpath.isabs": [
        "<str>.replace",
        "ntpath.splitdrive",
        "ntpath._get_bothseps",
        "<map>.replace",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<map>.startswith",
        "os._fspath",
        "<str>.startswith"
    ],
    "urllib.parse.ParseResult.geturl": [
        "urllib.parse.urlunparse"
    ],
    "sieve": [
        "pygments.lexer.__new__",
        "sieve.SieveLexer"
    ],
    "csound.CsoundDocumentLexer": [
        "pygments.lexer.using"
    ],
    "textual.layout.Layout": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "abc.abstractmethod"
    ],
    "click.core.ParameterSource": [
        "enum._EnumDict.__setitem__"
    ],
    "rich.text.Text.right_crop": [
        "<builtin>.min",
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "textual.driver": [
        "textual.driver.Driver"
    ],
    "requests.certs": [
        "certifi",
        "<builtin>.print"
    ],
    "rich.markdown.TextElement.on_leave": [
        "rich.markdown.MarkdownContext.leave_style"
    ],
    "urllib3.util.url._idna_encode": [
        "<builtin>.any",
        "<builtin>.ord"
    ],
    "commonmark.inlines.InlineParser.parseCloseBracket": [
        "<map>.get",
        "commonmark.node.Node.unlink",
        "commonmark.node.Node.append_child",
        "commonmark.inlines.InlineParser.processEmphasis",
        "commonmark.inlines.InlineParser.parseLinkDestination",
        "commonmark.inlines.InlineParser.spnl",
        "commonmark.inlines.InlineParser.peek",
        "commonmark.node.Node.__init__",
        "re.search",
        "commonmark.inlines.InlineParser.parseLinkLabel",
        "commonmark.inlines.InlineParser.removeBracket"
    ],
    "smithy": [
        "smithy.SmithyLexer",
        "pygments.lexer.__new__"
    ],
    "email.feedparser.FeedParser._parsegen": [
        "email.feedparser.BufferedSubFile.__next__",
        "email.feedparser.BufferedSubFile.__iter__",
        "email.feedparser.FeedParser._new_message",
        "<builtin>.str",
        "emil.message.Message.get_content_maintype",
        "email.feedparser.FeedParser._parse_headers",
        "<builtin>.isinstance",
        "emil.message.Message.get_content_type",
        "emil.message.Message.set_payload",
        "<builtin>.len"
    ],
    "rich.abc": [
        "rich.abc.RichRenderable",
        "rich.text.Text.__init__",
        "<builtin>.isinstance",
        "<builtin>.print"
    ],
    "rich.console.Console._detect_color_system": [
        "<map>.get",
        "_collections_abc.Mapping.get",
        "rich.console.is_dumb_terminal",
        "rich.console.get_windows_console_features",
        "rich.console.is_terminal"
    ],
    "inspect._signature_is_functionlike": [
        "<builtin>.callable",
        "<builtin>.isinstance",
        "inspect.isclass",
        "<builtin>.getattr"
    ],
    "ast.parse": [
        "<builtin>.isinstance",
        "<builtin>.compile"
    ],
    "re.compile": [
        "re._compile"
    ],
    "rich.style.Style.transparent_background": [
        "rich.color.Color.is_default"
    ],
    "rich.text.Text.__add__": [
        "rich.text.Text.copy",
        "rich.text.Text.append",
        "<builtin>.isinstance"
    ],
    "posixpath.basename": [
        "posixpath._get_sep",
        "<str>.rfind",
        "os._fspath"
    ],
    "docutils.frontend.OptionParser.__init__": [
        "optparse.OptionParser.__init__",
        "optparse.TitledHelpFormatter.__init__",
        "docutils.frontend.OptionParser.populate_from_components",
        "<builtin>.super"
    ],
    "rich.containers.Lines": [
        "typing.inner",
        "typing.overload"
    ],
    "requests.sessions.merge_setting": [
        "collections.OrderedDict.__init__",
        "requests.utils.to_key_val_list",
        "requests.structures.CaseInsensitiveDict.__init__",
        "collections.OrderedDict.items",
        "<builtin>.isinstance",
        "abc.ABCMeta.__instancecheck__",
        "_collections_abc.Mapping.items",
        "_collections_abc.MutableMapping.update"
    ],
    "rich.file_proxy.FileProxy": [
        "<builtin>.property"
    ],
    "requests.hooks.dispatch_hook": [
        "<builtin>.hasattr"
    ],
    "hashlib.__get_openssl_constructor": [
        "hashlib.__get_builtin_constructor",
        "<builtin>.getattr"
    ],
    "installers.SourcesListLexer": [
        "pygments.lexer.bygroups"
    ],
    "linux_driver.LinuxDriver.run_input_thread": [
        "linux_driver.LinuxDriver._run_input_thread"
    ],
    "sre_parse.State.checkgroup": [
        "sre_parse.groups"
    ],
    "emil.message.Message.get_content_type": [
        "emil.message.Message.get",
        "email.message._splitparam"
    ],
    "posixpath.normpath": [
        "<list>.append",
        "<builtin>.isinstance",
        "<list>.pop",
        "<str>.split",
        "os._fspath",
        "<str>.startswith"
    ],
    "urllib.parse._NetlocResultMixinBase": [
        "<builtin>.property"
    ],
    "functools.wraps": [],
    "requests.cookies.extract_cookies_to_jar": [
        "requests.cookies.MockRequest.__init__",
        "http.cookiejar.CookieJar.extract_cookies",
        "<builtin>.hasattr",
        "requests.cookies.MockResponse.__init__"
    ],
    "ipaddress._BaseV4._make_netmask": [
        "ipaddress._IPAddressBase._prefix_from_prefix_string",
        "ipaddress._IPAddressBase._ip_int_from_prefix",
        "ipaddress._IPAddressBase._report_invalid_netmask",
        "<builtin>.isinstance",
        "ipaddress.IPv4Address.__init__",
        "ipaddress._IPAddressBase._prefix_from_ip_string"
    ],
    "click.utils.KeepOpenFile": [
        "typing.inner"
    ],
    "rich.markdown.create": [
        "rich.markdown.CodeBlock.__init__",
        "rich.markdown.ImageItem.__init__",
        "rich.markdown.Paragraph.__init__",
        "rich.markdown.Heading.__init__"
    ],
    "rich.table.Table._get_cells": [
        "rich.console.Console.get_style",
        "rich.table.Table.padding",
        "<builtin>.any",
        "typing._VariadicGenericAlias.__getitem__",
        "rich.table.Table.cells",
        "rich.table.Table.get_padding",
        "<builtin>.getattr",
        "<builtin>.len",
        "_loop.loop_first_last",
        "rich.padding.Padding.__init__"
    ],
    "data.JsonLdLexer": [],
    "rich_cli.__main__.main": [
        "rich_cli.__main__.render_csv",
        "rich_cli.markdown",
        "rich.panel.Panel.__init__",
        "rich.console.Console.save_svg",
        "posixpath.splitext",
        "rich.syntax.Syntax.__init__",
        "rich_rst",
        "textual.app.App.run",
        "syntax.Syntax.__init__",
        "rich.console.Console.render_lines",
        "rich_cli.__main__.ForceWidth.__init__",
        "<str>.upper",
        "<str>.splitlines",
        "rich_rst.RestructuredText.__init__",
        "<builtin>.getattr",
        "rich.console.Console.__init__",
        "rich_cli.__main__.read_resource",
        "rich.styled",
        "<builtin>.int",
        "rich_cli.__main__._line_range",
        "rich._inspect.Inspect.__init__",
        "rich.json.JSON.__init__",
        "rich.style.Style.parse",
        "rich.align.Align.__init__",
        "codecs.BufferedIncrementalDecoder.decode",
        "rule.Rule.__init__",
        "<builtin>.eval",
        "<str>.split",
        "rich_cli.__main__.render_ipynb",
        "rich.text.Text.from_markup",
        "rich.rule.Rule.__init__",
        "rich_cli.__main__.on_error",
        "rich.console.Console.print_exception",
        "rich.json",
        "codecs.StreamRecoder.read",
        "rich.console.Console.save_html",
        "<builtin>.tuple",
        "<builtin>.bool",
        "rich_cli.pager",
        "<builtin>.len",
        "rich.syntax",
        "rich_cli.pager.PagerRenderable.__init__",
        "rich.console.Console.print",
        "json.JSON.__init__",
        "styled.Styled.__init__",
        "rich_cli.__main__.main.print_usage",
        "urllib.parse",
        "_inspect.Inspect.__init__",
        "rich_cli.markdown.Markdown.__init__",
        "codecs.StreamRecoder.write",
        "rich._inspect",
        "urllib.parse.urlparse",
        "rich.padding.Padding.__init__"
    ],
    "asyncio.base_futures": [
        "asyncio.format_helpers"
    ],
    "requests.sessions.SessionRedirectMixin.get_redirect_target": [
        "requests.models.Response.is_redirect",
        "requests.structures.CaseInsensitiveDict.__getitem__",
        "requests._internal_utils.to_native_string",
        "_internal_utils.to_native_string"
    ],
    "pygments.filter": [
        "pygments.filter.FunctionFilter",
        "pygments.filter.Filter"
    ],
    "requests.cookies.get_cookie_header": [
        "<map>.get",
        "http.cookiejar.CookieJar.add_cookie_header",
        "requests.cookies.MockRequest.__init__",
        "requests.cookies.MockRequest.get_new_headers"
    ],
    "http.cookiejar.DefaultCookiePolicy.set_ok_domain": [
        "http.cookiejar.eff_request_host",
        "<builtin>.len",
        "http.cookiejar.DefaultCookiePolicy.is_not_allowed",
        "http.cookiejar.DefaultCookiePolicy.is_blocked"
    ],
    "objective.SwiftLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "rich_cli.pager.PagerApp.on_mount": [
        "textual.widgets._scroll_view.ScrollView.__init__",
        "textual.widgets._scroll_view.ScrollView.update"
    ],
    "textual.message_pump.MessagePump.on_callback": [
        "reactive.update_watcher"
    ],
    "html.HtmlLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "fnmatch.fnmatch": [
        "ntpath.normcase",
        "fnmatch.fnmatchcase",
        "posixpath.normcase"
    ],
    "csound.CsoundOrchestraLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "rdf.TurtleLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.default.__init__"
    ],
    "asyncio.selector_events": [
        "asyncio.selector_events.BaseSelectorEventLoop",
        "asyncio.selector_events._SelectorTransport",
        "asyncio.selector_events._SelectorSocketTransport",
        "asyncio.selector_events._SelectorDatagramTransport"
    ],
    "rich.color.ColorType": [],
    "locale.normalize": [
        "<map>.get",
        "<str>.replace",
        "<str>.lower",
        "locale._replace_encoding",
        "<str>.split"
    ],
    "urllib3.connection._match_hostname": [
        "ssl_.is_ipaddress",
        "ssl_match_hostname.match_hostname"
    ],
    "requests.sessions": [
        "requests.sessions.SessionRedirectMixin",
        "requests.adapters",
        "requests.sessions.Session"
    ],
    "rich.table.Table.add_row": [
        "rich.table.Table.add_cell",
        "<builtin>.list",
        "<builtin>.type",
        "<builtin>.enumerate",
        "protocol.is_renderable",
        "<builtin>.len"
    ],
    "rich.text.Text": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "rich.color.blend_rgb": [
        "<builtin>.int"
    ],
    "rich.repr.auto": [
        "setuptools.command.egg_info.FileList.recursive_exclude",
        "http.server.SimpleHTTPRequestHandler.__init__",
        "typing.inner",
        "urllib3.poolmanager._default_key_normalizer",
        "attr._next_gen.define",
        "_itertools.unique_everseen",
        "pkg_resources.extern.more_itertools.more.lt",
        "setuptools.monkey.patch_for_msvc_specialized_compiler.patch_params",
        "_collections.defaultdict",
        "_functools.partial",
        "rich.repr.auto.do_replace",
        "setuptools.config._apply_pyprojecttoml.reduce",
        "configparser.SectionProxy.get",
        "operator.lt",
        "pkg_resources.extern.more_itertools.more.gt",
        "rich.repr.do_replace",
        "ntpath.relpath",
        "collections.defaultdict"
    ],
    "ntpath.expanduser": [
        "os._fscodec.fsdecode",
        "ntpath.join",
        "ntpath._get_bothseps",
        "ntpath.dirname",
        "<builtin>.isinstance",
        "<builtin>.len",
        "os._fscodec.fsencode",
        "os._fspath",
        "<str>.startswith"
    ],
    "urllib.parse._checknetloc": [
        "<str>.replace",
        "<str>.isascii",
        "<builtin>.ValueError"
    ],
    "urllib3.util.connection._has_ipv6": [
        "urllib3.contrib._appengine_environ.is_appengine_sandbox",
        "socket.socket.__init__",
        "socket.socket.close"
    ],
    "rich_cli.__main__.on_error": [
        "rich.text.Text.stylize",
        "rich.console.Console.print",
        "rich.text.Text.__init__",
        "<builtin>.str"
    ],
    "requests.utils.check_header_validity": [
        "<builtin>.type",
        "requests.utils._validate_header_part"
    ],
    "textual.layouts.grid.GridLayout.show_column": [
        "textual.layout.Layout.require_update"
    ],
    "typing.inner": [
        "typing.__getitem_inner__",
        "typing._GenericAlias.__hash__",
        "typing.ForwardRef.__hash__",
        "typing.__getitem__",
        "typing._GenericAlias.__eq__",
        "typing._SpecialForm.__hash__",
        "typing.__class_getitem__"
    ],
    "asyncio.queues": [
        "asyncio.queues.Queue",
        "asyncio.queues.PriorityQueue",
        "asyncio.queues.LifoQueue",
        "asyncio.queues.QueueFull",
        "asyncio.queues.QueueEmpty"
    ],
    "rich_cli.pager.PagerApp.__init__": [
        "textual.app.App.__init__",
        "<builtin>.super"
    ],
    "ssl.__new__": [],
    "rich._stack": [
        "rich._stack.Stack",
        "typing.inner",
        "typing._GenericAlias.__mro_entries__",
        "typing.TypeVar.__init__",
        "typing.__init_subclass__"
    ],
    "threading.Thread.run": [
        "subprocess.Popen._readerthread",
        "socketserver.ThreadingMixIn.process_request_thread",
        "textual.drivers.linux_driver.LinuxDriver.run_input_thread"
    ],
    "importlib.metadata.FastPath.zip_children": [
        "zipfile.Path.__init__"
    ],
    "zipfile.CompleteDirs": [
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "rich._win32_console": [
        "rich._win32_console.LegacyWindowsTerm.write_styled",
        "rich._win32_console.WindowsCoordinates",
        "rich._win32_console.LegacyWindowsTerm",
        "rich._win32_console.LegacyWindowsTerm.erase_start_of_line",
        "rich._win32_console.CONSOLE_SCREEN_BUFFER_INFO",
        "rich._win32_console.LegacyWindowsTerm.erase_line",
        "rich._win32_console.LegacyWindowsTerm.hide_cursor",
        "rich._win32_console.LegacyWindowsError",
        "rich.style.Style.parse",
        "rich._win32_console.LegacyWindowsTerm.move_cursor_up",
        "rich._win32_console.LegacyWindowsTerm.move_cursor_to_column",
        "rich._win32_console.GetStdHandle",
        "rich._win32_console.LegacyWindowsTerm.move_cursor_backward",
        "rich._win32_console.LegacyWindowsTerm.move_cursor_down",
        "ctypes.LibraryLoader.__init__",
        "rich._win32_console.LegacyWindowsTerm.erase_end_of_line",
        "rich._win32_console.LegacyWindowsTerm.__init__",
        "rich._win32_console.LegacyWindowsTerm.set_title",
        "rich.style.Style.__init__",
        "<builtin>.print",
        "rich._win32_console.LegacyWindowsTerm.write_text",
        "rich._win32_console.CONSOLE_CURSOR_INFO",
        "rich._win32_console.LegacyWindowsTerm.show_cursor",
        "<builtin>.ImportError"
    ],
    "requests.structures.LookupDict.__init__": [
        "<builtin>.super"
    ],
    "textual.geometry.Region.overlaps": [
        "textual.geometry.corners"
    ],
    "_scroll_view.ScrollView.on_mount": [
        "textual.layouts.grid.GridLayout.place",
        "textual.layout.Layout.mount_all"
    ],
    "pygments.regexopt.regex_opt_inner": [
        "<builtin>.list",
        "pygments.regexopt.make_charset",
        "genericpath.commonprefix",
        "pygments.regexopt.regex_opt_inner",
        "re.escape",
        "<builtin>.sorted",
        "<builtin>.len"
    ],
    "asyncio.trsock": [
        "asyncio.trsock.TransportSocket"
    ],
    "typing._type_check": [
        "typing._SpecialForm.__eq__",
        "<builtin>.type",
        "typing.ForwardRef.__eq__",
        "typing._GenericAlias.__eq__",
        "<builtin>.callable",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "typing.ForwardRef.__init__"
    ],
    "configs.SingularityLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "subprocess.Popen.communicate": [
        "bz2.BZ2File.close",
        "http.client.HTTPResponse.read",
        "<builtin>.min",
        "subprocess.Popen.wait",
        "subprocess.Popen._remaining_time",
        "time.monotonic",
        "lzma.LZMAFile.read",
        "codecs.BufferedIncrementalDecoder.decode",
        "zipfile.ZipExtFile.read",
        "_io._IOBase.close",
        "bz2.BZ2File.read",
        "_compression.DecompressReader.read",
        "subprocess.Popen._stdin_write",
        "asyncio.windows_utils.PipeHandle.close",
        "lzma.LZMAFile.close",
        "socket.SocketIO.close",
        "urllib3.response.HTTPResponse.read",
        "urllib3.response.HTTPResponse.close",
        "zipfile.ZipExtFile.close",
        "_io._IOBase.read",
        "zipfile._ZipWriteFile.close",
        "http.client.HTTPResponse.close",
        "<builtin>.ValueError",
        "subprocess.Popen._communicate"
    ],
    "requests.adapters.HTTPAdapter.cert_verify": [
        "<builtin>.OSError",
        "genericpath.exists",
        "utils.extract_zipped_paths",
        "<builtin>.isinstance",
        "genericpath.isdir"
    ],
    "contextvars": [],
    "logging.Handler.acquire": [
        "threading._RLock.acquire"
    ],
    "requests.models.PreparedRequest.prepare_headers": [
        "requests.structures.CaseInsensitiveDict.__init__",
        "requests.structures.CaseInsensitiveDict.__len__",
        "_internal_utils.to_native_string",
        "<map>.items",
        "_collections_abc.ItemsView.__iter__",
        "utils.check_header_validity",
        "requests.structures.CaseInsensitiveDict.__setitem__",
        "_collections_abc.Mapping.items"
    ],
    "charset_normalizer.md": [
        "charset_normalizer.md.SuspiciousRange",
        "charset_normalizer.md.SuspiciousDuplicateAccentPlugin",
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "charset_normalizer.md.TooManyAccentuatedPlugin",
        "charset_normalizer.md.UnprintablePlugin",
        "charset_normalizer.md.CjkInvalidStopPlugin",
        "charset_normalizer.md.SuperWeirdWordPlugin",
        "functools.lru_cache",
        "charset_normalizer.md.TooManySymbolOrPunctuationPlugin",
        "charset_normalizer.utils",
        "functools.lru_cache.decorating_function",
        "charset_normalizer.md.ArchaicUpperLowerPlugin",
        "charset_normalizer.md.MessDetectorPlugin"
    ],
    "inspect._signature_from_function": [
        "inspect.Signature.__init__",
        "inspect.isfunction",
        "<list>.append",
        "<builtin>.enumerate",
        "<builtin>.getattr",
        "<builtin>.TypeError",
        "inspect.Parameter.__init__",
        "<builtin>.len"
    ],
    "docutils.statemachine.ViewList.__init__": [
        "<builtin>.range",
        "<builtin>.isinstance",
        "<builtin>.len",
        "<builtin>.list"
    ],
    "rich.markup.Tag": [
        "<builtin>.property",
        "typing.inner"
    ],
    "textual._animator.Animator.start": [
        "textual._timer.Timer.start"
    ],
    "textual.case.camel_to_snake": [
        "textual.case.repl",
        "typing.inner"
    ],
    "ssl.verify_mode": [
        "enum.EnumMeta.__call__"
    ],
    "textual.widgets._directory_tree.DirectoryTree": [
        "typing.__new__",
        "functools._lru_cache_wrapper.wrapper",
        "textual.reactive.Reactive.__init__",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function"
    ],
    "string._TemplateMetaclass.__init__": [
        "re.escape",
        "re.compile",
        "enum.IntFlag.__or__",
        "<builtin>.super"
    ],
    "configs.DockerLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "asyncio.protocols": [
        "asyncio.protocols.Protocol",
        "asyncio.protocols.BaseProtocol",
        "asyncio.protocols.SubprocessProtocol",
        "asyncio.protocols.BufferedProtocol",
        "asyncio.protocols.DatagramProtocol"
    ],
    "email.feedparser.FeedParser._new_message": [
        "emil.message.Message.__init__"
    ],
    "rich._win32_console.LegacyWindowsTerm": [
        "<builtin>.property"
    ],
    "configparser.RawConfigParser.items": [
        "<builtin>.list",
        "<builtin>.super"
    ],
    "macaulay2": [
        "pygments.lexer.__new__",
        "macaulay2.Macaulay2Lexer"
    ],
    "rich.palette.Palette": [
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "typing._VariadicGenericAlias.__getitem__",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function"
    ],
    "email.feedparser.FeedParser._parse_headers": [
        "emil.message.Message.set_raw",
        "_policybase.Compat32.header_source_parse",
        "<builtin>.enumerate",
        "<builtin>.len"
    ],
    "rich.table.Table._measure_column": [
        "<builtin>.max",
        "measure.Measurement.with_maximum",
        "rich.table.Table._get_padding_width",
        "rich.table.Table._get_cells",
        "measure.get",
        "measure.Measurement.clamp"
    ],
    "docutils.statemachine": [
        "docutils.statemachine.TransitionPatternNotFound",
        "docutils.statemachine.DuplicateTransitionError",
        "docutils.statemachine.DuplicateStateError",
        "docutils.statemachine.UnknownTransitionError",
        "docutils.statemachine.StringList",
        "docutils.statemachine.SearchStateMachineWS",
        "docutils.statemachine.StateMachine",
        "docutils.statemachine.StateCorrection",
        "docutils.statemachine.TransitionMethodNotFound",
        "docutils.statemachine.StateMachineWS",
        "docutils.statemachine.ViewList",
        "docutils.statemachine.TransitionCorrection",
        "docutils.statemachine.UnexpectedIndentationError",
        "docutils.statemachine._SearchOverride",
        "docutils.statemachine.StateMachineError",
        "docutils.statemachine.UnknownStateError",
        "docutils.statemachine.StateWS",
        "docutils.statemachine.SearchStateMachine",
        "re.compile",
        "docutils.statemachine.State"
    ],
    "pygments.util": [
        "pygments.util.ClassNotFound",
        "pygments.util.OptionError",
        "re.compile",
        "pygments.util.Future",
        "pygments.util.UnclosingTextIOWrapper"
    ],
    "io.Input": [
        "re.compile"
    ],
    "utllib3.poolmanager.PoolManager.connection_from_host": [
        "utllib3.poolmanager.PoolManager.connection_from_context",
        "utllib3.poolmanager.PoolManager._merge_pool_kwargs"
    ],
    "textual._parser.Parser.feed": [
        "textual._xterm_parser.XTermParser.parse",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "ipaddress._BaseV6": [
        "<builtin>.frozenset",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "docutils.parsers.rst.Text": [
        "re.compile"
    ],
    "logging._register_at_fork_reinit_lock": [
        "_weakrefset.WeakSet.add",
        "logging._releaseLock"
    ],
    "urllib3.connectionpool": [
        "<builtin>.object",
        "urllib3.connectionpool.HTTPSConnectionPool",
        "connectionpool.ConnectionPool",
        "urllib3.util.queue",
        "logging.getLogger",
        "urllib3.request",
        "urllib3.connectionpool.ConnectionPool",
        "connectionpool.HTTPSConnectionPool",
        "urllib3.connectionpool.HTTPConnectionPool",
        "urllib3.connection",
        "connectionpool.HTTPConnectionPool"
    ],
    "gcodelexer": [],
    "configparser.RawConfigParser._read": [
        "configparser.RawConfigParser._join_multiline_values",
        "<builtin>.min",
        "configparser.SectionProxy.__init__",
        "<builtin>.enumerate"
    ],
    "logging.disable": [
        "logging._checkLevel"
    ],
    "gettext.gettext": [
        "gettext.dgettext"
    ],
    "ooc.OocLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "gettext.find": [
        "posixpath.join",
        "genericpath.exists",
        "<list>.append",
        "gettext._expand_lang",
        "_collections_abc.Mapping.get"
    ],
    "http.cookiejar._str2time": [
        "http.cookiejar.offset_from_tz_string",
        "<list>.index",
        "<str>.upper",
        "http.cookiejar._timegm",
        "<builtin>.abs",
        "<builtin>.int"
    ],
    "requests.utils.default_user_agent": [],
    "requests.cookies.cookiejar_from_dict": [
        "http.cookiejar.CookieJar.__init__",
        "http.cookiejar.CookieJar.__iter__"
    ],
    "textual._parser": [
        "<builtin>.range",
        "typing.inner",
        "typing._GenericAlias.__mro_entries__",
        "typing.TypeVar.__init__",
        "typing.__init_subclass__",
        "typing._VariadicGenericAlias.__getitem__",
        "<builtin>.len",
        "<builtin>.print"
    ],
    "textual.layout.Layout._get_renders": [
        "<builtin>.list",
        "textual.geometry.Region.intersection",
        "textual.view.View.is_visual",
        "textual.geometry.Region.__contains__",
        "<builtin>.sorted",
        "textual.widget.Widget._get_lines",
        "textual.widget.is_visual",
        "textual.geometry.Region.overlaps"
    ],
    "rich.text.Text.append_tokens": [
        "rich.text.Text.__len__",
        "<builtin>.len"
    ],
    "ipaddress.IPv4Address.__init__": [
        "ipaddress._ip_int_from_string",
        "ipaddress._IPAddressBase._check_int_address",
        "<builtin>.isinstance",
        "<builtin>.str"
    ],
    "optparse.Option._check_opt_strings": [
        "<builtin>.TypeError"
    ],
    "rich.console.size": [
        "rich.console.is_dumb_terminal",
        "_collections_abc.Mapping.get"
    ],
    "trace.Trace.runctx": [
        "rich_cli.__main__"
    ],
    "rich.cells": [
        "<builtin>.range",
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "re.compile",
        "typing._VariadicGenericAlias.__getitem__",
        "rich._cell_widths",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function",
        "<builtin>.print"
    ],
    "urllib3.packages.six.MovedModule.__init__": [
        "urllib3.packages.six._LazyDescr.__init__",
        "<builtin>.super"
    ],
    "ipaddress._IPAddressBase._prefix_from_ip_string": [
        "ipaddress._BaseV4._ip_int_from_string",
        "ipaddress._IPAddressBase._prefix_from_ip_int",
        "ipaddress._IPAddressBase._report_invalid_netmask"
    ],
    "urllib3.poolmanager": [
        "collections.namedtuple",
        "urllib3.poolmanager.PoolManager",
        "logging.getLogger",
        "urllib3.poolmanager.ProxyManager"
    ],
    "rich.table.Table._render": [
        "typing.inner",
        "_pick.pick_bool",
        "rich.segment.Segment.line",
        "rich.box.Box.get_plain_headed_box",
        "rich.console.Console.render_lines",
        "<builtin>.max",
        "rich.console.ConsoleOptions.update",
        "rich.box.Box.get_top",
        "_loop.loop_last",
        "rich.table.Table.get_row_style",
        "<builtin>.range",
        "<builtin>.list",
        "rich.console.Console.get_style",
        "<builtin>.zip",
        "<builtin>.len",
        "rich.box.Box.get_bottom",
        "rich.box.Box.substitute",
        "<builtin>.enumerate",
        "rich.style.Style.__add__",
        "rich.table.Table._get_cells",
        "_loop.loop_first_last"
    ],
    "ssl.SSLSocket.getpeercert": [
        "ssl.SSLSocket._checkClosed",
        "ssl.SSLSocket._check_connected"
    ],
    "logging.StreamHandler.emit": [
        "logging.Handler.handleError",
        "logging.StreamHandler.flush",
        "logging.Handler.format"
    ],
    "chapel.ChapelLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "collections.namedtuple": [
        "<str>.join",
        "<list>.split",
        "<builtin>.map",
        "<builtin>.exec",
        "string",
        "<str>.replace",
        "<builtin>.repr",
        "<builtin>.dict",
        "<str>.split",
        "<builtin>.list",
        "<builtin>.reversed",
        "<builtin>.str",
        "<builtin>.zip",
        "<builtin>.set",
        "<builtin>.tuple",
        "<builtin>.len",
        "<builtin>.classmethod",
        "<builtin>.type",
        "<builtin>.enumerate",
        "<builtin>.isinstance",
        "<builtin>.ValueError",
        "<list>.replace",
        "<builtin>.TypeError"
    ],
    "retry": [
        "urllib3.packages.six.add_metaclass",
        "retry.__init__",
        "retry.Retry",
        "logging.getLogger",
        "urllib3.packages.six.wrapper",
        "collections.namedtuple",
        "retry._RetryMeta"
    ],
    "pygments.lexers._load_lexers": [
        "<builtin>.__import__",
        "<builtin>.getattr"
    ],
    "rich.markdown.MarkdownContext.leave_style": [
        "rich.style.StyleStack.pop"
    ],
    "textual.message_pump": [
        "textual.message_pump.MessagePump",
        "textual.message_pump.CallbackError",
        "textual.message_pump.MessagePumpClosed",
        "textual.message_pump.NoParent"
    ],
    "click._compat": [
        "click._compat._AtomicFile",
        "typing.inner",
        "click._winconsole",
        "click._compat._NonClosingTextIOWrapper",
        "click._compat._make_cached_stream_func",
        "click._compat._FixupStream",
        "typing._VariadicGenericAlias.__getitem__",
        "_collections_abc.Mapping.__contains__",
        "re.compile",
        "weakref.WeakKeyDictionary.__init__"
    ],
    "asyncio.staggered": [
        "asyncio.tasks",
        "typing._VariadicGenericAlias.__getitem__",
        "asyncio.locks",
        "typing.inner"
    ],
    "rich._win32_console.WindowsCoordinates": [
        "<builtin>.classmethod"
    ],
    "commonmark.blocks": [
        "commonmark.blocks.Document",
        "commonmark.blocks.BlockQuote",
        "commonmark.blocks.Item",
        "commonmark.blocks.List",
        "commonmark.blocks.Heading",
        "commonmark.blocks.Parser",
        "<str>.sub",
        "<str>.lower",
        "commonmark.blocks.HtmlBlock",
        "commonmark.blocks.Block",
        "re.compile",
        "commonmark.blocks.BlockStarts",
        "commonmark.blocks.ThematicBreak",
        "<builtin>.dict",
        "commonmark.blocks.Paragraph",
        "commonmark.blocks.CodeBlock"
    ],
    "warnings.warn": [
        "<builtin>.range",
        "warnings._is_internal_frame",
        "warnings._next_external_frame",
        "<builtin>.type",
        "warnings.warn_explicit",
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "rich.text.Text.pad_left": [
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "rich.color_triplet": [
        "typing.__new__",
        "rich.color_triplet.ColorTriplet"
    ],
    "http.cookiejar.CookieJar._cookies_from_attrs_set": [
        "<list>.append",
        "http.cookiejar.CookieJar._normalized_cookie_tuples",
        "http.cookiejar.CookieJar._cookie_from_cookie_tuple"
    ],
    "locale._replace_encoding": [
        "<map>.get",
        "<str>.replace",
        "<str>.lower",
        "<str>.index",
        "encodings.normalize_encoding"
    ],
    "ipaddress._IPAddressBase._check_packed_address": [
        "<builtin>.len"
    ],
    "rich.default_styles": [
        "rich.table.Table.__init__",
        "typing.inner",
        "argparse.ArgumentParser.__init__",
        "argparse.ArgumentParser.parse_args",
        "rich.style.Style.null",
        "<builtin>.str",
        "rich.table.Table.add_row",
        "rich.text.Text.__init__",
        "argparse._ActionsContainer.add_argument",
        "rich.style.Style.__init__",
        "rich.style",
        "<builtin>.print"
    ],
    "_osx_support._override_all_archs": [
        "re.sub",
        "_osx_support._save_modified_value"
    ],
    "ipaddress._BaseV6._ip_int_from_string": [
        "ipaddress._BaseV6._parse_hextet",
        "<builtin>.range",
        "ipaddress.IPv4Address.__init__",
        "<builtin>.len"
    ],
    "rich.markup.TiddlyWiki5Lexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__",
        "pygments.lexer.using"
    ],
    "threading._RLock.acquire": [
        "_thread.get_ident"
    ],
    "inspect.signature": [
        "inspect.from_callable"
    ],
    "email.feedparser.FeedParser._call_parse": [
        "email.feedparser.FeedParser._parsegen"
    ],
    "rich_cli.markdown.CodeBlock.__rich_console__": [
        "<builtin>.str"
    ],
    "rich_cli.__main__": [
        "types._NumberRangeBase.__init__",
        "typing.inner",
        "<str>.join",
        "rich_cli.__main__.ForceWidth.__init__",
        "click.decorators.decorator",
        "rich_cli.__main__.RichCommand",
        "rich.console.Console.__init__",
        "operator",
        "types.Choice.__init__",
        "click.decorators.option",
        "rich_cli.__main__.ForceWidth",
        "rich.measure",
        "typing._VariadicGenericAlias.__getitem__",
        "typing",
        "click",
        "click.decorators.argument",
        "rich_cli.__main__.RichCommand.__init__",
        "pygments.util",
        "rich_cli.__main__.run",
        "click.decorators.command",
        "<builtin>.sorted"
    ],
    "textual.message_pump.MessagePump.start_messages": [
        "tasks.create_task"
    ],
    "commonmark.inlines.InlineParser.parseInline": [
        "<map>.get",
        "commonmark.inlines.InlineParser.parseBang",
        "commonmark.inlines.InlineParser.parseCloseBracket",
        "commonmark.inlines.InlineParser.parseHtmlTag",
        "commonmark.inlines.InlineParser.parseBackticks",
        "commonmark.inlines.InlineParser.parseString",
        "commonmark.inlines.InlineParser.parseBackslash",
        "commonmark.inlines.InlineParser.handleDelim",
        "commonmark.inlines.InlineParser.parseOpenBracket",
        "commonmark.inlines.InlineParser.parseEntity",
        "commonmark.inlines.InlineParser.peek",
        "commonmark.inlines.text",
        "commonmark.node.Node.append_child",
        "commonmark.inlines.InlineParser.parseNewline"
    ],
    "rich.cells.cached_cell_len": [
        "<builtin>.sum",
        "rich.cells.<genexpr>"
    ],
    "textual.message_pump.MessagePump.dispatch_message": [
        "textual.message_pump.MessagePump.on_event",
        "locks.Event.set",
        "textual.app.App.on_event",
        "textual.message_pump.MessagePump.on_message",
        "<builtin>.isinstance",
        "message._done_event"
    ],
    "rich.markdown.Paragraph": [
        "<builtin>.classmethod"
    ],
    "commonmark.node.Node.walker": [
        "commonmark.node.NodeWalker.__init__"
    ],
    "renderer": [],
    "click.formatting": [
        "click.formatting.HelpFormatter",
        "typing.inner"
    ],
    "rich.screen.Screen": [
        "typing.inner"
    ],
    "dataclasses._create_fn": [
        "string",
        "<builtin>.exec"
    ],
    "commonmark.inlines.InlineParser.parseOpenBracket": [
        "commonmark.inlines.text",
        "commonmark.node.Node.append_child",
        "commonmark.inlines.InlineParser.addBracket"
    ],
    "textual.message_pump.MessagePump.process_messages": [
        "textual.message_pump.MessagePump._process_messages"
    ],
    "textual.message_pump.MessagePump._process_messages": [
        "emil.message.Message.__init__",
        "textual.widget.Widget.on_idle",
        "queues.Queue.empty",
        "events.Resize.can_replace",
        "textual.message_pump.MessagePump.peek_message",
        "textual.message_pump.MessagePump.get_message",
        "textual.log",
        "_window_view.WindowChange.can_replace",
        "textual.message_pump.MessagePump.dispatch_message",
        "textual.message_pump.MessagePump._get_dispatch_methods",
        "<builtin>.isinstance",
        "textual.messages.Update.can_replace",
        "emil.message.Message.can_replace",
        "textual.view.View.on_idle",
        "events.Null.can_replace",
        "textual.messages.Layout.can_replace"
    ],
    "timeout.from_float": [
        "timeout.Timeout.__init__"
    ],
    "rich.markup.TexLexer": [
        "pygments.lexer.default.__init__"
    ],
    "ipaddress._count_righthand_zero_bits": [
        "<builtin>.min"
    ],
    "logging.Manager.__init__": [
        "logging.disable"
    ],
    "urllib.request.getproxies": [
        "urllib.request.getproxies_environment",
        "urllib.request.getproxies_macosx_sysconf"
    ],
    "requests.cookies.MockRequest": [
        "<builtin>.property"
    ],
    "click._compat._force_correct_text_stream": [
        "typing.cast",
        "click._compat._stream_is_misconfigured",
        "click._compat._is_compatible_text_stream",
        "click._compat._is_binary_writer"
    ],
    "dataclasses.dataclass": [
        "dataclasses.wrap"
    ],
    "ipaddress._split_optional_netmask": [
        "<builtin>.str",
        "<builtin>.len"
    ],
    "rich.jupyter": [
        "rich.jupyter.JupyterRenderable",
        "rich.terminal_theme",
        "rich.jupyter.JupyterMixin",
        "rich.segment"
    ],
    "importlib.metadata.FastPath.children": [
        "zipfile.ZipFile.__del__",
        "contextlib.suppress.__enter__",
        "contextlib.suppress.__exit__",
        "contextlib.suppress.__init__",
        "importlib.metadata.FastPath.zip_children"
    ],
    "requests.cookies.MockRequest.has_header": [],
    "make.BaseMakefileLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "rich.color.from_ansi": [],
    "importlib.metadata.MetadataPathFinder": [
        "<builtin>.classmethod",
        "importlib.metadata.Context.__init__"
    ],
    "click.core.Parameter": [
        "typing._VariadicGenericAlias.__getitem__",
        "<builtin>.property",
        "typing.inner",
        "typing.overload"
    ],
    "subprocess.run": [
        "subprocess.Popen.__enter__",
        "subprocess.Popen.__exit__",
        "subprocess.Popen.communicate",
        "<builtin>.ValueError",
        "subprocess.CompletedProcess.__init__",
        "subprocess.Popen.poll",
        "subprocess.Popen.__init__"
    ],
    "string.Template.substitute": [
        "string.convert"
    ],
    "rich.console.Console.export_svg.escape_text": [
        "html.escape"
    ],
    "rich.protocol": [],
    "textual._animator.Animator.__call__": [
        "<builtin>.list",
        "textual._timer.Timer.pause"
    ],
    "roboconf": [
        "pygments.lexer.__new__",
        "roboconf.RoboconfInstancesLexer",
        "roboconf.RoboconfGraphLexer"
    ],
    "requests.utils.get_environ_proxies": [
        "urllib.request.getproxies",
        "requests.utils.should_bypass_proxies"
    ],
    "docutils.parsers.rst.tableparser": [
        "docutils.parsers.rst.tableparser.TableMarkupError",
        "docutils.utils.punctuation_chars",
        "docutils.parsers.rst.languages",
        "docutils.utils.roman",
        "docutils.parsers.rst.tableparser.GridTableParser",
        "docutils.parsers.rst.tableparser.TableParser",
        "docutils.utils.urischemes",
        "docutils.parsers.rst.tableparser.SimpleTableParser"
    ],
    "textual.layouts.vertical.VerticalLayout.arrange": [
        "<builtin>.max",
        "widget.Widget.render_lines_free",
        "textual.geometry.top_left",
        "_loop.loop_last",
        "textual.geometry.width"
    ],
    "robotframework.GherkinTokenizer": [
        "re.compile"
    ],
    "textual.geometry": [
        "typing.inner",
        "textual.geometry.Offset",
        "typing.TypeVar.__init__",
        "textual.geometry.Size",
        "textual.geometry.Spacing",
        "textual.geometry.Region"
    ],
    "urllib.parse.urlsplit": [
        "<map>.get",
        "<builtin>.type",
        "urllib.parse._checknetloc",
        "urllib.parse._splitnetloc",
        "urllib.parse._coerce_args",
        "<str>.find",
        "<builtin>.ValueError",
        "<builtin>.bool",
        "urllib.parse._noop",
        "<str>.split",
        "<builtin>.len"
    ],
    "textual._loop": [
        "typing.TypeVar.__init__"
    ],
    "pygments.lexers._iter_lexerclasses": [
        "<builtin>.sorted",
        "pygments.plugin.find_plugin_lexers",
        "pygments.lexers._load_lexers"
    ],
    "rich.control.Control.__init__": [
        "<builtin>.isinstance"
    ],
    "dataclasses._init_fn": [
        "dataclasses._create_fn",
        "<builtin>.TypeError",
        "dataclasses._field_init"
    ],
    "textual.layouts.grid": [
        "typing.__new__",
        "typing.inner",
        "textual.layouts.grid.GridLayout",
        "textual.layouts.grid.GridArea",
        "textual.layouts.grid.GridLayout.add_areas",
        "textual.widgets._placeholder.Placeholder.__init__",
        "dataclasses.dataclass",
        "textual.layouts.grid.GridLayout.add_column",
        "logging.getLogger",
        "textual.layouts.grid.GridLayout.__init__",
        "textual.layouts.grid.GridOptions",
        "textual.layouts.grid.GridLayout.add_row",
        "textual.layouts.grid.GridLayout.place",
        "textual.widgets"
    ],
    "docutils.utils.DependencyList.__init__": [
        "docutils.utils.DependencyList.set_output"
    ],
    "rich.palette.Palette.__init__": [],
    "rich._null_file.NullFile": [
        "<builtin>.property"
    ],
    "rich.highlighter.Highlighter": [
        "typing.inner",
        "abc.abstractmethod"
    ],
    "urllib3.fields": [
        "<map>.update",
        "<builtin>.range",
        "urllib3.fields.RequestField"
    ],
    "posixpath.splitext": [
        "<builtin>.isinstance",
        "genericpath._splitext"
    ],
    "ssl.SSLContext.wrap_socket": [
        "ssl._create"
    ],
    "html": [
        "re.compile",
        "html.XsltLexer",
        "html.entities"
    ],
    "rich.pretty._Line": [
        "<builtin>.property",
        "typing.inner"
    ],
    "sre_parse.Tokenizer.getwhile": [
        "sre_parse.Tokenizer.__next",
        "<builtin>.range"
    ],
    "configs.KconfigLexer": [
        "configs.do_indent",
        "configs.call_indent",
        "pygments.lexer.default.__init__",
        "pygments.lexer.words.__init__"
    ],
    "docutils.statemachine.StateWS": [
        "re.compile"
    ],
    "configs.NginxConfLexer": [
        "pygments.lexer.bygroups"
    ],
    "docutils.utils.new_document": [
        "docutils.utils.nodes.document.__init__",
        "docutils.utils.nodes.document.note_source",
        "docutils.utils.decode_path",
        "docutils.utils.new_reporter"
    ],
    "platform.uname": [
        "<builtin>.filter",
        "<builtin>.list",
        "platform._syscmd_uname"
    ],
    "urllib3.response.HTTPResponse._init_length": [
        "<builtin>.set",
        "<builtin>.len",
        "_collections_abc.Mapping.get",
        "<builtin>.int"
    ],
    "scdoc": [
        "scdoc.ScdocLexer",
        "pygments.lexer.__new__"
    ],
    "selectors.BaseSelector": [
        "abc.abstractmethod"
    ],
    "rich.console.ConsoleOptions.update_width": [
        "rich.console.ConsoleOptions.copy",
        "<builtin>.max"
    ],
    "rich._wrap": [
        "re.compile",
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner",
        "<builtin>.print"
    ],
    "rich.rule.Rule.__init__": [
        "rich.cells.cell_len",
        "<builtin>.ValueError"
    ],
    "requests.models": [
        "requests.models.PreparedRequest",
        "requests.status_codes",
        "requests.models.RequestHooksMixin",
        "requests.models.RequestEncodingMixin",
        "requests.models.Response",
        "requests.hooks",
        "requests.models.Request",
        "encodings.idna"
    ],
    "fnmatch._compile_pattern": [
        "<builtin>.bytes",
        "fnmatch.translate",
        "<builtin>.str",
        "re.compile",
        "<builtin>.isinstance"
    ],
    "posixpath.dirname": [
        "posixpath._get_sep",
        "<str>.rfind",
        "<builtin>.len",
        "os._fspath"
    ],
    "asyncio.log": [
        "logging.getLogger"
    ],
    "graphics.GLShaderLexer": [
        "pygments.lexer.words.__init__"
    ],
    "rich.markdown.MarkdownElement": [
        "<builtin>.classmethod"
    ],
    "textual.layouts.grid.resolve": [
        "_layout_resolve.layout_resolve"
    ],
    "numbers.Rational": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "rich._timer": [
        "repr.rich_repr",
        "contextlib.contextmanager",
        "typing.inner",
        "rich._timer.Timer",
        "rich._timer.EventTargetGone"
    ],
    "urllib3.util.ssl_": [
        "hmac",
        "urllib3.util.ssltransport",
        "urllib3.util.ssl_.SSLContext",
        "urllib3.util.url",
        "<builtin>.getattr"
    ],
    "textual.layouts.vertical": [
        "textual.layouts.vertical.VerticalLayout"
    ],
    "rich.cells.get_character_cell_size": [
        "rich.cells._get_codepoint_cell_size",
        "<builtin>.ord"
    ],
    "requests.models.PreparedRequest.prepare_hooks": [
        "requests.models.RequestHooksMixin.register_hook"
    ],
    "logging.LogRecord.__init__": [
        "posixpath.splitext",
        "<builtin>.hasattr",
        "ntpath.basename",
        "logging.getLevelName",
        "posixpath.basename",
        "ntpath.splitext",
        "<builtin>.isinstance",
        "threading.current_thread",
        "_thread.get_ident",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "inspect._signature_fromstr.p": [
        "ast.literal_eval",
        "<list>.append",
        "inspect._signature_fromstr.parse_name",
        "ast.NodeVisitor.visit"
    ],
    "ipaddress._BaseV6._parse_hextet": [
        "<builtin>.len",
        "<builtin>.ValueError",
        "<builtin>.int"
    ],
    "calendar._localized_month": [
        "<builtin>.range"
    ],
    "hdl.VerilogLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "request.AbstractBasicAuthHandler": [
        "re.compile"
    ],
    "rich.console.Console._collect_renderables": [
        "rich.console.check_text",
        "rich.console.align_append",
        "<builtin>.str",
        "<builtin>.isinstance",
        "rich.console.Console.render_str",
        "protocol.rich_cast"
    ],
    "installers": [],
    "docutils.parsers.rst.tableparser.SimpleTableParser": [
        "re.compile"
    ],
    "logging.exception": [
        "logging.error"
    ],
    "pygments.formatters.html.HtmlFormatter": [
        "<builtin>.property",
        "functools.lru_cache",
        "functools.decorating_function"
    ],
    "rich.text.Text.highlight_regex": [
        "<builtin>.callable",
        "re.finditer",
        "rich.text.Text.plain"
    ],
    "logging.Filterer.__init__": [],
    "rich.text.Text.divide": [
        "<builtin>.max",
        "<builtin>.range",
        "<builtin>.list",
        "text.flatten_spans",
        "<builtin>.min",
        "rich.containers.Lines.__init__",
        "<builtin>.zip",
        "rich.text.Text.copy",
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "ipaddress": [
        "ipaddress.IPv4Interface",
        "functools.total_ordering",
        "ipaddress._IPAddressBase",
        "ipaddress._BaseV4",
        "ipaddress.IPv6Network",
        "ipaddress.IPv6Interface",
        "ipaddress._IPv6Constants",
        "ipaddress._BaseNetwork",
        "ipaddress.IPv4Network",
        "ipaddress.NetmaskValueError",
        "ipaddress.AddressValueError",
        "ipaddress._IPv4Constants",
        "ipaddress.IPv4Address",
        "ipaddress._BaseAddress",
        "ipaddress._BaseV6",
        "ipaddress.IPv6Address"
    ],
    "functools.singledispatchmethod": [
        "<builtin>.property"
    ],
    "urllib.parse._NetlocResultMixinStr": [
        "<builtin>.property"
    ],
    "prolog.PrologLexer": [
        "token._TokenType.__getattr__",
        "pygments.lexer.bygroups"
    ],
    "rich.text.Text.blank_copy": [
        "rich.text.Text.__init__"
    ],
    "configs.call_indent": [
        "configs._rx_indent"
    ],
    "text.Text": [
        "typing.inner"
    ],
    "types.Choice.convert": [],
    "graphics.AsymptoteLexer": [
        "pygments.lexer.default.__init__"
    ],
    "textual.widgets": [
        "textual.widgets._scroll_view",
        "textual.widgets._button",
        "textual.widgets._footer",
        "textual.widgets._tree_control",
        "textual.widgets._header",
        "textual.widgets._placeholder",
        "textual.widgets._static",
        "textual.widgets._directory_tree"
    ],
    "rich.console.Console.capture": [
        "typing.inner"
    ],
    "logging.Handler.__init__": [
        "logging.NullHandler.createLock",
        "logging._addHandlerRef",
        "logging.Handler.createLock",
        "logging._checkLevel",
        "logging.Filterer.__init__"
    ],
    "requests.sessions.Session.prepare_request": [
        "requests.sessions.merge_hooks",
        "requests.models.PreparedRequest.__init__",
        "requests.cookies.merge_cookies",
        "http.cookiejar.CookieJar.__init__",
        "<str>.upper",
        "requests.cookies.cookiejar_from_dict",
        "<builtin>.isinstance",
        "requests.sessions.merge_setting",
        "requests.utils.get_netrc_auth",
        "requests.models.PreparedRequest.prepare"
    ],
    "typing._type_repr": [
        "typing._GenericAlias.__repr__",
        "typing._SpecialForm.__repr__",
        "<builtin>.repr",
        "<builtin>.isinstance"
    ],
    "rich.console.ThemeContext": [
        "typing.inner"
    ],
    "rich_cli.__main__.read_resource": [
        "<map>.get",
        "rich.markup.escape",
        "rich_cli.__main__.on_error",
        "codecs.BufferedIncrementalDecoder.decode",
        "pygments.lexers.guess_lexer_for_filename",
        "codecs.BufferedIncrementalDecoder.__init__",
        "<builtin>.open",
        "codecs.StreamRecoder.read",
        "requests.api.get",
        "pygments.lexers.get_lexer_for_mimetype"
    ],
    "ipaddress._IPv6Constants": [
        "ipaddress.IPv6Network.__init__"
    ],
    "textual.message_pump.MessagePump.post_message_no_wait": [
        "queues.Queue.put_nowait",
        "textual.message_pump.MessagePump.check_message_enabled"
    ],
    "textual.app.App.log": [
        "<builtin>.str"
    ],
    "inspect.ismethoddescriptor": [
        "inspect.ismethod",
        "<builtin>.hasattr",
        "<builtin>.type",
        "inspect.isfunction",
        "inspect.isclass"
    ],
    "charset_normalizer.md.TooManyAccentuatedPlugin": [
        "<builtin>.property"
    ],
    "gettext.dgettext": [
        "<map>.get",
        "gettext.translation",
        "<map>.gettext"
    ],
    "commonmark.inlines.InlineParser.spnl": [
        "commonmark.inlines.InlineParser.match"
    ],
    "importlib.metadata.DistributionFinder": [
        "importlib.metadata.DistributionFinder.Context",
        "importlib.metadata.Context.__init__",
        "importlib.metadata.Context",
        "abc.abstractmethod"
    ],
    "graphics.GnuplotLexer": [
        "pygments.lexer.default.__init__"
    ],
    "praat.PraatLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "types.DynamicClassAttribute.__get__": [
        "<builtin>.AttributeError",
        "enum.name",
        "enum.value"
    ],
    "rich.segment.Segments": [
        "typing.inner"
    ],
    "zipfile.ZipFile.__init__": [
        "zipfile.ZipFile._RealGetContents",
        "zipfile._check_compression",
        "zipfile.ZipFile._fpclose",
        "threading.RLock",
        "<builtin>.isinstance",
        "zipfile._Tellable.__init__",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.getattr",
        "<builtin>.ValueError",
        "_io.open",
        "os._fspath"
    ],
    "linux_driver.LinuxDriver._run_input_thread": [
        "textual._parser.Parser.feed",
        "typing.__new__",
        "_xterm_parser.XTermParser.__init__",
        "threading.Event.is_set",
        "contextlib._GeneratorContextManager.__enter__",
        "codecs.BufferedIncrementalDecoder.decode",
        "codecs.getincrementaldecoder",
        "codecs.BufferedIncrementalDecoder.__init__",
        "contextlib._GeneratorContextManager.__exit__",
        "contextlib.helper"
    ],
    "requests.adapters": [
        "requests.adapters.HTTPAdapter",
        "requests.adapters.BaseAdapter",
        "requests.models",
        "urllib3.contrib.socks",
        "requests.auth"
    ],
    "logging.Manager.getLogger": [
        "logging.Logger.__init__",
        "logging.Manager._fixupChildren",
        "logging.Logger",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "logging._releaseLock",
        "logging.Manager._fixupParents"
    ],
    "rich.console.Console.width": [
        "rich.console.size"
    ],
    "rich._emoji_replace": [
        "re.compile",
        "typing.inner"
    ],
    "ssl.options": [
        "enum.EnumMeta.__call__"
    ],
    "textual.layout.Layout.require_update": [
        "textual.layout.Layout.reset"
    ],
    "parasail": [
        "parasail.ParaSailLexer"
    ],
    "configs.ApacheConfLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups"
    ],
    "textual.layout.Layout.update_widget": [
        "textual.layout.Layout.render",
        "textual.geometry.Region.intersection",
        "textual.geometry.size",
        "textual.widget.Widget.clear_render_cache",
        "textual.layout.LayoutUpdate.__init__",
        "textual.geometry.Size.__bool__"
    ],
    "urllib3.util.proxy": [
        "urllib3.util.ssl_"
    ],
    "requests.utils.unquote_unreserved": [
        "<builtin>.range",
        "<builtin>.chr",
        "<str>.split",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "json.dumps": [
        "encoder.JSONEncoder"
    ],
    "rich.markdown.ImageItem": [
        "<builtin>.classmethod"
    ],
    "asyncio.transports": [
        "asyncio.transports.BaseTransport",
        "asyncio.transports.SubprocessTransport",
        "asyncio.transports.WriteTransport",
        "asyncio.transports.Transport",
        "asyncio.transports.DatagramTransport",
        "asyncio.transports._FlowControlMixin",
        "asyncio.transports.ReadTransport"
    ],
    "rich.segment.Segment.set_shape": [
        "rich.segment.Segment.adjust_line_length",
        "<builtin>.len"
    ],
    "threading.Thread.join": [
        "threading.Event.is_set",
        "<builtin>.max",
        "<builtin>.RuntimeError",
        "threading.Thread._wait_for_tstate_lock",
        "threading.current_thread"
    ],
    "commonmark.node.Node.append_child": [
        "commonmark.node.Node.unlink"
    ],
    "commonmark.node.Node.insert_after": [
        "commonmark.node.Node.unlink"
    ],
    "inspect.BoundArguments": [
        "<builtin>.property"
    ],
    "rich.console.Group.__init__": [],
    "urllib3.util.url.parse_url": [
        "<str>.lower",
        "urllib3.util.url._encode_invalid_chars",
        "<str>.match",
        "urllib3.util.url.ensure_type",
        "<str>.search",
        "urllib3.util.url._normalize_host",
        "<str>.groups",
        "<builtin>.isinstance",
        "urllib3.util.url._remove_path_dot_segments",
        "<builtin>.int"
    ],
    "calendar": [
        "calendar._localized_day",
        "calendar.LocaleTextCalendar",
        "<builtin>.range",
        "calendar.main",
        "calendar.LocaleHTMLCalendar",
        "calendar._localized_day.__init__",
        "calendar.different_locale",
        "calendar.HTMLCalendar",
        "calendar.Calendar",
        "calendar.IllegalWeekdayError",
        "calendar.TextCalendar",
        "calendar.IllegalMonthError",
        "calendar._localized_month.__init__",
        "datetime.datetime.date",
        "calendar._localized_month"
    ],
    "getpass": [
        "getpass.GetPassWarning"
    ],
    "click.core.Context": [
        "contextlib.contextmanager",
        "typing.inner",
        "typing.overload",
        "typing._VariadicGenericAlias.__getitem__",
        "<builtin>.property"
    ],
    "ooc": [
        "ooc.OocLexer"
    ],
    "rich.syntax.get_theme": [
        "rich.syntax.PygmentsSyntaxTheme.__init__",
        "abc.ABCMeta.__instancecheck__",
        "rich.syntax.ANSISyntaxTheme.__init__"
    ],
    "os.get_exec_path": [
        "warnings.simplefilter",
        "warnings.catch_warnings.__exit__",
        "warnings.catch_warnings.__enter__",
        "_collections_abc.Mapping.get",
        "warnings.catch_warnings.__init__",
        "<builtin>.isinstance",
        "weakref.WeakKeyDictionary.get",
        "<builtin>.ValueError",
        "<str>.split",
        "os._Environ.__getitem__"
    ],
    "requests.cookies.RequestsCookieJar.update": [
        "<builtin>.super",
        "<builtin>.isinstance",
        "http.cookiejar.CookieJar.__iter__",
        "http.cookiejar.deepvalues"
    ],
    "requests.adapters.HTTPAdapter.init_poolmanager": [
        "urllib.poolmanager.PoolManager.__init__"
    ],
    "rich.console.get_windows_console_features": [
        "rich._windows.get_windows_console_features"
    ],
    "igor": [
        "igor.IgorLexer",
        "pygments.lexer.__new__"
    ],
    "rich.console.Console": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "urllib.error": [
        "urllib.error.URLError",
        "error.ContentTooShortError",
        "urllib.response",
        "error.URLError",
        "urllib.error.HTTPError",
        "urllib.error.ContentTooShortError",
        "error.HTTPError"
    ],
    "fnmatch.fnmatchcase": [
        "fnmatch._compile_pattern"
    ],
    "textual.view.View.__init__": [
        "textual.widget.Widget.__init__",
        "rich.style.Style.__init__",
        "<builtin>.set",
        "<builtin>.super"
    ],
    "rich.segment.Segment.line": [],
    "_scroll_view.ScrollView.handle_window_change": [
        "textual.widgets._scroll_view.ScrollView.validate_x",
        "textual.widgets._scroll_view.ScrollView.validate_y",
        "widget.size",
        "widget.Widget.refresh",
        "textual.message.Message.stop",
        "textual.layouts.grid.GridLayout.show_row",
        "textual.layouts.grid.GridLayout.show_column"
    ],
    "click.parser.Option": [
        "<builtin>.property",
        "typing.inner"
    ],
    "rich.console._is_jupyter": [
        "<builtin>.str",
        "os.getenv"
    ],
    "rich.pretty.Pretty": [
        "typing.inner"
    ],
    "roboconf.RoboconfInstancesLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__"
    ],
    "typing._GenericAlias": [
        "typing._tp_cache"
    ],
    "rich.markdown.MarkdownContext.__init__": [
        "rich.style.StyleStack.__init__"
    ],
    "rich.terminal_theme.TerminalTheme": [
        "typing.inner"
    ],
    "logging.Formatter.usesTime": [],
    "requests.api": [
        "requests.sessions"
    ],
    "typing.SupportsComplex": [
        "abc.abstractmethod"
    ],
    "click.core.Argument": [
        "typing._VariadicGenericAlias.__getitem__",
        "<builtin>.property",
        "typing.inner"
    ],
    "dataclasses._cmp_fn": [
        "dataclasses._create_fn"
    ],
    "configparser.RawConfigParser.read_string": [
        "configparser.RawConfigParser.read_file"
    ],
    "charset_normalizer.api": [
        "typing.inner",
        "logging.StreamHandler.__init__",
        "logging.Formatter.__init__",
        "logging.getLogger",
        "logging.Handler.setFormatter",
        "charset_normalizer.cd"
    ],
    "rich.ansi": [
        "typing.__new__",
        "pty.spawn",
        "typing.inner",
        "rich.ansi._AnsiToken",
        "rich.ansi.AnsiDecoder",
        "re.compile",
        "pty",
        "rich.ansi.AnsiDecoder.__init__",
        "<builtin>.print"
    ],
    "requests.utils._validate_header_part": [],
    "subprocess.Popen._wait": [
        "time.monotonic",
        "subprocess.Popen._handle_exitstatus",
        "<builtin>.min",
        "subprocess.TimeoutExpired.__init__",
        "subprocess.Popen._try_wait",
        "subprocess.Popen._remaining_time",
        "<builtin>.int"
    ],
    "logging.Logger.addHandler": [
        "<list>.append",
        "logging._releaseLock",
        "logging._acquireLock"
    ],
    "textual._xterm_parser": [
        "textual._parser",
        "typing.inner",
        "typing._GenericAlias.__mro_entries__",
        "textual._ansi_sequences",
        "typing.__init_subclass__",
        "re.escape",
        "re.compile",
        "textual._xterm_parser.XTermParser.__init__",
        "<builtin>.print"
    ],
    "docutils.statemachine.StateMachine.check_line": [
        "docutils.statemachine.StateWS.blank",
        "states.invalid_input",
        "states.Text.text",
        "states.Body.explicit_markup",
        "states.Line.text",
        "states.Text.blank",
        "states.Body.line",
        "states.Body.text",
        "<builtin>.print"
    ],
    "http.cookiejar._timegm": [
        "calendar.timegm"
    ],
    "textual.app.App.run.run_app": [
        "textual.app.App.__init__",
        "textual.app.App.process_messages"
    ],
    "urllib.request.getproxies_environment": [
        "_collections_abc.Mapping.__contains__",
        "_collections_abc.ItemsView.__iter__",
        "_collections_abc.Mapping.items"
    ],
    "locale._parse_localename": [
        "locale.normalize",
        "<builtin>.ValueError",
        "<builtin>.tuple",
        "<str>.split"
    ],
    "requests._internal_utils": [
        "re.compile"
    ],
    "commonmark.common": [
        "commonmark.entitytrans",
        "re.compile",
        "urllib",
        "urllib.parse"
    ],
    "platform._syscmd_uname": [
        "subprocess.check_output"
    ],
    "rich.text.Text.with_indent_guides": [
        "rich.containers.Lines.__iter__",
        "<builtin>.divmod",
        "rich.text.Text.__init__",
        "re.compile",
        "rich.text.Text.expand_tabs",
        "rich.text.Text.join",
        "rich.text.Text.split",
        "rich.text.Text.stylize",
        "rich.text.Text.copy",
        "<builtin>.len",
        "rich.text.Text.blank_copy",
        "rich.text.Text.plain"
    ],
    "textual.app.App.on_event": [
        "textual.message_pump.MessagePump.on_event",
        "message.is_forwarded",
        "textual.binding.Bindings.allow_forward",
        "<builtin>.super",
        "<builtin>.isinstance"
    ],
    "docutils.frontend.OptionParser.get_default_values": [
        "docutils.frontend.Values.__init__",
        "warnings.catch_warnings.__exit__",
        "warnings.filterwarnings",
        "warnings.catch_warnings.__enter__",
        "warnings.catch_warnings.__init__"
    ],
    "selectors": [
        "selectors.EpollSelector",
        "selectors._BaseSelectorImpl",
        "selectors.DevpollSelector",
        "selectors._PollLikeSelector",
        "selectors.SelectSelector",
        "<builtin>.hasattr",
        "selectors.PollSelector",
        "abc.__new__",
        "selectors.KqueueSelector",
        "collections.namedtuple",
        "selectors._SelectorMapping",
        "selectors.BaseSelector",
        "<builtin>.globals"
    ],
    "json.loads": [
        "<str>.decode",
        "decoder.JSONDecodeError",
        "decoder.JSONDecoder",
        "warnings.warn",
        "<builtin>.isinstance",
        "decoder.JSONDecoder.decode",
        "<builtin>.TypeError",
        "<str>.startswith"
    ],
    "rich._palettes": [
        "rich.palette.Palette.__init__",
        "rich.palette"
    ],
    "rich.console.ConsoleThreadLocals": [
        "typing.inner",
        "dataclasses.field"
    ],
    "charset_normalizer.models": [
        "typing.inner",
        "charset_normalizer.models.CharsetMatch",
        "charset_normalizer.models.CliDetectionResult",
        "charset_normalizer.models.CharsetMatches",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "configs.SquidConfLexer": [
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "dalvik": [
        "dalvik.SmaliLexer",
        "pygments.lexer.__new__"
    ],
    "docutils.frontend.OptionParser.populate_from_components": [
        "<builtin>.range",
        "optparse.OptionContainer.add_option",
        "optparse.OptionGroup.__init__",
        "<builtin>.len",
        "optparse.OptionParser.add_option_group"
    ],
    "threading.Condition.notify": [
        "threading.Condition._is_owned",
        "<builtin>.RuntimeError"
    ],
    "types.FuncParamType": [
        "typing.inner"
    ],
    "docutils.transforms.universal": [
        "docutils.transforms.universal.SmartQuotes",
        "docutils.transforms.universal.StripComments",
        "docutils.transforms.universal.FilterMessages",
        "docutils.transforms.universal.Decorations",
        "docutils.utils.smartquotes",
        "docutils.transforms.universal.Messages",
        "docutils.transforms.universal.StripClassesAndElements",
        "docutils.transforms",
        "docutils.transforms.universal.ExposeInternals",
        "docutils.transforms.universal.TestMessages"
    ],
    "urllib3.util.timeout": [
        "<builtin>.getattr",
        "timeout.Timeout",
        "urllib3.util.timeout.Timeout",
        "<builtin>.object"
    ],
    "ipaddress.ip_address": [
        "ipaddress.IPv6Address.__init__",
        "ipaddress.IPv4Address.__init__",
        "<builtin>.ValueError"
    ],
    "requests.sessions.SessionRedirectMixin.should_strip_auth": [
        "<map>.get",
        "urllib.parse.urlparse"
    ],
    "configparser.ConverterMapping": [
        "re.compile"
    ],
    "rich.console.Console.render_str": [
        "<builtin>.str",
        "rich.highlighter.Highlighter.__call__",
        "rich.text.Text.__str__",
        "rich.markup.render",
        "rich.text.Text.copy_styles"
    ],
    "urllib3.response.HTTPResponse.stream": [
        "urllib3.response.HTTPResponse.supports_chunked_reads",
        "urllib3.response.HTTPResponse.read_chunked"
    ],
    "docutils.statemachine.StateMachine.add_states": [
        "docutils.statemachine.StateMachine.add_state"
    ],
    "docutils.statemachine.StateWS.add_initial_transitions": [
        "docutils.statemachine.State.add_initial_transitions",
        "docutils.statemachine.State.add_transitions",
        "docutils.statemachine.State.make_transitions"
    ],
    "ipaddress._IPAddressBase._ip_int_from_prefix": [],
    "rich.repr": [
        "typing.TypeVar.__init__",
        "typing.inner",
        "typing.overload",
        "rich.repr.ReprError"
    ],
    "rich.constrain": [
        "rich.constrain.Constrain",
        "rich.jupyter"
    ],
    "urllib3.connection.HTTPSConnection.set_cert": [
        "posixpath.expanduser"
    ],
    "ast": [
        "ast._ABC",
        "ast.NodeTransformer",
        "ast.NameConstant",
        "<builtin>.type",
        "ast.Num",
        "ast.Str",
        "ast.NodeVisitor",
        "ast.Ellipsis",
        "ast.Bytes",
        "<builtin>.property"
    ],
    "inspect.Signature.__init__": [
        "inspect.default",
        "inspect.name",
        "<builtin>.enumerate",
        "inspect.kind",
        "<builtin>.ValueError"
    ],
    "requests.adapters.HTTPAdapter.get_connection": [
        "utils.select_proxy",
        "urllib.poolmanager.PoolManager.connection_from_url",
        "urllib.parse.ParseResult.geturl",
        "urllib.parse.urlparse"
    ],
    "requests.models.PreparedRequest.prepare_body": [
        "<builtin>.object",
        "requests.models.PreparedRequest.prepare_content_length",
        "<builtin>.hasattr",
        "<builtin>.NotImplementedError",
        "<map>.tell",
        "abc.ABCMeta.__instancecheck__",
        "<builtin>.isinstance",
        "<builtin>.getattr",
        "<builtin>.all"
    ],
    "sre_parse._escape": [
        "sre_parse.groups",
        "<builtin>.ord",
        "sre_parse.State.checkgroup",
        "sre_parse.State.checklookbehindgroup",
        "sre_parse.Tokenizer.getwhile",
        "<builtin>.chr",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "numbers.Complex": [
        "<builtin>.property",
        "abc.abstractmethod"
    ],
    "_osx_support._remove_universal_flags": [
        "re.sub",
        "_osx_support._save_modified_value"
    ],
    "importlib.metadata.Distribution": [
        "<builtin>.property",
        "<builtin>.classmethod",
        "<builtin>.staticmethod",
        "abc.abstractmethod"
    ],
    "textual.layouts.vertical.VerticalLayout.add": [
        "textual.message_pump.app",
        "textual.app.App.measure",
        "<builtin>.max"
    ],
    "click.parser.Argument": [
        "typing.inner"
    ],
    "rich.console.PyPyLogLexer": [
        "pygments.lexer.bygroups"
    ],
    "pathlib.PurePath": [
        "operator.attrgetter.__init__",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "logging.error": [
        "logging.basicConfig",
        "<builtin>.len",
        "logging.Logger.error"
    ],
    "textual._callback.invoke": [
        "textual.views._window_view.WindowView.handle_layout",
        "textual.message_pump.MessagePump.on_timer",
        "textual.app.App.on_resize",
        "textual.view.View.handle_layout",
        "textual.widget.Widget.on_resize",
        "textual.view.View.on_mount",
        "textual.app.App.on_key",
        "textual._callback.count_parameters",
        "rich_cli.pager.PagerApp.on_load",
        "textual.widgets._scroll_view.ScrollView.handle_window_change",
        "rich_cli.pager.PagerApp.on_mount",
        "rich_cli.pager.PagerApp.on_key",
        "textual._animator.Animator.__call__",
        "textual.views._window_view.WindowView.handle_update",
        "textual.view.View.on_resize",
        "text.widgets._scroll_view.ScrollView.on_mount",
        "textual.message_pump.MessagePump.on_callback",
        "textual.app.App.action_quit",
        "inspect.isawaitable",
        "textual.view.View.handle_update",
        "textual.views._window_view.WindowView.on_resize"
    ],
    "syntax.ANSISyntaxTheme.__init__": [
        "rich.style.Style.null"
    ],
    "ntpath.join": [
        "<str>.lower",
        "ntpath.splitdrive",
        "genericpath._check_arg_types",
        "<builtin>.map",
        "<builtin>.isinstance",
        "os._fspath"
    ],
    "resource.ResourceLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "click.core.Parameter.type_cast_value": [
        "types.ParamType.__call__",
        "<builtin>.tuple"
    ],
    "typing.IO": [
        "<builtin>.property",
        "typing.inner",
        "abc.abstractmethod"
    ],
    "functools.cached_property.__init__": [
        "_thread.RLock"
    ],
    "random.Random.randint": [
        "random.Random.randrange"
    ],
    "ssl._TLSContentType": [],
    "threading.Thread._bootstrap_inner": [
        "threading.Event.set",
        "threading._make_invoke_excepthook.invoke_excepthook",
        "rich.live._RefreshThread.run",
        "threading.Thread._set_tstate_lock",
        "threading.Thread._set_native_id",
        "threading.Thread._set_ident",
        "threading.Thread.run",
        "_thread.get_ident"
    ],
    "urllib3.packages.six.exec_": [
        "<builtin>.exec"
    ],
    "configparser.RawConfigParser.get": [
        "configparser.RawConfigParser._unify_values",
        "collections.ChainMap.__getitem__"
    ],
    "datetime.timedelta.__neg__": [
        "datetime.__new__"
    ],
    "rich._pick": [
        "typing.inner"
    ],
    "rich.text.Text.from_markup": [
        "rich.markup.render"
    ],
    "textual.scrollbar.ScrollBar": [
        "textual.reactive.Reactive.__init__"
    ],
    "typing.TypeVar.__init__": [
        "typing._type_check",
        "<builtin>.ValueError",
        "<builtin>.bool",
        "<builtin>.TypeError",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "textual.driver.Driver": [
        "abc.abstractmethod"
    ],
    "rich.padding.unpack": [
        "typing.cast",
        "typing._VariadicGenericAlias.__getitem__"
    ],
    "textual.widgets._scroll_view.ScrollView": [
        "typing.__new__",
        "<builtin>.property",
        "textual.reactive.Reactive.__init__"
    ],
    "rdf": [
        "rdf.TurtleLexer",
        "pygments.lexer.__new__",
        "rdf.ShExCLexer",
        "rdf.SparqlLexer"
    ],
    "urllib3.util.ssl_match_hostname": [
        "urllib3.util.ssl_match_hostname.CertificateError",
        "ssl_match_hostname.CertificateError"
    ],
    "textual.reactive": [
        "textual.reactive.Reactive",
        "typing.TypeVar.__init__",
        "typing.inner",
        "typing.__init_subclass__"
    ],
    "commonmark.blocks.Parser.parse": [
        "commonmark.blocks.Parser.process_inlines",
        "commonmark.blocks.Parser.incorporate_line",
        "<builtin>.range",
        "commonmark.blocks.Parser.finalize",
        "commonmark.node.Node.__init__",
        "<builtin>.len",
        "re.split"
    ],
    "configparser.<lambda>": [
        "configparser.BasicInterpolation.before_get"
    ],
    "rich.status.Status": [
        "<builtin>.property"
    ],
    "solidity.SolidityLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "promql": [
        "promql.PromQLLexer"
    ],
    "spice": [
        "pygments.lexer.__new__",
        "spice.SpiceLexer"
    ],
    "dataclasses._field_init": [
        "dataclasses._field_assign"
    ],
    "typing._VariadicGenericAlias": [
        "typing._tp_cache"
    ],
    "decoder": [
        "re.compile",
        "decoder.JSONDecoder",
        "enum.IntFlag.__or__",
        "decoder.JSONDecodeError"
    ],
    "logging.Filterer.filter": [
        "<builtin>.hasattr"
    ],
    "protocol.rich_cast": [
        "typing.cast",
        "inspect.isclass",
        "json.JSON.__rich__",
        "widget.Widget.__rich__"
    ],
    "fortran.FortranLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "rich_cli.__main__.blend_text": [
        "<builtin>.range",
        "richtext.Text.stylize",
        "rich.text.Text.__init__",
        "rich.text.Text.__len__",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "inspect.unwrap": [
        "<builtin>.ValueError",
        "inspect._is_wrapper",
        "<builtin>.len",
        "<builtin>.id"
    ],
    "typing.SupportsIndex": [
        "abc.abstractmethod"
    ],
    "rich.ansi.AnsiDecoder.__init__": [
        "rich.style.Style.null"
    ],
    "iolang": [
        "iolang.IoLexer"
    ],
    "rich.segment.Segment.get_shape": [
        "<builtin>.max",
        "<builtin>.len",
        "rich.segment.Segment.get_line_length"
    ],
    "configparser.RawConfigParser.__init__": [
        "re.compile",
        "configparser.ConverterMapping.__init__",
        "configparser.SectionProxy.__init__",
        "<builtin>.tuple"
    ],
    "click.core": [
        "enum.__prepare__",
        "click.core.Context",
        "typing.inner",
        "click.core.Parameter",
        "click.core.BaseCommand",
        "click.core.ParameterSource",
        "typing.TypeVar.__init__",
        "click.core.Argument",
        "click.core.Option",
        "click.core.MultiCommand",
        "typing._VariadicGenericAlias.__getitem__",
        "click.core.CommandCollection",
        "re.compile",
        "click.core.Group",
        "click.core.Command"
    ],
    "rich.markdown.MarkdownContext.enter_style": [
        "rich.markdown.current_style",
        "rich.style.StyleStack.push",
        "rich.console.Console.get_style"
    ],
    "urllib3.contrib.socks": [
        "urllib3.contrib.socks.SOCKSHTTPSConnectionPool",
        "urllib3.contrib.socks.SOCKSConnection",
        "warnings.warn",
        "urllib3.contrib.socks.SOCKSHTTPConnectionPool",
        "urllib3.contrib.socks.SOCKSProxyManager",
        "urllib3.contrib.socks.SOCKSHTTPSConnection"
    ],
    "textual.layouts.grid.GridLayout.add_row": [
        "<builtin>.range",
        "textual.layout.Layout.require_update"
    ],
    "docutils.parsers.rst.RFC2822Body": [],
    "pathlib.Path.open": [
        "pathlib.PurePath.__fspath__",
        "pathlib.Path._opener",
        "codecs.BufferedIncrementalDecoder.__init__"
    ],
    "rich_cli.__main__.main.print_usage": [
        "rich.console.Console.print",
        "sys.exit"
    ],
    "zipfile.make": [
        "zipfile.ZipFile.__init__"
    ],
    "contextlib.contextmanager": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "status_codes.doc": [],
    "rich.syntax.SyntaxTheme": [
        "abc.abstractmethod"
    ],
    "subprocess.Popen.__exit__": [
        "subprocess.Popen.wait"
    ],
    "textual.views._dock_view": [
        "textual.views._dock_view.DockView",
        "textual.view.View.__init_subclass__",
        "textual.layouts.grid",
        "textual.views._dock_view.DoNotSet"
    ],
    "urllib3.contrib.pyopenssl": [
        "urllib3.contrib.pyopenssl.PyOpenSSLContext",
        "urllib3.contrib.pyopenssl.UnsupportedExtension",
        "cryptography.x509",
        "<builtin>.hasattr",
        "cryptography.hazmat.backends.openssl.x509",
        "warnings.warn",
        "logging.getLogger",
        "<map>.items",
        "urllib3.packages.backports.makefile",
        "<builtin>.dict",
        "urllib3.contrib.pyopenssl.WrappedSocket"
    ],
    "threading.Event.set": [
        "threading.Condition.notify_all",
        "threading.Condition.__exit__",
        "threading.Condition.__enter__"
    ],
    "textual.events.Key.__init__": [
        "textual.message.Message.__init__",
        "<builtin>.isinstance",
        "<builtin>.super"
    ],
    "docutils.statemachine.StateMachine.notify_observers": [
        "nodes.document.note_source",
        "docutils.statemachine.ViewList.info"
    ],
    "rich.control": [
        "rich.control.Control",
        "<builtin>.range",
        "typing.inner"
    ],
    "types.Path": [
        "typing.inner"
    ],
    "textual.binding.Bindings.bind": [],
    "click.core.sort_key": [
        "click.core.Parameter.__repr__"
    ],
    "textual.app.App.__init__": [
        "textual.binding.Bindings.bind",
        "textual.app.App.get_driver_class",
        "textual.binding.Bindings.__init__",
        "textual.layouts.dock.DockLayout.__init__",
        "<builtin>.open",
        "textual._animator.Animator.bind",
        "<builtin>.super",
        "<builtin>.set",
        "textual.message_pump.MessagePump.__init__",
        "rich.console.Console.__init__",
        "textual._animator.Animator.__init__"
    ],
    "rich.theme": [
        "rich.theme.ThemeStackError",
        "rich.theme.Theme",
        "rich.theme.ThemeStack",
        "rich.theme.Theme.__init__",
        "<builtin>.print"
    ],
    "rich.json.JSON.__init__": [
        "json.loads",
        "json.dumps"
    ],
    "requests.utils.address_in_network": [
        "<builtin>.int"
    ],
    "docutils.statemachine.State.make_transition": [
        "<builtin>.hasattr",
        "re.compile",
        "<builtin>.getattr"
    ],
    "logging.Formatter.formatStack": [],
    "textual.message_pump.MessagePump.on_message": [
        "textual.log",
        "_callback.invoke",
        "widget.Widget.post_message",
        "<builtin>.getattr"
    ],
    "css.SassLexer": [
        "pygments.lexer.default.__init__",
        "enum.IntFlag.__or__",
        "css._starts_block",
        "pygments.lexer.bygroups",
        "copy.copy"
    ],
    "logging.currentframe": [],
    "pointless.PointlessLexer": [
        "pygments.lexer.words.__init__"
    ],
    "commonmark.node.NodeWalker.nxt": [
        "commonmark.node.NodeWalker.__next__",
        "<builtin>.next"
    ],
    "re._compile": [
        "types.DynamicClassAttribute.__get__",
        "<builtin>.iter",
        "<builtin>.type",
        "<builtin>.isinstance",
        "sre_compile.isstring",
        "<builtin>.ValueError",
        "enum.IntFlag.__and__",
        "<builtin>.TypeError",
        "sre_compile.compile",
        "<builtin>.len",
        "<builtin>.next"
    ],
    "rich.traceback.install": [
        "rich.console.Console.__init__",
        "typing.inner"
    ],
    "docutils.statemachine.StateMachine.runtime_init": [
        "states.RSTState.runtime_init"
    ],
    "textwrap.TextWrapper": [
        "re.escape",
        "re.compile",
        "<builtin>.ord"
    ],
    "click.utils.LazyFile": [
        "typing.inner"
    ],
    "logging.Formatter.formatMessage": [],
    "grammar_notation.BnfLexer": [
        "pygments.lexer.bygroups"
    ],
    "http.cookiejar.parse_ns_headers": [
        "<list>.append",
        "<builtin>.enumerate",
        "http.cookiejar.http2time",
        "http.cookiejar.strip_quotes"
    ],
    "logging.StrFormatStyle": [
        "re.compile"
    ],
    "rich.text.Text.join": [
        "typing.inner",
        "rich.text.Text.__len__",
        "text.iter_text",
        "rich.style.Style.__bool__",
        "<builtin>.len",
        "rich.text.Text.blank_copy"
    ],
    "rich.pretty.Node": [
        "typing.inner"
    ],
    "message.<listcomp>": [
        "email._policybase.Compat32.header_fetch_parse"
    ],
    "logging.Logger.makeRecord": [
        "logging.LogRecord.__init__",
        "<builtin>.KeyError"
    ],
    "ssl.TLSVersion": [],
    "rich.style.Style": [
        "rich.style._Bit.__init__",
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "<builtin>.classmethod",
        "functools.lru_cache.decorating_function",
        "functools.lru_cache",
        "<builtin>.property"
    ],
    "textual.message_pump.MessagePump.post_message_from_child": [
        "textual.message_pump.MessagePump.post_message",
        "widget.Widget.post_message"
    ],
    "socket.socket.makefile": [
        "socket.SocketIO.__init__",
        "socket.SocketIO.readable",
        "<builtin>.set",
        "<builtin>.ValueError"
    ],
    "socket.socket.close": [
        "ssl.SSLSocket._real_close",
        "socket.socket._real_close"
    ],
    "inspect.Signature._bind": [
        "inspect.BoundArguments.__init__",
        "<builtin>.iter",
        "<builtin>.tuple",
        "<builtin>.TypeError",
        "<builtin>.next"
    ],
    "rich.console.NewLine.__rich_console__": [],
    "ssl_.create_urllib3_context": [
        "ssl_.disable_check_hostname",
        "ssl.options",
        "enum.IntFlag.__or__",
        "ssl.__new__",
        "ssl.verify_mode"
    ],
    "rich.console.ScreenContext": [
        "typing.inner"
    ],
    "rich.table.Table.grid": [
        "textual.reactive.Reactive.__get__"
    ],
    "gettext.dngettext": [
        "gettext.NullTranslations.ngettext",
        "gettext.translation"
    ],
    "logging.Handler.setFormatter": [],
    "pathlib.PurePath.joinpath": [
        "pathlib.PurePath._make_child"
    ],
    "requests.cookies": [
        "dummy_threading",
        "requests.cookies.CookieConflictError",
        "requests.cookies.MockRequest",
        "re.escape",
        "re.compile",
        "requests.cookies.RequestsCookieJar",
        "requests.cookies.MockResponse"
    ],
    "typing._VariadicGenericAlias.__getitem__": [
        "typing.inner",
        "<builtin>.isinstance",
        "<builtin>.tuple",
        "<builtin>.TypeError",
        "<builtin>.len"
    ],
    "promql.PromQLLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__",
        "pygments.lexer.default.__init__"
    ],
    "bisect": [],
    "rich.text.Text.__str__": [
        "rich.text.Text.plain"
    ],
    "rich.traceback": [
        "platform.system",
        "rich.traceback.StackSummary",
        "typing.inner",
        "rich.traceback.Trace",
        "rich.traceback.Traceback",
        "dataclasses.dataclass",
        "rich.traceback.Frame",
        "rich.traceback.TracebackException",
        "rich.traceback.FrameSummary",
        "rich.theme",
        "rich.traceback._SyntaxError",
        "rich.traceback.PathHighlighter",
        "rich.traceback.Stack",
        "rich.default_styles",
        "rich.theme.Theme.__init__"
    ],
    "rich.text.Text.__init__": [
        "<builtin>.len",
        "control.strip_control_codes"
    ],
    "pathlib._from_parts": [
        "pathlib._parse_args"
    ],
    "rich.table": [
        "rich.console.Console",
        "typing.__new__",
        "rich.box",
        "dataclasses.Field.__set_name__",
        "rich.table.Table",
        "rich.table.Row",
        "dataclasses.dataclass",
        "rich.table._Cell",
        "rich.table.Column",
        "rich._timer.timer",
        "rich._ratio",
        "rich._timer"
    ],
    "textual.messages": [
        "textual.messages.CursorMove",
        "textual.messages.Update",
        "textual.messages.Layout",
        "textual.message.Message.__init_subclass__"
    ],
    "requests.utils.rewind_body": [
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "logging.StreamHandler.flush": [
        "logging.StreamHandler.flush",
        "logging.Handler.acquire",
        "<builtin>.hasattr"
    ],
    "click.core.show_help": [
        "click.core.Context.exit",
        "click.core.Context.get_help",
        "utils.echo"
    ],
    "pygments.lexers._automodule.__getattr__": [
        "<builtin>.AttributeError",
        "<builtin>.setattr",
        "pygments.lexers._load_lexers",
        "<builtin>.getattr"
    ],
    "hashlib.__get_builtin_constructor": [
        "<map>.get",
        "<builtin>.ValueError"
    ],
    "rich.box": [
        "rich._loop",
        "rich.box.Box.__init__",
        "rich.text.Text.__init__",
        "rich.columns",
        "<builtin>.sorted",
        "rich.columns.Columns.add_renderable",
        "<builtin>.getattr",
        "rich.columns.Columns.__init__",
        "rich.box.Box"
    ],
    "encodings.search_function": [
        "idna.getregentry",
        "<builtin>.__import__",
        "<builtin>.callable",
        "encodings.normalize_encoding",
        "utf_8.getregentry",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "textual.driver.Driver.send_event": [
        "asyncio.run_coroutine_threadsafe"
    ],
    "zipfile": [
        "zipfile._SharedFile",
        "zipfile.BadZipFile",
        "zipfile.ZipFile",
        "zipfile.FastLookup",
        "zipfile.ZipExtFile",
        "zipfile.ZipInfo",
        "zipfile._Tellable",
        "zipfile.Path",
        "zipfile.LZMACompressor",
        "zipfile._ZipWriteFile",
        "zipfile.LZMADecompressor",
        "zipfile.LargeZipFile",
        "zipfile.PyZipFile",
        "zipfile.CompleteDirs"
    ],
    "urllib3.util.url.ensure_type": [
        "packages.six.ensure_text"
    ],
    "rich.console.decorator": [
        "functools.update_wrapper",
        "functools.wraps"
    ],
    "textual._lines": [],
    "sre_compile._optimize_charset": [
        "<builtin>.bytes",
        "<builtin>.range",
        "sre_compile._mk_bitmap",
        "<builtin>.bytearray",
        "<builtin>.any",
        "<builtin>.map",
        "<list>.append",
        "sre_compile._bytes_to_codes",
        "<builtin>.len"
    ],
    "email.feedparser": [
        "<builtin>.object",
        "feedparser.BytesFeedParser",
        "email.feedparser.FeedParser",
        "feedparser.FeedParser",
        "re.compile",
        "email.feedparser.BufferedSubFile",
        "email.feedparser.BytesFeedParser",
        "email._policybase",
        "feedparser.BufferedSubFile"
    ],
    "rich.json.JSON": [
        "<builtin>.classmethod"
    ],
    "requests.models.Response.close": [
        "urllib3.response.HTTPResponse.release_conn",
        "<builtin>.getattr"
    ],
    "http.cookiejar.DefaultCookiePolicy.set_ok_verifiability": [
        "requests.cookies.unverifiable",
        "http.cookiejar.is_third_party"
    ],
    "prolog": [
        "prolog.PrologLexer",
        "prolog.LogtalkLexer"
    ],
    "typing._GenericAlias.__repr__": [
        "typing._type_repr",
        "<builtin>.len"
    ],
    "click.core.CommandCollection": [
        "typing.inner"
    ],
    "importlib.metadata.FastPath.__init__": [
        "posixpath.basename"
    ],
    "graphics._shortened_many": [],
    "urllib3.util.retry": [
        "<builtin>.object",
        "logging.getLogger",
        "urllib3.util.retry.Retry.__init__",
        "urllib3.util.retry._RetryMeta",
        "collections.namedtuple",
        "email",
        "urllib3.util.retry.Retry"
    ],
    "rich.containers.Renderables": [
        "typing.inner"
    ],
    "logging.Logger.removeHandler": [
        "<list>.remove",
        "logging._acquireLock"
    ],
    "rich.box.Box.__init__": [
        "<builtin>.iter",
        "<str>.splitlines"
    ],
    "configs.TerraformLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "snobol.SnobolLexer": [
        "pygments.lexer.bygroups"
    ],
    "difflib.SequenceMatcher.set_seqs": [
        "difflib.SequenceMatcher.set_seq1",
        "difflib.SequenceMatcher.set_seq2"
    ],
    "pygments.lexer.__new__": [
        "util.make_analysator"
    ],
    "rich_rst.RSTVisitor.visit_problematic": [
        "docutils.nodes.Element.astext",
        "rich.panel.Panel.__init__",
        "rich.syntax.Syntax.__init__"
    ],
    "requests.cookies.MockResponse.__init__": [],
    "rich.markup.MozPreprocHashLexer": [
        "token._TokenType.__getattr__",
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "rich.syntax.ANSISyntaxTheme.__init__": [],
    "commonmark.normalize_reference._parse_table": [
        "<builtin>.any",
        "<builtin>.map",
        "<builtin>.chr",
        "<str>.split",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "ipaddress._ip_int_from_string": [
        "ipaddress._parse_octet",
        "ipaddress._parse_hextet"
    ],
    "textual._xterm_parser.XTermParser.__init__": [
        "textual._parser.Parser.__init__",
        "<builtin>.super"
    ],
    "ipaddress._BaseV6._make_netmask": [
        "ipaddress._IPAddressBase._prefix_from_prefix_string",
        "ipaddress._IPAddressBase._ip_int_from_prefix",
        "ipaddress._IPAddressBase._report_invalid_netmask",
        "ipaddress.IPv6Address.__init__",
        "<builtin>.isinstance"
    ],
    "modeline": [
        "re.compile"
    ],
    "rich.highlighter.ReprHighlighter": [
        "rich.highlighter._combine_regex"
    ],
    "rich.live": [
        "rich.table.Table.__init__",
        "<builtin>.range",
        "rich.live._RefreshThread",
        "<builtin>.list",
        "rich.syntax.Syntax.__init__",
        "rich.live.Live",
        "rich.align.Align.center",
        "rich.live_render",
        "rich.table.Table.add_row",
        "rich.text.Text.__init__",
        "itertools.cycle",
        "rich.live.Live.__init__",
        "rich.file_proxy",
        "rich.table.Table.add_column",
        "rich.live.Live.update",
        "<builtin>.len",
        "<builtin>.next"
    ],
    "click.exceptions": [
        "click.exceptions.FileError",
        "typing.inner",
        "click.exceptions.ClickException",
        "click.exceptions.BadOptionUsage",
        "click.exceptions.Exit",
        "click.exceptions.BadParameter",
        "click.exceptions.Abort",
        "click.exceptions.NoSuchOption",
        "click.exceptions.UsageError",
        "click.exceptions.MissingParameter",
        "click.exceptions.BadArgumentUsage"
    ],
    "rich.styled": [
        "rich.styled.Styled",
        "rich.panel.Panel.__init__",
        "rich.styled.Styled.__init__"
    ],
    "functools._lru_cache_wrapper": [
        "<builtin>.object",
        "_thread.RLock"
    ],
    "rich.color": [
        "platform.system",
        "rich.table.Table.__init__",
        "typing.__new__",
        "rich.color.ColorParseError",
        "colorsys",
        "rich.color.ColorType",
        "<builtin>.str",
        "rich.table.Table.add_row",
        "rich.color.ColorSystem",
        "rich.text.Text.__init__",
        "re.compile",
        "<builtin>.sorted",
        "rich.table.Table.add_column",
        "rich.color.Color"
    ],
    "igor.IgorLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.words.__init__"
    ],
    "rich.syntax.Syntax": [
        "typing.inner",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "commonmark.common.unescape_string": [
        "re.sub",
        "re.search"
    ],
    "commonmark.blocks.Parser.__init__": [
        "commonmark.node.Node.__init__",
        "commonmark.inlines.InlineParser.__init__"
    ],
    "textual.scrollbar": [
        "rich.repr.auto",
        "textual.scrollbar.ScrollUp",
        "textual.scrollbar.ScrollLeft",
        "rich.console.Console.print",
        "textual.message.Message.__init_subclass__",
        "textual.scrollbar.ScrollBar",
        "textual.scrollbar.ScrollDown",
        "textual.widget.Widget.__init_subclass__",
        "textual.scrollbar.ScrollBarRender.__init__",
        "textual.scrollbar.ScrollTo",
        "rich.console.Console.__init__",
        "textual.scrollbar.ScrollRight",
        "textual.scrollbar.ScrollBarRender"
    ],
    "meson": [
        "meson.MesonLexer",
        "pygments.lexer.__new__"
    ],
    "pygments.lexers.guess_lexer_for_filename": [
        "<list>.sort",
        "posixpath.basename",
        "fnmatch.fnmatch",
        "<list>.append",
        "<builtin>.set",
        "pygments.lexers._iter_lexerclasses",
        "<builtin>.len"
    ],
    "http.cookiejar.eff_request_host": [
        "http.cookiejar.request_host",
        "<str>.find",
        "<str>.search"
    ],
    "requests.cookies._copy_cookie_jar": [
        "<builtin>.hasattr",
        "requests.cookies.RequestsCookieJar.copy"
    ],
    "requests.models.PreparedRequest.__init__": [
        "hooks.default_hooks"
    ],
    "email.quoprimime": [
        "<builtin>.chr",
        "<builtin>.range",
        "<str>.encode",
        "<builtin>.ord"
    ],
    "ntpath.basename": [
        "ntpath.split"
    ],
    "pathlib.Path.read_text": [
        "codecs.BufferedIncrementalDecoder.decode",
        "pathlib.Path.open"
    ],
    "functools.lru_cache": [
        "functools._lru_cache_wrapper",
        "<builtin>.callable",
        "<builtin>.isinstance",
        "<builtin>.TypeError",
        "functools.update_wrapper"
    ],
    "procfile": [
        "procfile.ProcfileLexer"
    ],
    "urllib.parse.urlunparse": [
        "urllib.parse._noop",
        "urllib.parse.urlunsplit",
        "urllib.parse._coerce_args"
    ],
    "rich.measure": [
        "rich.protocol",
        "rich.measure.Measurement",
        "typing.inner"
    ],
    "pathlib.PurePath.__fspath__": [
        "pathlib.PurePath.__str__",
        "<builtin>.str"
    ],
    "textual.layouts.grid.GridLayout.add_column": [
        "<builtin>.range",
        "textual.layout.Layout.require_update"
    ],
    "graphviz.GraphvizLexer": [
        "pygments.lexer.bygroups"
    ],
    "graphviz": [
        "graphviz.GraphvizLexer"
    ],
    "inspect.isawaitable": [
        "<builtin>.isinstance",
        "<builtin>.bool"
    ],
    "types.UUIDParameterType": [
        "typing.inner"
    ],
    "make.MakefileLexer": [
        "re.compile"
    ],
    "rich.segment": [
        "enum.__prepare__",
        "rich.repr.rich_repr",
        "typing.inner",
        "rich.text.Text.from_markup",
        "<builtin>.list",
        "logging.getLogger",
        "rich.segment.ControlType",
        "rich.segment.Segments",
        "rich.segment.SegmentLines",
        "rich.cells",
        "rich.segment.Segment",
        "rich.repr.do_replace",
        "rich.syntax",
        "rich.repr"
    ],
    "urllib3.packages.six.Module_six_moves_urllib": [
        "urllib3.packages.six._SixMetaPathImporter._get_module"
    ],
    "types.DateTime": [
        "typing.inner"
    ],
    "urllib3.response.HTTPResponse._init_decoder": [
        "response._get_decoder",
        "<builtin>.len",
        "_collections_abc.Mapping.get"
    ],
    "css": [
        "token._TokenType.__getattr__",
        "css.LessCssLexer",
        "pygments.lexer.default.__init__",
        "css.ScssLexer",
        "pygments.lexer.words.__init__",
        "pygments.lexer.bygroups",
        "css.SassLexer",
        "css.CssLexer",
        "pygments.lexer.__new__"
    ],
    "requests._internal_utils.unicode_is_ascii": [
        "<builtin>.isinstance"
    ],
    "optparse.OptionParser.__init__": [
        "optparse.OptionParser.set_usage",
        "optparse.OptionParser._init_parsing_state",
        "optparse.OptionContainer.__init__",
        "optparse.HelpFormatter.set_parser",
        "optparse.OptionParser._populate_option_list"
    ],
    "subprocess._use_posix_spawn": [
        "<builtin>.hasattr",
        "<builtin>.map",
        "<builtin>.len",
        "<builtin>.tuple"
    ],
    "rich.highlighter": [
        "rich.highlighter.ReprHighlighter",
        "rich.highlighter.JSONHighlighter",
        "rich.highlighter.NullHighlighter",
        "rich.highlighter.Highlighter",
        "rich.highlighter.RegexHighlighter",
        "json",
        "rich.highlighter.ISO8601Highlighter"
    ],
    "urllib3.connectionpool.HTTPSConnectionPool.__init__": [
        "urllib3.connectionpool.HTTPConnectionPool.__init__"
    ],
    "sre_compile._get_charset_prefix": [
        "<builtin>.range",
        "sre_parse.SubPattern.__getitem__",
        "<builtin>.any",
        "<builtin>.map",
        "sre_parse.SubPattern.__len__",
        "sre_compile._get_iscased",
        "sre_compile._combine_flags"
    ],
    "textual.layouts.grid.resolve_tracks": [],
    "types.File": [
        "typing.inner"
    ],
    "ipaddress._BaseV4._ip_int_from_string": [
        "<builtin>.map",
        "<builtin>.len"
    ],
    "configparser.ExtendedInterpolation": [
        "re.compile"
    ],
    "http.cookiejar.CookieJar.add_cookie_header": [
        "http.cookiejar._debug",
        "http.cookiejar.CookieJar._cookie_attrs",
        "http.cookiejar.CookieJar._cookies_for_request",
        "http.cookiejar.CookieJar.clear_expired_cookies",
        "<builtin>.int"
    ],
    "importlib.metadata.find_distributions": [
        "importlib.metadata.path",
        "importlib.metadata._search_paths"
    ],
    "email.feedparser.BufferedSubFile.push": [
        "email.feedparser.BufferedSubFile.pushlines"
    ],
    "numbers": [
        "numbers.Complex",
        "numbers.Rational",
        "numbers.Number",
        "numbers.Real",
        "numbers.Integral"
    ],
    "urllib3.connectionpool.ConnectionPool.__init__": [
        "urllib3.connectionpool._normalize_host"
    ],
    "rich.text.Text.copy": [
        "rich.text.Text.__init__",
        "rich.text.Text.plain"
    ],
    "rich_rst.RSTVisitor.visit_Text": [
        "rich.console.Console.get_style",
        "rich.text.Text.append",
        "rich.text.Text.__init__",
        "docutils.nodes.Text.astext",
        "<builtin>.isinstance"
    ],
    "textual.driver.Driver.process_event": [
        "textual.driver.Driver.send_event",
        "<builtin>.isinstance"
    ],
    "pygments.lexers.get_lexer_by_name": [
        "plugin.find_plugin_lexers",
        "pygments.lexer.RegexLexerMeta.__call__"
    ],
    "textual.widgets._tree_control.TreeControl": [
        "textual.reactive.Reactive.__init__",
        "typing.NewType.new_type"
    ],
    "_button.Button": [
        "typing.__new__",
        "textual.reactive.Reactive.__init__"
    ],
    "rich.markdown.MarkdownContext": [
        "<builtin>.property"
    ],
    "os._fscodec.fsencode": [
        "<builtin>.isinstance",
        "os._fspath",
        "<str>.encode"
    ],
    "docutils.parsers.rst.SubstitutionDef": [
        "re.compile"
    ],
    "genericpath._splitext": [
        "<builtin>.max",
        "<str>.rfind"
    ],
    "logging._StderrHandler.__init__": [
        "logging.Handler.__init__"
    ],
    "rich.segment.ControlType": [],
    "types._NumberRangeBase": [
        "typing.inner"
    ],
    "requests.models.RequestEncodingMixin": [
        "<builtin>.property",
        "<builtin>.staticmethod"
    ],
    "urllib.request.proxy_bypass_macosx_sysconf": [
        "urllib.request._proxy_bypass_macosx_sysconf"
    ],
    "textual.layout.Layout.reflow": [
        "textual.layout_map.LayoutMap.keys",
        "textual.layout.Layout.map",
        "textual.layout_map.LayoutMap.__init__",
        "<builtin>.set",
        "textual.layout_map.LayoutMap.items",
        "textual.layout.Layout.reset",
        "textual.layout_map.LayoutMap.add_widget",
        "textual.geometry.region"
    ],
    "re._subx": [
        "re._compile_repl",
        "<builtin>.len"
    ],
    "pygments.lexer.streamer": [
        "pygments.lexer.RegexLexer.get_tokens_unprocessed"
    ],
    "installers.RPMSpecLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "urllib3.filepost.encode_multipart_formdata": [
        "urllib3.filepost.iter_field_objects",
        "<builtin>.str",
        "<builtin>.isinstance",
        "urllib3.filepost.choose_boundary"
    ],
    "asyncio.futures": [],
    "logging.LoggerAdapter": [
        "<builtin>.property"
    ],
    "ssl._TLSMessageType": [],
    "urllib3.connection.HTTPConnection.__init__": [
        "http.client.HTTPConnection.__init__"
    ],
    "http.cookiejar.CookieJar._cookies_for_request": [
        "<list>.extend"
    ],
    "modeling.StanLexer": [
        "pygments.lexer.bygroups"
    ],
    "textual.widgets._footer": [
        "rich.repr.auto",
        "textual.widgets._footer.Footer",
        "textual.widgets_footer.Footer",
        "textual.widget.Widget.__init_subclass__",
        "textual.reactive.Reactive.__set_name__"
    ],
    "sophia": [
        "pygments.lexer.__new__",
        "sophia.SophiaLexer"
    ],
    "rich.markup.MoinWikiLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "rich.console.Group": [
        "<builtin>.property"
    ],
    "asyncio.format_helpers": [],
    "types.UnprocessedParamType": [
        "typing.inner"
    ],
    "urllib3.connectionpool.HTTPConnectionPool.close": [
        "http.client.HTTPConnection.close",
        "queue.Queue.get"
    ],
    "rich.containers.Lines.__init__": [
        "<builtin>.list"
    ],
    "rich._export_format": [],
    "http.cookiejar.MozillaCookieJar": [
        "re.compile"
    ],
    "rich.markup.BBCodeLexer": [
        "pygments.lexer.bygroups"
    ],
    "textual.geometry.Region.intersection": [],
    "email.message": [
        "email.message.Message",
        "email.charset.Charset.__init__",
        "email.message.MIMEPart",
        "re.compile",
        "email.message.EmailMessage"
    ],
    "sre_parse.parse_template": [
        "sre_parse.Tokenizer.__init__",
        "<list>.append",
        "sre_parse.Tokenizer.get",
        "<builtin>.isinstance",
        "<builtin>.chr",
        "sre_parse.addgroup",
        "<builtin>.IndexError",
        "<str>.isidentifier",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "docutils.parsers.rst.tableparser.GridTableParser": [
        "re.compile"
    ],
    "textual.layouts.grid.GridLayout.place": [
        "textual.layout.Layout.require_update"
    ],
    "rich.console.RenderHook": [
        "typing.inner",
        "abc.abstractmethod"
    ],
    "textual._timer.Timer.__init__": [
        "locks.Event.__init__",
        "<builtin>.repr"
    ],
    "sre_compile._mk_bitmap": [
        "<builtin>.range",
        "<builtin>.len",
        "sre_compile.<listcomp>"
    ],
    "threading.Event.wait": [
        "threading.Condition.wait",
        "threading.Condition.__exit__",
        "threading.Condition.__enter__"
    ],
    "requests.cookies.MockResponse.info": [],
    "requests.structures.CaseInsensitiveDict.copy": [
        "requests.structures.CaseInsensitiveDict.__init__"
    ],
    "inspect._signature_from_builtin": [
        "inspect._signature_is_builtin",
        "inspect._signature_fromstr",
        "<builtin>.ValueError",
        "<builtin>.getattr",
        "<builtin>.TypeError"
    ],
    "ride": [
        "ride.RideLexer",
        "pygments.lexer.__new__"
    ],
    "textual.actions": [
        "actions.ActionError",
        "re.compile",
        "textual.actions.ActionError",
        "<builtin>.print"
    ],
    "special": [
        "re.compile",
        "special.OutputLexer",
        "special.RawTokenLexer",
        "special.TextLexer"
    ],
    "logging.Handler": [
        "<builtin>.property"
    ],
    "urllib3.util.url._normalize_host": [
        "<str>.lower",
        "<str>.match",
        "<str>.search",
        "<str>.span",
        "packages.six.ensure_str",
        "<builtin>.isinstance"
    ],
    "rich.text.Text.get_style_at_offset": [
        "rich.style.Style.copy",
        "rich.text.Text.__len__",
        "<builtin>.len",
        "rich.console.Console.get_style"
    ],
    "requests.adapters.HTTPAdapter.send": [
        "requests.adapters.HTTPAdapter.request_url",
        "urllib3.connectionpool.HTTPConnectionPool.urlopen",
        "<builtin>.hex",
        "<builtin>.hasattr",
        "requests.adapters.HTTPAdapter.get_connection",
        "requests.adapters.HTTPAdapter.add_headers",
        "<builtin>.isinstance",
        "timeout.Timeout.__init__",
        "<builtin>.ValueError",
        "requests.adapters.HTTPAdapter.cert_verify",
        "requests.adapters.HTTPAdapter.build_response",
        "<builtin>.len"
    ],
    "sre_parse.SubPattern.__getitem__": [
        "sre_parse.SubPattern.__init__",
        "<builtin>.isinstance"
    ],
    "configs.PacmanConfLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.words.__init__"
    ],
    "shutil.get_terminal_size": [
        "os._Environ.__getitem__",
        "<builtin>.int"
    ],
    "modeling.ModelicaLexer": [
        "enum.IntFlag.__or__",
        "pygments.lexer.default.__init__",
        "pygments.lexer.using"
    ],
    "textual._event_broker": [
        "textual._event_broker.NoHandler",
        "textual._event_broker.HandlerArguments",
        "typing.__new__",
        "<builtin>.print"
    ],
    "logging._acquireLock": [
        "threading._RLock.acquire"
    ],
    "rich.screen": [
        "rich.screen.Screen"
    ],
    "urllib3.connectionpool.HTTPConnectionPool._get_timeout": [
        "<builtin>.isinstance",
        "timeout.Timeout.clone"
    ],
    "importlib.metadata.entry_points": [
        "importlib.metadata.distributions",
        "<builtin>.sorted",
        "importlib.metadata._from_text",
        "<builtin>.tuple",
        "importlib.metadata.PathDistribution.read_text"
    ],
    "requests": [
        "urllib3.contrib.pyopenssl.inject_into_urllib3",
        "urllib3",
        "requests.packages",
        "warnings.simplefilter",
        "logging.Logger.addHandler",
        "warnings.warn",
        "logging.getLogger",
        "requests._check_cryptography",
        "urllib3.contrib.pyopenssl",
        "requests.exceptions",
        "<builtin>.getattr",
        "requests.utils",
        "requests.api",
        "requests.check_compatibility"
    ],
    "requests.hooks.default_hooks": [],
    "_py_abc": [
        "_py_abc.ABCMeta",
        "_weakrefset"
    ],
    "importlib.metadata.discover": [
        "importlib.metadata.Context.__init__",
        "importlib.metadata._discover_resolvers"
    ],
    "requests.models.Response.generate": [
        "urllib3.response.HTTPResponse.stream"
    ],
    "rich._ratio": [
        "typing.inner",
        "fractions",
        "rich._ratio.ratio_resolve",
        "_ratio.Edge",
        "<builtin>.sum",
        "rich._ratio.Edge",
        "<builtin>.print"
    ],
    "slash": [
        "slash.SlashLexer",
        "pygments.lexer.__new__",
        "slash.SlashLanguageLexer"
    ],
    "textual.views._grid_view": [
        "textual.view.View.__init_subclass__",
        "textual.views._grid_view.GridView"
    ],
    "asyncio.streams": [
        "<builtin>.hasattr",
        "asyncio.streams.FlowControlMixin",
        "asyncio.streams.StreamReaderProtocol",
        "asyncio.streams.StreamReader",
        "asyncio.streams.StreamWriter"
    ],
    "commonmark.inlines.InlineParser.parseNewline": [
        "commonmark.inlines.InlineParser.match",
        "re.sub",
        "commonmark.node.Node.__init__",
        "commonmark.node.Node.append_child",
        "<builtin>.len"
    ],
    "docutils.parsers.rst.roles.register_generic_role": [
        "docutils.parsers.rst.roles.register_canonical_role",
        "docutils.parsers.rst.roles.GenericRole.__init__"
    ],
    "logging.Formatter.formatException": [
        "_io.StringIO",
        "traceback.print_exception"
    ],
    "importlib.metadata.PathDistribution.read_text": [
        "pathlib.PurePath.joinpath",
        "contextlib.suppress.__init__",
        "pathlib.Path.read_text"
    ],
    "datetime.timezone": [
        "datetime.timedelta.__neg__",
        "<builtin>.object",
        "datetime.__new__",
        "<builtin>.classmethod",
        "<builtin>.staticmethod"
    ],
    "textual.layouts.vertical.VerticalLayout.__init__": [
        "textual.layout.Layout.__init__",
        "textual.geometry.unpack",
        "<builtin>.super"
    ],
    "rich.traceback.Stack": [
        "typing.inner",
        "dataclasses.field"
    ],
    "click.parsers.AntlrLexer": [
        "pygments.lexer.bygroups"
    ],
    "pathlib._WindowsFlavour": [
        "<builtin>.set",
        "<builtin>.range"
    ],
    "email.message.Message": [
        "email.iterators"
    ],
    "ipaddress._BaseNetwork": [
        "<builtin>.property",
        "functools.cached_property.__init__",
        "<builtin>.staticmethod"
    ],
    "re.findall": [
        "<str>.findall",
        "re._compile"
    ],
    "ssl._create": [
        "ssl.SSLSocket.do_handshake",
        "socket.socket.detach",
        "socket.socket.__init__",
        "socket.family",
        "ssl.SSLContext._encode_hostname",
        "socket.type"
    ],
    "textual.log": [
        "textual.app.App.log"
    ],
    "textual.view.View.__init_subclass__": [
        "textual.widget.Widget.__init_subclass__",
        "<builtin>.super"
    ],
    "token": [
        "token._TokenType.__getattr__",
        "token._TokenType",
        "<builtin>.isinstance",
        "token._TokenType.__init__",
        "<list>.extend",
        "<builtin>.globals"
    ],
    "modeling": [
        "modeling.StanLexer",
        "modeling.ModelicaLexer",
        "modeling.BugsLexer",
        "pygments.lexer.__new__",
        "modeling.JagsLexer"
    ],
    "rich.color.Color.parse": [
        "<map>.get",
        "<str>.strip",
        "<str>.lower",
        "<str>.match",
        "<str>.groups",
        "<builtin>.all",
        "<builtin>.len",
        "<builtin>.int"
    ],
    "click.parsers.RagelEmbeddedLexer": [
        "pygments.lexer.bygroups",
        "pygments.lexer.using"
    ],
    "graph.CypherLexer": [
        "pygments.lexer.words.__init__"
    ],
    "email": [
        "email.EmailLexer",
        "email.EmailHeaderLexer"
    ],
    "objective.objective": [
        "objective.GeneratedObjectiveCVariant",
        "re.compile"
    ],
    "rich.console.Console.export_svg": [
        "<builtin>.range",
        "<builtin>.list",
        "<builtin>.str",
        "rich.cells.cell_len",
        "rich.console.Console.export_svg.make_tag",
        "<builtin>.repr",
        "<builtin>.enumerate",
        "rich.console.Console.export_svg.get_svg_style",
        "rich.console.Console.export_svg.escape_text",
        "rich.style.Style.__init__",
        "<builtin>.len"
    ],
    "urllib3.response": [
        "urllib3.response.GzipDecoderState",
        "urllib3.response.DeflateDecoder",
        "urllib3.response.GzipDecoder",
        "logging.getLogger",
        "urllib3.response.BrotliDecoder",
        "urllib3.response.MultiDecoder",
        "urllib3.response.HTTPResponse"
    ],
    "warnings.simplefilter": [
        "<builtin>.isinstance",
        "warnings._add_filter"
    ],
    "rich.text.Text.pad": [
        "<builtin>.len",
        "rich.text.Text.plain"
    ],
    "subprocess.Popen.__del__": [
        "subprocess.Popen._internal_poll"
    ],
    "click.core.Command": [
        "typing._VariadicGenericAlias.__getitem__",
        "typing.inner"
    ],
    "rich.measure.Measurement": [
        "typing.inner",
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "commonmark.inlines.InlineParser.parseLinkDestination": [
        "commonmark.inlines.InlineParser.match",
        "commonmark.common.unescape_string",
        "commonmark.common.normalize_uri",
        "commonmark.inlines.InlineParser.peek",
        "re.search"
    ],
    "rich.markdown.ImageItem.on_enter": [
        "rich.style.Style.link",
        "rich.markdown.current_style",
        "rich.text.Text.__init__",
        "<builtin>.super",
        "rich.markdown.TextElement.on_enter"
    ],
    "charset_normalizer.models.CliDetectionResult": [
        "<builtin>.property",
        "typing.inner"
    ],
    "typing.__getitem__": [
        "typing.inner",
        "typing._type_check",
        "typing._GenericAlias.__init__",
        "typing._subs_tvars",
        "typing._check_generic",
        "typing._remove_dups_flatten"
    ],
    "testing.GherkinLexer": [
        "pygments.lexer.bygroups"
    ],
    "rich.segment.SegmentLines": [
        "typing.inner"
    ],
    "ssl_match_hostname.match_hostname": [
        "ipaddress.ip_address",
        "ssl_match_hostname._to_unicode",
        "ssl_match_hostname._dnsname_match"
    ],
    "logging.Logger.callHandlers": [
        "logging.Handler.handle"
    ],
    "rich.color.ColorSystem": [],
    "modeling.BugsLexer": [
        "pygments.lexer.bygroups"
    ],
    "inspect.Signature.bind_partial": [
        "inspect.Signature._bind"
    ],
    "textual.app.App.action_quit": [
        "textual.app.App.shutdown"
    ],
    "urllib.request._proxy_bypass_macosx_sysconf": [
        "parse._splitport",
        "<builtin>.int"
    ],
    "optparse.Option.__init__": [
        "optparse.Option._check_opt_strings",
        "optparse.Option._check_action",
        "optparse.Option._check_choice",
        "optparse.Option._check_callback",
        "optparse.Option._set_attrs",
        "optparse.Option._check_type",
        "optparse.Option._check_dest",
        "optparse.Option._check_const",
        "optparse.Option._check_nargs",
        "optparse.Option._set_opt_strings"
    ],
    "configs.PkgConfigLexer": [
        "pygments.lexer.bygroups"
    ],
    "os.__subclasshook__": [
        "_collections_abc._check_methods"
    ],
    "click._compat._force_correct_text_writer": [
        "click._compat._force_correct_text_stream"
    ],
    "rich.console.Console.render_lines": [
        "<builtin>.max",
        "<builtin>.list",
        "segment.split_and_crop_lines",
        "segment.apply_style",
        "rich.style.Style.__bool__",
        "<builtin>.len"
    ],
    "textual.app.App": [
        "typing.__new__",
        "<builtin>.property",
        "textual.reactive.Reactive.__init__",
        "<builtin>.classmethod"
    ],
    "_scroll_view.max_scroll_y": [
        "widget.size"
    ],
    "zipfile.ZipFile": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "textual.scrollbar.ScrollBar.__init__": [
        "textual.widget.Widget.__init__",
        "<builtin>.super"
    ],
    "inspect._signature_get_user_defined_method": [
        "<builtin>.isinstance",
        "<builtin>.getattr"
    ],
    "emil.message.Message.get_content_maintype": [
        "emil.message.Message.get_content_type"
    ],
    "threading.Condition.__init__": [
        "threading.RLock"
    ],
    "urllib3.packages.six.MovedAttribute._resolve": [
        "urllib3.packages.six._import_module",
        "<builtin>.getattr"
    ],
    "ssl.SSLContext._encode_hostname": [
        "idna.Codec.encode",
        "<builtin>.isinstance"
    ],
    "textual.app.App.bind": [
        "textual.binding.Bindings.bind"
    ],
    "docutils.parsers.rst.roles": [
        "docutils.parsers.rst.roles.CustomRole",
        "docutils.parsers.rst.roles.register_canonical_role",
        "docutils.parsers.rst.roles.GenericRole",
        "docutils.parsers.rst.roles.register_generic_role",
        "docutils.utils.code_analyzer",
        "docutils.parsers.rst.directives"
    ],
    "urllib3.connection.HTTPSConnection.__init__": [
        "urllib3.connection.HTTPConnection.__init__"
    ],
    "rich._emoji_codes": [],
    "rich.align": [
        "rich.panel.Panel.__init__",
        "rich.highlighter",
        "typing.inner",
        "rich.constrain",
        "align.Align",
        "align.VerticalCenter",
        "rich.panel",
        "rich.align.VerticalCenter",
        "rich.align.Align"
    ],
    "ssl_match_hostname._dnsname_match": [
        "re.escape",
        "re.compile"
    ],
    "rich.segment.Segment": [
        "typing.inner",
        "functools._lru_cache_wrapper.wrapper",
        "<builtin>.classmethod",
        "typing._VariadicGenericAlias.__getitem__",
        "functools.lru_cache",
        "functools.lru_cache.decorating_function",
        "<builtin>.property"
    ],
    "inferno": [
        "inferno.LimboLexer"
    ],
    "graph": [
        "graph.CypherLexer"
    ],
    "configparser.RawConfigParser.read_file": [
        "configparser.RawConfigParser._read"
    ],
    "charset_normalizer.models.CharsetMatch": [
        "typing._Immutable",
        "configparser.SectionProxy.__init__",
        "subprocess.Popen.__exit__",
        "zipfile._Tellable",
        "typing.re",
        "pathlib.Path.open",
        "types.IntRange",
        "sophia.SophiaLexer",
        "enum.IntFlag.__or__",
        "typing._GenericAlias.__setattr__",
        "ast.Bytes",
        "contextlib._GeneratorContextManager.__exit__",
        "tracemalloc.DomainFilter",
        "_parser.Parser.feed",
        "dataclasses._cmp_fn",
        "supercollider.SuperColliderLexer",
        "typing.cast",
        "typing._GenericAlias.__eq__",
        "grammar_notation.AbnfLexer",
        "idna.Codec",
        "sre_parse.SubPattern.getwidth",
        "idna.IncrementalEncoder",
        "typing.SupportsRound",
        "ssl.SSLObject",
        "parse.urlparse",
        "ipaddress._ip_int_from_string",
        "robotframework.KeywordTable",
        "configparser.SafeConfigParser",
        "rnc.RNCCompactLexer",
        "idna.StreamReader",
        "re.sub",
        "configs.TerminfoLexer",
        "typing._Final",
        "typing._tp_cache",
        "typing.SupportsIndex",
        "dataclasses._field_assign",
        "text.Text.stylize",
        "ssl.SSLSocket.send",
        "csv.Sniffer.sniff",
        "fortran.FortranLexer",
        "configparser.NoOptionError",
        "ipaddress._BaseV4",
        "data.<setcomp>",
        "re._compile_repl",
        "inspect._is_wrapper",
        "calendar.different_locale",
        "io.StringInput",
        "sre_compile._code",
        "inspect.Parameter.__str__",
        "_scroll_view.ScrollView.__init__",
        "ssl.SSLContext.set_alpn_protocols",
        "sre_compile._bytes_to_codes",
        "ssl.SSLSocket",
        "calendar.LocaleTextCalendar",
        "dataclasses.<listcomp>",
        "ipaddress._parse_octet",
        "subprocess.run",
        "configparser.RawConfigParser.read_file",
        "robotframework.TemplatedKeywordCall",
        "io.FileOutput",
        "console.Group.__init__",
        "style.Style.parse",
        "threading.RLock",
        "sre_parse.SubPattern.__getitem__",
        "timeout._validate_timeout",
        "csv.Sniffer.__init__",
        "configs.ApacheConfLexer",
        "typing._VariadicGenericAlias",
        "optparse.OptionGroup._create_option_list",
        "configparser.Interpolation.before_read",
        "robotframework.Variable",
        "inferno.LimboLexer",
        "ast._ABC",
        "ipaddress.IPv6Network",
        "rich_cli.markdown.Paragraph",
        "scanner.Scanner",
        "widget.Widget.focus",
        "ipaddress.NetmaskValueError",
        "typing._VariadicGenericAlias.__getitem__",
        "rdf.TurtleLexer",
        "warnings.catch_warnings.__init__",
        "robotframework.KeywordSetting",
        "dataclasses._DataclassParams",
        "types._NumberParamTypeBase.convert",
        "calendar._localized_month",
        "posixpath.dirname",
        "abc.ABCMeta.register",
        "configparser.NoSectionError",
        "graph.CypherLexer",
        "rich_cli.__main__.on_error",
        "csound.CsoundDocumentLexer",
        "types.Tuple",
        "robotframework.KeywordCall",
        "ssl.SSLSocket._checkClosed",
        "configs.PropertiesLexer",
        "comal.Comal80Lexer",
        "numbers.Number",
        "enum.__members__",
        "zipfile.CompleteDirs",
        "graphviz.GraphvizLexer",
        "<builtin>.property",
        "typing.runtime_checkable",
        "rich_cli.pager.PagerRenderable.__init__",
        "inspect.parameters",
        "graphics.AsymptoteLexer",
        "threading.Condition.notify_all",
        "json.JSON.__init__",
        "typing.ForwardRef.__hash__",
        "lexer.default.__init__",
        "warnings.catch_warnings.__exit__",
        "typing.BinaryIO",
        "enum.<listcomp>",
        "dataclasses.wrap",
        "ast.Str",
        "dataclasses._DataclassParams.__init__",
        "__init__.getLogger",
        "modeling.ModelicaLexer",
        "subprocess.Popen._try_wait",
        "sre_compile._simple",
        "subprocess.Popen._get_handles",
        "sre_compile._combine_flags",
        "decoder.JSONDecoder",
        "optparse.OptionParser.set_usage",
        "optparse.Option._check_dest",
        "genericpath.exists",
        "graphics.GnuplotLexer",
        "rich_cli.markdown.UnknownElement",
        "optparse.OptionGroup",
        "subprocess.Popen.wait",
        "linux_driver.LinuxDriver._run_input_thread",
        "wait.NoWayToWaitForSocketError",
        "robotframework.GherkinTokenizer",
        "sre_compile.compile",
        "zipfile.FastLookup",
        "grammar_notation.PegLexer",
        "types.StringParamType.convert",
        "ipaddress._IPv6Constants",
        "datetime._check_date_fields",
        "signal._enum_to_int",
        "inspect.isclass",
        "sieve.SieveLexer",
        "typing._GenericAlias.__init__",
        "enum.name",
        "renderer.Renderer",
        "decoder.JSONDecoder.decode",
        "sre_compile._get_literal_prefix",
        "io.ErrorOutput",
        "objective.objective",
        "rich_cli.__main__",
        "platform.uname",
        "tracemalloc._Traces",
        "typing.TextIO",
        "calendar._localized_day",
        "enum.EnumMeta.__setattr__",
        "configs.SingularityLexer",
        "configs.PkgConfigLexer",
        "console.Console.options",
        "_collections_abc.Mapping.__contains__",
        "dataclasses._is_classvar",
        "typing._alias",
        "rich_cli.__main__.print_usage",
        "socket.socket._real_close",
        "fractions._operator_fallbacks",
        "css.LessCssLexer",
        "pathlib._TerminatingSelector",
        "stata.StataLexer",
        "enum.__new__",
        "lexer.words.__init__",
        "ipaddress.IPv4Network.__init__",
        "optparse.<listcomp>",
        "enum.EnumMeta.__getattr__",
        "robotframework.RobotFrameworkLexer",
        "optparse.OptionContainer",
        "locale.normalize",
        "configs.NestedTextLexer",
        "optparse.OptionParser._init_parsing_state",
        "syntax.Syntax.__init__",
        "posixpath.isabs",
        "email.EmailLexer",
        "ssl.<dictcomp>",
        "inspect.isbuiltin",
        "calendar.Calendar.setfirstweekday",
        "html.PugLexer",
        "meson.MesonLexer",
        "configparser.MissingSectionHeaderError",
        "ssl.verify_mode",
        "console.Console.save_svg",
        "configparser.InterpolationDepthError",
        "posixpath.join",
        "typing.SupportsBytes",
        "robotframework.VariableSplitter",
        "tracemalloc.Snapshot",
        "solidity.SolidityLexer",
        "platform._syscmd_uname",
        "subprocess.Popen._close_pipe_fds",
        "subprocess.Popen._get_devnull",
        "optparse.OptionContainer._share_option_mappings",
        "csv.excel",
        "widget.Widget.refresh",
        "rdf.SparqlLexer",
        "css.CssLexer",
        "datetime.timedelta",
        "reactive.Reactive.__set__",
        "optparse.Option._set_opt_strings",
        "rich_cli.__main__.render_ipynb",
        "prolog.PrologLexer",
        "sre_compile.<listcomp>",
        "ipaddress._IPAddressBase",
        "configparser.SectionProxy",
        "codecs.IncrementalDecoder.__init__",
        "configs.SquidConfLexer",
        "ssl.Purpose",
        "typing.IO",
        "console.ConsoleOptions.update",
        "modeling.BugsLexer",
        "socket.family",
        "gettext.dgettext",
        "zipfile.LargeZipFile",
        "dataclasses._FIELD_BASE.__init__",
        "special.TextLexer",
        "typing._GenericAlias.__hash__",
        "sre_parse.groups",
        "app.App.bind",
        "os.<listcomp>",
        "datetime.__new__",
        "inspect.<genexpr>",
        "configs.KconfigLexer",
        "types.StringParamType",
        "posixpath.normpath",
        "html.ScamlLexer",
        "tempfile._RandomNameSequence",
        "macaulay2.Macaulay2Lexer",
        "random.SystemRandom",
        "rich_cli.__main__.render_csv",
        "ipaddress._split_addr_prefix",
        "csv.Dialect",
        "sre_compile._mk_bitmap",
        "promql.PromQLLexer",
        "configparser.RawConfigParser",
        "tracemalloc.Frame",
        "installers.SourcesListLexer",
        "console.Console.render",
        "typing._is_callable_members_only",
        "dataclasses._is_initvar",
        "markup.escape",
        "inspect._signature_from_callable",
        "rich_cli.__main__.read_resource",
        "decoder.JSONDecodeError",
        "__init__.ChainMap.__getitem__",
        "io.Input",
        "types.UUIDParameterType",
        "html.HtmlRenderer",
        "resource.ResourceLexer",
        "app.view",
        "pointless.PointlessLexer",
        "optparse.HelpFormatter.__init__",
        "sre_parse.SubPattern.__init__",
        "text.Text",
        "hdl.VerilogLexer",
        "pathlib._PosixFlavour.splitroot",
        "types.Path",
        "smv.NuSMVLexer",
        "types.File",
        "threading.Event.wait",
        "subprocess.Popen._wait",
        "string.convert",
        "inspect.unwrap",
        "socket.SocketIO.__init__",
        "tracemalloc.Statistic",
        "pathlib.Path._init",
        "reactive.Reactive.__get__",
        "ast.NodeTransformer",
        "layout.Layout.mount_all",
        "threading.Condition._release_save",
        "typing.TypedDict",
        "typing._GenericAlias.__repr__",
        "configparser.<listcomp>",
        "threading._make_invoke_excepthook",
        "typing.TypeVar",
        "token._TokenType",
        "ipaddress.ip_address",
        "sre_parse.State.__init__",
        "re._subx",
        "unix_events._UnixDefaultEventLoopPolicy",
        "genericpath._splitext",
        "functools.update_wrapper",
        "console.Console.render_lines",
        "ipaddress._IPv4Constants",
        "gettext.translation",
        "ssl._ASN1Object",
        "praat.PraatLexer",
        "sre_parse._class_escape",
        "graphics.GLShaderLexer",
        "sre_parse.SubPattern.__len__",
        "types._NumberParamTypeBase",
        "rich_cli.markdown.Heading",
        "contextlib.ExitStack.__enter__",
        "csv.Sniffer.has_header",
        "posixpath.splitext",
        "zipfile.ZipFile",
        "numbers.Rational",
        "optparse.OptionParser",
        "tracemalloc.Filter",
        "optparse.TitledHelpFormatter",
        "difflib.SequenceMatcher.__init__",
        "types.ParamType",
        "pathlib.PureWindowsPath",
        "lexers.get_lexer_for_mimetype",
        "typing._make_nmtuple",
        "difflib._calculate_ratio",
        "roboconf.RoboconfInstancesLexer",
        "calendar.HTMLCalendar",
        "socket.SocketIO",
        "token._TokenType.__getattr__",
        "sre_parse.SubPattern.__delitem__",
        "configparser.BasicInterpolation._interpolate_some",
        "robotframework._Table",
        "configparser.<genexpr>",
        "optparse.HelpFormatter",
        "codecs.getincrementaldecoder",
        "hashlib.__get_openssl_constructor",
        "sre_compile._compile",
        "selectors.KqueueSelector",
        "ride.RideLexer",
        "app.App.__init__",
        "smalltalk.SmalltalkLexer",
        "rule.Rule.__init__",
        "tracemalloc.Traceback",
        "smalltalk.NewspeakLexer",
        "configs.call_indent",
        "robotframework.RowSplitter",
        "robotframework.TestCaseSetting",
        "selectors.PollSelector",
        "pathlib.PosixPath",
        "calendar.<listcomp>",
        "robotframework.ForLoop",
        "difflib.SequenceMatcher.set_seq2",
        "ast.Ellipsis",
        "make.MakefileLexer",
        "typing._get_protocol_attrs",
        "console.ConsoleOptions.update_width",
        "unix_events._UnixWritePipeTransport",
        "calendar.LocaleHTMLCalendar",
        "rich_cli.markdown.Markdown.__init__",
        "dataclasses.<genexpr>",
        "re.compile",
        "sre_parse.Tokenizer.get",
        "random.Random.seed",
        "typing._check_generic",
        "configparser.ConfigParser",
        "graphics.<genexpr>",
        "tempfile._TemporaryFileWrapper",
        "selectors.KqueueSelector.register",
        "modeling.<genexpr>",
        "hooks.<dictcomp>",
        "html.HtmlLexer",
        "six.add_metaclass",
        "socket.type",
        "subprocess.Popen.poll",
        "typing.NamedTupleMeta",
        "typing._is_dunder",
        "_bootlocale.getpreferredencoding",
        "random._randbelow_with_getrandbits",
        "tracemalloc.Trace",
        "subprocess.Popen._internal_poll",
        "enum._high_bit",
        "optparse.Option",
        "unix_events.BaseChildWatcher",
        "types.<dictcomp>",
        "csv.DictReader",
        "testing.TAPLexer",
        "random.Random.__init__",
        "gcodelexer.GcodeLexer",
        "types.Choice",
        "zipfile.ZipExtFile",
        "datetime._create",
        "typing.NamedTuple",
        "console.Console.save_html",
        "scanner.EndOfText",
        "io.NullOutput",
        "threading.Thread.run",
        "uu.Error",
        "typing._SpecialForm",
        "heapq.nlargest",
        "abc.abstractmethod",
        "sre_parse.Tokenizer.__init__",
        "io.InputError",
        "tempfile._TemporaryFileCloser",
        "types.DateTime",
        "zipfile.make",
        "configparser.RawConfigParser._read",
        "abc.RichRenderable",
        "sre_parse._parse",
        "dataclasses.field",
        "types._NumberRangeBase",
        "ssl._TLSAlertType",
        "pathlib._parse_args",
        "pathlib.PurePath.__fspath__",
        "io.NullInput",
        "os._get_exports_list",
        "ipaddress._parse_hextet",
        "datetime._days_before_year",
        "configs.AugeasLexer",
        "reactive.Reactive.__init__",
        "optparse.OptionContainer.set_description",
        "fractions.Fraction",
        "typing._ProtocolMeta",
        "ipaddress._BaseNetwork",
        "typing.io",
        "modeling.StanLexer",
        "robotframework.RowTokenizer",
        "ipaddress.IPv6Address.__init__",
        "css.SassLexer",
        "configparser.LegacyInterpolation",
        "threading._newname",
        "optparse.BadOptionError",
        "dataclasses._repr_fn",
        "typing.ForwardRef.__init__",
        "installers.NSISLexer",
        "response.closed",
        "tempfile.TemporaryDirectory",
        "configparser.DuplicateSectionError",
        "enum.EnumMeta._convert_",
        "types.BoolParamType.convert",
        "graphics.PostScriptLexer",
        "ipaddress._make_netmask",
        "typing.__getitem__",
        "pathlib.PurePath._make_child",
        "json.JSON.__rich__",
        "unix_events._UnixSelectorEventLoop",
        "_collections_abc._check_methods",
        "lexer.bygroups",
        "datetime.tzinfo",
        "warnings._add_filter",
        "configparser.DuplicateOptionError",
        "datetime._check_time_fields",
        "functools.decorating_function",
        "dataclasses._tuple_str",
        "graphics._shortened",
        "typing._TypedDictMeta",
        "typing.__getitem_inner__",
        "configs.TerraformLexer",
        "shlex.shlex",
        "make.CMakeLexer",
        "grammar_notation.JsgfLexer",
        "types.FloatRange",
        "ssl_match_hostname._to_unicode",
        "sre_parse._parse_flags",
        "enum.<lambda>",
        "difflib.<listcomp>",
        "threading.Thread._stop",
        "typing._GenericAlias.copy_with",
        "ssl_._ssl_wrap_socket_impl",
        "dataclasses.InitVar",
        "selectors.KqueueSelector.close",
        "difflib.SequenceMatcher",
        "pathlib.Path._opener",
        "ssl.SSLContext.wrap_socket",
        "types.FuncParamType",
        "typing.__new__",
        "typing.ForwardRef",
        "datetime.timezone",
        "inspect._signature_is_builtin",
        "sre_compile._generate_overlap_table",
        "ssl.SSLSocket.recv_into",
        "robotframework.ImportSetting",
        "html.XsltLexer",
        "subprocess.<genexpr>",
        "ipaddress._BaseAddress",
        "_csv.reader",
        "data.YamlLexerContext",
        "gettext._expand_lang",
        "csound.CsoundScoreLexer",
        "inspect.Parameter.__init__",
        "copy.Error",
        "csv.dialect",
        "chapel.ChapelLexer",
        "rich_cli.markdown.TextElement",
        "unix_events._UnixSubprocessTransport",
        "typing._SpecialForm.__eq__",
        "threading.Event.__init__",
        "prolog.LogtalkLexer",
        "ooc.OocLexer",
        "zipfile.LZMADecompressor",
        "core.sort_key",
        "string._TemplateMetaclass.__init__",
        "_weakrefset.WeakSet.add",
        "typing.<genexpr>",
        "ssl_match_hostname._dnsname_match",
        "email.EmailHeaderLexer",
        "pathlib._PosixFlavour",
        "calendar.TextCalendar",
        "slash.move_state",
        "configs.do_indent",
        "ipaddress.IPv4Address.__init__",
        "csound.CsoundLexer",
        "io.OutputError",
        "typing._SpecialForm.__hash__",
        "dataclasses.Field.__init__",
        "types.IntParamType",
        "typing.SupportsAbs",
        "configparser.<dictcomp>",
        "message.Message.stop",
        "grid.GridLayout.show_row",
        "pathlib._Flavour.__init__",
        "codecs.BufferedIncrementalDecoder.decode",
        "encoder.JSONEncoder",
        "ast.Num",
        "ssl.SSLSocket.do_handshake",
        "random.Random.randrange",
        "inspect._signature_get_user_defined_method",
        "functools.lru_cache",
        "threading.current_thread",
        "dataclasses._create_fn",
        "widget.Widget.__rich__",
        "__init__.namedtuple",
        "optparse.OptionError",
        "dataclasses.Field",
        "dataclasses.FrozenInstanceError",
        "html.XmlLexer",
        "difflib.HtmlDiff",
        "pathlib._from_parsed_parts",
        "installers.DebianControlLexer",
        "hashlib.__get_builtin_constructor",
        "ssl.SSLContext",
        "json.JSON",
        "sre_parse.parse_template",
        "linux_driver.LinuxDriver.run_input_thread",
        "configparser.RawConfigParser._unify_values",
        "string.Template",
        "sre_parse.addgroup",
        "text.Text.__add__",
        "smithy.SmithyLexer",
        "styled.Styled.__init__",
        "pathlib._from_parts",
        "enum._EnumDict.__setitem__",
        "configparser.BasicInterpolation.before_get",
        "text.Text.from_ansi",
        "inspect._signature_bound_method",
        "scdoc.ScdocLexer",
        "robotframework.VariableTable",
        "threading.Condition.notify",
        "sre_parse.Tokenizer.__next",
        "table.Table.__init__",
        "configs.LighttpdConfLexer",
        "contextlib.ExitStack.__exit__",
        "enum.value",
        "types.FloatParamType",
        "posixpath._get_sep",
        "datetime.timedelta.__neg__",
        "lexer.__new__",
        "random.Random",
        "threading.daemon",
        "typing.TypeVar.__init__",
        "warnings.catch_warnings.__enter__",
        "table.Table.add_column",
        "typing.<dictcomp>",
        "subprocess.Popen._execute_child",
        "grid.GridLayout.place",
        "installers.RPMSpecLexer",
        "types.CompositeParamType",
        "sre_compile._get_iscased",
        "inspect.default",
        "special.RawTokenLexer",
        "enum.EnumMeta.__call__",
        "__init__.ChainMap.__init__",
        "unix_events.FastChildWatcher",
        "inspect.Signature.__str__",
        "functools.<setcomp>",
        "zipfile.ZipFile.__init__",
        "configparser.ExtendedInterpolation",
        "os._Environ.__getitem__",
        "subprocess._cleanup",
        "typing.<listcomp>",
        "functools.total_ordering",
        "widget.size",
        "special.OutputLexer",
        "rich_cli.markdown.HorizontalRule",
        "rich_cli.markdown.ListElement",
        "datetime.date",
        "pathlib.WindowsPath",
        "string._TemplateMetaclass",
        "ipaddress.IPv4Address",
        "retry.__init__",
        "difflib.Differ",
        "_inspect.Inspect.__init__",
        "sre_parse.fix_flags",
        "sre_parse.SubPattern.__setitem__",
        "sre_parse.SubPattern.append",
        "typing._remove_dups_flatten",
        "console.Console.width",
        "robotframework.VariableTokenizer",
        "calendar._localized_month.__init__",
        "sre_parse._escape",
        "dataclasses._recursive_repr",
        "rich_cli.__main__._line_range",
        "io.StringOutput",
        "text.Text.__len__",
        "idna.StreamWriter",
        "retry.Retry",
        "hdl.SystemVerilogLexer",
        "roboconf.RoboconfGraphLexer",
        "lexers.guess_lexer_for_filename",
        "data.JsonBareObjectLexer",
        "_operator.itemgetter.__new__",
        "ssl.SSLSocket._real_close",
        "locale.getlocale",
        "inspect.signature",
        "dataclasses._HAS_DEFAULT_FACTORY_CLASS.__repr__",
        "ssl.__new__",
        "selectors.BaseSelector",
        "spice.SpiceLexer",
        "procfile.ProcfileLexer",
        "pathlib._Flavour.join_parsed_parts",
        "threading.Event.is_set",
        "rich_cli.markdown.Markdown",
        "html.HtmlFormatter",
        "gettext.find",
        "typing._type_check",
        "dataclasses._hash_set_none",
        "mimetypes._default_mime_types",
        "typing.__init_subclass__",
        "sre_parse.State.checkgroup",
        "core.BaseCommand.__call__",
        "ssl._TLSContentType",
        "mimetypes.MimeTypes",
        "optparse.Option._check_choice",
        "optparse.OptionConflictError",
        "optparse.OptParseError",
        "parasail.ParaSailLexer",
        "message.__init_subclass__",
        "unistring.<genexpr>",
        "dalvik.SmaliLexer",
        "optparse.IndentedHelpFormatter",
        "optparse.OptionValueError",
        "ssl.SSLSocket._check_connected",
        "subprocess.CompletedProcess.__init__",
        "sre_compile._get_charset_prefix",
        "zipfile._ZipWriteFile",
        "typing._TypingEmpty",
        "typing.__class_getitem__",
        "text.Span",
        "rich_cli.markdown.ImageItem",
        "configparser.ConverterMapping.__iter__",
        "ipaddress.IPv6Interface",
        "typing._TypingEllipsis",
        "structures.CaseInsensitiveDict.__getitem__",
        "inspect.name",
        "unix_events._UnixReadPipeTransport",
        "types.Choice.convert",
        "fortran.FortranFixedLexer",
        "pathlib._Flavour",
        "io.DocTreeInput",
        "configparser.InterpolationError",
        "types.BoolParamType",
        "encoder.JSONEncoder.__init__",
        "optparse.OptionContainer.set_conflict_handler",
        "timeout.Timeout.__init__",
        "idna.IncrementalDecoder",
        "getpass.GetPassWarning",
        "graphics.HLSLShaderLexer",
        "token._TokenType.__init__",
        "contextlib.helper",
        "zipfile._check_compression",
        "inspect.Signature.__init__",
        "dataclasses._InitVarMeta",
        "ipaddress._IPAddressBase._check_int_address",
        "text.Text.__init__",
        "_dock_view.DockView.dock",
        "hmac.HMAC",
        "dataclasses._MISSING_TYPE",
        "rich_rst.RestructuredText.__init__",
        "app.App.run",
        "ssl.SSLContext._encode_hostname",
        "rich_cli.markdown.MarkdownContext",
        "configparser.ConverterMapping",
        "_scroll_view.ScrollView.validate_y",
        "subprocess.Popen.__init__",
        "configparser.InterpolationSyntaxError",
        "idna.Codec.encode",
        "unix_events.MultiLoopChildWatcher",
        "driver.Driver.process_event",
        "robotframework.Comment",
        "calendar._localized_day.__init__",
        "calendar.Calendar.__init__",
        "zipfile.ZipInfo",
        "inspect.isfunction",
        "encoder.JSONEncoder.encode",
        "sre_parse.State.checklookbehindgroup",
        "unix_events.ThreadedChildWatcher",
        "sre_compile._compile_info",
        "difflib.SequenceMatcher.__chain_b",
        "subprocess.check_output",
        "_markupbase.ParserBase",
        "optparse.HelpFormatter.set_parser",
        "objective.ObjectiveCLexer",
        "ssl.TLSVersion",
        "csound.CsoundOrchestraLexer",
        "panel.Panel.__init__",
        "optparse.OptionParser._create_option_list",
        "csv.Sniffer._guess_quote_and_delimiter",
        "rdf.ShExCLexer",
        "subprocess.Popen._handle_exitstatus",
        "ast.NameConstant",
        "optparse.Option._check_action",
        "zipfile._SharedFile",
        "subprocess.Popen.communicate",
        "typing.ForwardRef.__eq__",
        "string.Formatter",
        "pathlib._WindowsFlavour",
        "dataclasses._field_init",
        "zipfile.Path",
        "socket.socket.detach",
        "sre_parse.Tokenizer.getwhile",
        "rich_cli.markdown.ListItem",
        "retry._RetryMeta",
        "typing.SupportsComplex",
        "random.__init_subclass__",
        "configparser.Interpolation",
        "csv.DictWriter",
        "zipfile.PyZipFile",
        "numbers.Integral",
        "configs._rx_indent",
        "_xterm_parser.XTermParser.__init__",
        "data.parse_block_scalar_empty_line",
        "slash.SlashLanguageLexer",
        "ssl_.disable_check_hostname",
        "ipaddress.IPv4Network",
        "ipaddress.AddressValueError",
        "ipaddress.IPv6Network.__init__",
        "configparser.BasicInterpolation",
        "pathlib._PreciseSelector",
        "inspect._signature_from_function",
        "sre_parse.expand_template",
        "selectors._SelectorMapping",
        "os.fsencode",
        "configparser.Error",
        "enum.IntFlag.__and__",
        "pathlib.<setcomp>",
        "csv.unix_dialect",
        "ipaddress._split_optional_netmask",
        "locale._parse_localename",
        "configs.IniLexer",
        "contextlib._BaseExitStack.callback",
        "ipaddress._BaseV6",
        "datetime.datetime",
        "pathlib.PurePath.__str__",
        "sre_parse._parse_sub",
        "pathlib._format_parsed_parts",
        "inspect.from_callable",
        "data.parse_block_scalar_indent",
        "tempfile.SpooledTemporaryFile",
        "table.Table.add_row",
        "configparser.RawConfigParser._join_multiline_values",
        "typing._GenericAlias",
        "robotframework.Setting",
        "optparse.OptionParser._populate_option_list",
        "configs.TOMLLexer",
        "ipaddress.IPv6Address",
        "console.Console.__init__",
        "weakref.WeakValueDictionary.update",
        "sre_compile._compile_charset",
        "igor.IgorLexer",
        "style.null",
        "typing.SupportsInt",
        "sre_parse.Tokenizer.seek",
        "selectors.KqueueSelector.select",
        "pathlib.Path",
        "tracemalloc.StatisticDiff",
        "configs.RegeditLexer",
        "configparser.RawConfigParser.get",
        "lexer.using",
        "modeling.JagsLexer",
        "status_codes.<genexpr>",
        "re._compile",
        "os.get_exec_path",
        "rich_cli.markdown.CodeBlock",
        "sre_parse.parse",
        "typing._type_repr",
        "text.Text.from_markup",
        "sre_parse.Tokenizer.match",
        "calendar.IllegalWeekdayError",
        "typing._subs_tvars",
        "models.Response.text",
        "data.set_indent",
        "threading.Condition.wait",
        "dataclasses._init_fn",
        "robotframework.UnknownTable",
        "threading.Condition.__init__",
        "zipfile.BadZipFile",
        "inspect.ismethod",
        "socket.socket._decref_socketios",
        "numbers.Complex",
        "rich_cli.markdown.MarkdownElement",
        "dataclasses._is_type",
        "datetime.time",
        "zipfile.LZMACompressor",
        "socket.socket",
        "threading.Condition._acquire_restore",
        "abc.ABCMeta.__subclasscheck__",
        "optparse.Option._check_callback",
        "__init__.normalize_encoding",
        "calendar.Calendar",
        "api.get",
        "pathlib._Accessor",
        "csv.excel_tab",
        "sre_parse.State.closegroup",
        "html.DtdLexer",
        "io.Output",
        "data.reset_indent",
        "sre_parse.Tokenizer.getuntil",
        "data.parse_plain_scalar_indent",
        "datetime._check_int_field",
        "functools.cached_property.__set_name__",
        "pathlib._WildcardSelector",
        "selectors._BaseSelectorImpl",
        "warnings.simplefilter",
        "make.BaseMakefileLexer",
        "oberon.ComponentPascalLexer",
        "testing.GherkinLexer",
        "fnmatch.fnmatchcase",
        "_policybase.Compat32.header_fetch_parse",
        "_scroll_view.ScrollView.validate_x",
        "pathlib._RecursiveWildcardSelector",
        "subprocess.Popen.__enter__",
        "ipaddress.IPv4Interface",
        "dataclasses._set_new_attribute",
        "sre_parse._uniq",
        "typing.SupportsFloat",
        "ast.NodeVisitor",
        "dataclasses._HAS_DEFAULT_FACTORY_CLASS",
        "data.set_block_scalar_indent",
        "textwrap.TextWrapper",
        "ssl._sslcopydoc",
        "sre_compile.isstring",
        "slash.SlashLexer",
        "enum.__prepare__",
        "optparse.Option._check_opt_strings",
        "data.YamlLexer",
        "optparse.OptionContainer._create_option_mappings",
        "typing.Protocol",
        "configs.NginxConfLexer",
        "data.something",
        "calendar.IllegalMonthError",
        "tracemalloc.BaseFilter",
        "contextlib._BaseExitStack._push_exit_callback",
        "inspect.kind",
        "objective.SwiftLexer",
        "pathlib.PurePath",
        "datetime._days_in_month",
        "copy.copy",
        "_collections_abc.Mapping.get",
        "socket.SocketIO.readable",
        "configparser.ConverterMapping.__init__",
        "hmac.<genexpr>",
        "optparse.AmbiguousOptionError",
        "configparser.ParsingError",
        "iolang.IoLexer",
        "hdl.VhdlLexer",
        "retry.<listcomp>",
        "locale._replace_encoding",
        "pathlib.PurePosixPath",
        "inspect.Signature.replace",
        "fnmatch._compile_pattern",
        "css._starts_block",
        "frontend.Option.__init__",
        "typing._SpecialForm.__init__",
        "six.wrapper",
        "typing.Pattern.fullmatch",
        "configs.PacmanConfLexer",
        "selectors.KqueueSelector.__init__",
        "datetime._check_tzinfo_arg",
        "highlighter.Highlighter.__call__",
        "objective.GeneratedObjectiveCVariant",
        "inspect.return_annotation",
        "inspect.formatannotation",
        "mime.MIMELexer",
        "robotframework.SettingTable",
        "ssl.options",
        "posixpath.normcase",
        "codecs.BufferedIncrementalDecoder.__init__",
        "dataclasses._process_class",
        "optparse.Option._check_const",
        "threading.Condition._is_owned",
        "socket.socket.__init__",
        "difflib.SequenceMatcher.real_quick_ratio",
        "json.loads",
        "optparse.OptionContainer._check_conflict",
        "sre_parse.Tokenizer.tell",
        "threading.Condition.__enter__",
        "palette.Palette.__getitem__",
        "types.DynamicClassAttribute.__get__",
        "csv.Sniffer",
        "ssl_.is_ipaddress",
        "configparser.InterpolationMissingOptionError",
        "selectors.SelectSelector",
        "optparse.Values",
        "css.ScssLexer",
        "unix_events.AbstractChildWatcher",
        "abc.__new__",
        "data.JsonLdLexer",
        "gettext.gettext",
        "abc.ABCMeta.__instancecheck__",
        "contextlib._BaseExitStack.__init__",
        "unix_events.SafeChildWatcher",
        "data.save_indent",
        "functools.cached_property.__init__",
        "graphics._shortened_many",
        "subprocess.Popen.__del__",
        "inspect.ismethoddescriptor",
        "threading.Condition.__exit__",
        "typing.inner",
        "_csv.get_dialect",
        "pathlib._PathParents",
        "selectors._PollLikeSelector",
        "ssl._create",
        "graphics.PovrayLexer",
        "difflib.SequenceMatcher.set_seqs",
        "dataclasses.<dictcomp>",
        "configs.TermcapLexer",
        "rich_cli.__main__.ForceWidth.__init__",
        "difflib.SequenceMatcher.set_seq1",
        "io.BinaryFileOutput",
        "contextlib._create_cb_wrapper",
        "objective.ObjectiveCppLexer",
        "padding.Padding.__init__",
        "typing.Generic",
        "typing._GenericAlias.__mro_entries__",
        "widget.__init_subclass__",
        "console.Console.print",
        "pathlib._Selector",
        "ipaddress._prefix_from_prefix_string",
        "optparse.Option._check_nargs",
        "grammar_notation.BnfLexer",
        "io.FileInput",
        "data.JsonLexer",
        "objective.LogosLexer",
        "signal._int_to_enum",
        "pathlib._Flavour.parse_parts",
        "configs.Cfengine3Lexer",
        "ssl.SSLSocket.read",
        "sre_compile._optimize_charset",
        "ipaddress._BaseAddress.__int__",
        "configparser.converters",
        "robotframework.TestCaseTable",
        "typing._collect_type_vars",
        "_io.StringIO.__init__",
        "grid.GridLayout.show_column",
        "optparse.Option._set_attrs",
        "optparse.OptionContainer.__init__",
        "ssl._TLSMessageType",
        "ipaddress._ip_int_from_prefix",
        "re.escape",
        "typing._SpecialForm.__repr__",
        "robotframework.Tokenizer",
        "dataclasses._FIELD_BASE",
        "sre_parse.State.opengroup",
        "configs.UnixConfigLexer",
        "functools.wraps",
        "rich_cli.markdown.BlockQuote",
        "socket._GiveupOnSendfile",
        "fnmatch.translate",
        "_scroll_view.ScrollView.update",
        "pathlib._NormalAccessor",
        "contextlib._GeneratorContextManager.__enter__",
        "threading.Thread._wait_for_tstate_lock",
        "html.HamlLexer",
        "optparse.Option._check_type",
        "configs.DockerLexer",
        "socket._intenum_converter",
        "numbers.Real",
        "types.UnprocessedParamType",
        "inspect._signature_is_functionlike"
    ],
    "commonmark.inlines.InlineParser.removeDelimiter": [],
    "calendar.IllegalMonthError": [],
    "importlib": [],
    "pathlib.PosixPath": [],
    "typing.cast": [],
    "rich.console.Capture": [],
    "textual.events.Action": [],
    "urllib3.fields.RequestField.make_multipart": [],
    "os._fspath": [
        "<builtin>.hasattr",
        "<builtin>.type",
        "<str>.format",
        "<builtin>.isinstance",
        "<builtin>.TypeError"
    ],
    "tracemalloc.Trace": [
        "<builtin>.property"
    ],
    "pygments.lexer.default": [],
    "asyncio.queues.QueueFull": [],
    "docutils.statemachine.UnknownStateError": [],
    "pygments.lexer.ProfilingRegexLexer": [],
    "datetime.datetime.date": [
        "datetime.datetime.date"
    ],
    "docutils.nodes.Part": [],
    "textual.events.MouseUp": [],
    "textual.layout.WidgetPlacement": [],
    "requests.exceptions.StreamConsumedError": [],
    "requests.exceptions.InvalidProxyURL": [],
    "genericpath": [],
    "http.client.UnimplementedFileMode": [],
    "optparse.BadOptionError": [],
    "requests.auth.AuthBase": [],
    "textual._layout_resolve": [
        "textual._layout_resolve.Edge"
    ],
    "charset_normalizer.md.CjkInvalidStopPlugin": [
        "<builtin>.property"
    ],
    "http.client.BadStatusLine": [],
    "urllib.parse._ResultMixinBytes": [],
    "requests.exceptions.ReadTimeout": [],
    "textual.events.Blur": [],
    "pygments.styles": [],
    "docutils.parsers.rst.states.Inliner": [
        "<builtin>.locals"
    ],
    "idna.core": [
        "idna.core.InvalidCodepoint",
        "re.compile",
        "idna.idnadata",
        "idna.core.InvalidCodepointContext",
        "idna.intranges",
        "idna.core.IDNAError",
        "idna.core.IDNABidiError"
    ],
    "textual.events.Hide": [],
    "docutils.nodes.Element": [
        "<builtin>.classmethod"
    ],
    "email._parseaddr.AddressList": [],
    "selectors._BaseSelectorImpl": [],
    "dataclasses.InitVar": [],
    "docutils.parsers.rst.tableparser.TableMarkupError": [],
    "pygments.lexer.include": [],
    "docutils.nodes.definition_list": [],
    "asyncio.protocols.Protocol": [],
    "docutils.parsers.rst.directives": [
        "re.compile",
        "docutils.parsers.rst.languages.en"
    ],
    "rich._log_render.LogRender": [],
    "rich_cli.pager.PagerRenderable.__init__": [
        "<builtin>.list"
    ],
    "textual.layouts.dock.Dock": [],
    "pygments.lexer.ExtendedRegexLexer": [],
    "textual.views._window_view.WindowChange": [],
    "docutils.nodes.SkipChildren": [],
    "rich.color.ColorParseError": [],
    "configparser.Error": [],
    "pygments.token._TokenType.__init__": [
        "<builtin>.set"
    ],
    "types._C": [],
    "docutils.statemachine._SearchOverride": [],
    "docutils.nodes._add_node_class_names": [
        "<builtin>.setattr"
    ],
    "docutils.frontend.Option": [],
    "http.cookiejar.Absent": [],
    "urllib.parse.Quoter.__init__": [],
    "rich.markdown.Markdown": [],
    "pygments.util.OptionError": [],
    "asyncio.transports.DatagramTransport": [],
    "docutils.statemachine.TransitionMethodNotFound": [],
    "pathlib._PosixFlavour": [],
    "ast.Num": [],
    "textual.layouts.grid.GridOptions": [],
    "docutils.nodes.error": [],
    "docutils.nodes.SparseNodeVisitor": [],
    "docutils.transforms.universal.Messages": [],
    "urllib3.response.GzipDecoder": [],
    "os.getenv": [],
    "pygments.lexers": [
        "<builtin>.list",
        "pygments.modeline",
        "pygments.lexers._mapping",
        "fnmatch",
        "pygments.lexers._automodule"
    ],
    "urllib3.response.DeflateDecoder": [],
    "optparse.HelpFormatter": [],
    "docutils.frontend.OptionParser": [
        "<builtin>.classmethod",
        "<builtin>.getattr"
    ],
    "requests.cookies.CookieConflictError": [],
    "docutils.statemachine.TransitionPatternNotFound": [],
    "<str>.join": [],
    "warnings._next_external_frame": [
        "warnings._is_internal_frame"
    ],
    "requests.exceptions.ConnectTimeout": [],
    "docutils.nodes.generated": [],
    "textual.message.Message.stop": [],
    "tracemalloc.Traceback": [],
    "urllib3.packages.six.iteritems": [
        "<builtin>.iter",
        "<list>.iteritems"
    ],
    "email.charset.Charset": [],
    "urllib3.packages.six.X": [],
    "docutils.nodes.citation_reference": [],
    "_collections.defaultdict": [],
    "http.cookiejar.LoadError": [],
    "textual.messages.Update": [],
    "importlib.machinery": [],
    "textual._context": [],
    "asyncio.transports.Transport": [],
    "pathlib.PureWindowsPath": [],
    "_pydecimal": [
        "_pydecimal.Decimal",
        "_pydecimal.Rounded",
        "_pydecimal.Clamped",
        "_pydecimal.InvalidOperation",
        "_pydecimal._ContextManager",
        "_pydecimal.DivisionUndefined",
        "_pydecimal.Context",
        "numbers",
        "contextvars",
        "_pydecimal.InvalidContext",
        "_pydecimal.Underflow",
        "_pydecimal.FloatOperation",
        "_pydecimal.DivisionByZero",
        "_pydecimal.DivisionImpossible",
        "<builtin>.pow",
        "collections.namedtuple",
        "_pydecimal.DecimalException",
        "_pydecimal.Overflow",
        "_pydecimal.ConversionSyntax",
        "_pydecimal._Log10Memoize.__init__",
        "_pydecimal._WorkRep",
        "_pydecimal.Inexact",
        "_pydecimal.Subnormal",
        "_pydecimal.Context.__init__",
        "re.compile",
        "_pydecimal._Log10Memoize"
    ],
    "optparse.TitledHelpFormatter": [],
    "docutils.utils.code_analyzer.NumberLines": [],
    "textual.events.MouseEvent": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "types._GeneratorWrapper": [
        "<builtin>.property"
    ],
    "threading.Thread._set_tstate_lock": [],
    "rich.live_render.LiveRender": [],
    "pty.spawn": [
        "pty._copy",
        "<builtin>.type",
        "os.execlp",
        "tty.setraw",
        "pty.fork"
    ],
    "string.Template": [],
    "requests.exceptions.RequestsWarning": [],
    "docutils.utils.roman.NotIntegerError": [],
    "rich_cli.__main__.ForceWidth": [],
    "selectors.PollSelector": [],
    "docutils.statemachine.State": [],
    "asyncio.transports.BaseTransport": [],
    "textual.message_pump.NoParent": [],
    "docutils.nodes.math": [],
    "docutils.parsers.rst.states.QuotedLiteralBlock": [],
    "random.Random": [],
    "urllib3.connection.ConnectionError": [],
    "textual.events.Enter": [],
    "textual._event_broker.NoHandler": [],
    "html.escape": [],
    "textual.views._grid_view.GridView": [
        "<builtin>.property"
    ],
    "tempfile.TemporaryDirectory": [
        "<builtin>.classmethod"
    ],
    "docutils.nodes.option_string": [],
    "textual.events.MouseScrollDown": [],
    "csv.Sniffer.__init__": [],
    "textual.messages.CursorMove": [],
    "click.decorators.argument": [],
    "sre_parse.SubPattern.append": [
        "<list>.append"
    ],
    "encodings.idna.Codec": [],
    "urllib.parse.SplitResultBytes": [],
    "docutils.nodes.Structural": [],
    "commonmark.blocks.Document": [
        "<builtin>.staticmethod"
    ],
    "pygments.lexer.LexerContext": [],
    "io.IOBase": [],
    "click._winconsole._WindowsConsoleRawIOBase": [],
    "requests.auth.HTTPProxyAuth": [],
    "requests.sessions.Session": [],
    "rich.text.Span": [],
    "requests.exceptions.HTTPError": [],
    "docutils.utils.roman.OutOfRangeError": [],
    "requests.exceptions.SSLError": [],
    "reprlib": [
        "reprlib.Repr",
        "reprlib.Repr.__init__"
    ],
    "rich.errors.NoAltScreen": [],
    "calendar._localized_day.__init__": [],
    "http.client.HTTPMessage": [],
    "stringprep": [
        "<builtin>.set",
        "<builtin>.range",
        "<builtin>.list"
    ],
    "docutils.parsers.rst.states.LineBlock": [],
    "urllib.request.AbstractDigestAuthHandler": [],
    "docutils.nodes.TreePruningException": [],
    "docutils.nodes.superscript": [],
    "textual.message.Message.wait": [],
    "click.types.convert_type": [
        "<builtin>.type",
        "<builtin>.issubclass",
        "<builtin>.map",
        "click.types.FuncParamType.__init__",
        "<builtin>.isinstance",
        "<builtin>.AssertionError",
        "<builtin>.tuple",
        "click.types.Tuple.__init__"
    ],
    "rich.traceback._SyntaxError": [],
    "typing._ProtocolMeta": [],
    "docutils.nodes.option": [],
    "textual.scrollbar.ScrollTo": [],
    "urllib3.fields.RequestField": [
        "<builtin>.classmethod"
    ],
    "urllib.request.HTTPSHandler": [],
    "docutils.nodes.Body": [],
    "tracemalloc.Snapshot": [
        "<builtin>.staticmethod"
    ],
    "rich._inspect.Inspect": [],
    "commonmark.inlines.InlineParser.addBracket": [],
    "http": [
        "http.HTTPStatus"
    ],
    "logging.StringTemplateStyle": [],
    "requests.exceptions.ProxyError": [],
    "ast.Bytes": [],
    "urllib.request.ftpwrapper": [],
    "urllib3.util.url.Url": [
        "<builtin>.property"
    ],
    "docutils.nodes.General": [],
    "urllib3.packages.backports.makefile": [],
    "docutils.statemachine.StateMachine": [],
    "textual.events.Focus": [],
    "http.client.InvalidURL": [],
    "docutils.nodes.field_list": [],
    "docutils.statemachine.ViewList": [],
    "docutils.parsers.rst.roles.GenericRole.__init__": [],
    "docutils.parsers.rst.states.MarkupError": [],
    "urllib.request.HTTPCookieProcessor": [],
    "docutils.nodes.note": [],
    "urllib3.packages.six.Module_six_moves_urllib_response": [],
    "urllib3.connection.DummyConnection": [],
    "inspect._empty": [],
    "docutils.nodes.Special": [],
    "email.header.Header": [],
    "click.decorators._param_memo": [
        "<builtin>.hasattr",
        "<list>.append",
        "<builtin>.isinstance"
    ],
    "textual.events.Key": [],
    "encodings.idna.StreamWriter": [],
    "docutils.nodes.warning": [],
    "sre_parse.SubPattern.__init__": [],
    "docutils.nodes.contact": [],
    "asyncio.transports.SubprocessTransport": [],
    "operator": [
        "operator.methodcaller",
        "operator.attrgetter",
        "operator.itemgetter"
    ],
    "posixpath.normcase": [
        "os._fspath"
    ],
    "click._winconsole._WindowsConsoleReader": [],
    "tempfile.SpooledTemporaryFile": [
        "<builtin>.property"
    ],
    "socket._GiveupOnSendfile": [],
    "csv.Sniffer.sniff.dialect": [],
    "rich.errors.ConsoleError": [],
    "pygments.util.UnclosingTextIOWrapper": [],
    "urllib.parse._fix_result_transcoding": [],
    "optparse.OptionConflictError": [],
    "urllib3.packages.six._LazyDescr": [],
    "asyncio.queues.LifoQueue": [],
    "io.BufferedIOBase": [],
    "configparser.ConfigParser": [],
    "logging.RootLogger": [],
    "docutils.parsers.rst.states.OptionList": [],
    "docutils.nodes.bullet_list": [],
    "asyncio.protocols.BufferedProtocol": [],
    "urllib.request.HTTPErrorProcessor": [],
    "docutils.nodes.definition": [],
    "http.cookiejar.unmatched": [
        "<str>.span"
    ],
    "rich._win32_console.CONSOLE_SCREEN_BUFFER_INFO": [],
    "docutils.utils.urischemes": [],
    "urllib3.connectionpool.HTTPSConnectionPool": [],
    "shlex.shlex": [
        "<builtin>.property"
    ],
    "docutils.nodes.organization": [],
    "asyncio.selector_events._SelectorTransport": [],
    "docutils.nodes.enumerated_list": [],
    "logging.NullHandler": [],
    "docutils.nodes.pending": [],
    "docutils.nodes.important": [],
    "urllib3.poolmanager.ProxyManager": [],
    "selectors.DevpollSelector": [],
    "commonmark.inlines.InlineParser.removeBracket": [],
    "docutils.parsers.rst.states.SpecializedText": [],
    "logging.Manager": [],
    "http.cookiejar.strip_quotes": [],
    "requests.exceptions.Timeout": [],
    "textual.events.MouseDown": [],
    "docutils.nodes.Resolvable": [],
    "typing.Protocol": [],
    "email.header._Accumulator": [],
    "mimetypes._default_mime_types": [],
    "selectors.SelectSelector": [],
    "tracemalloc.Frame": [
        "<builtin>.property"
    ],
    "threading._newname": [],
    "urllib.request.URLopener": [],
    "commonmark.blocks.Parser.advance_next_nonspace": [],
    "decoder.JSONDecoder": [],
    "docutils.nodes.option_list_item": [],
    "dataclasses._MISSING_TYPE": [],
    "textual._event_broker.HandlerArguments": [],
    "dataclasses._DataclassParams": [],
    "asyncio.sslproto._SSLProtocolTransport": [
        "<builtin>.property"
    ],
    "commonmark.inlines.InlineParser.parseBackslash": [
        "commonmark.node.Node.__init__",
        "re.search",
        "commonmark.inlines.InlineParser.peek"
    ],
    "docutils.nodes.title": [],
    "textual.layouts.dock.DockLayout": [],
    "rich.console.NoChange": [],
    "dataclasses._HAS_DEFAULT_FACTORY_CLASS": [],
    "docutils.statemachine.StateCorrection": [],
    "docutils.nodes.strong": [],
    "docutils.transforms.universal.ExposeInternals": [],
    "http.client.IncompleteRead": [],
    "typing.TypeVar": [],
    "logging.StreamHandler": [],
    "requests.exceptions.JSONDecodeError": [],
    "asyncio.protocols.BaseProtocol": [],
    "pygments.lexer._inherit": [],
    "docutils.nodes.Inline": [],
    "zipfile._Tellable": [],
    "warnings._filters_mutated": [],
    "urllib3.util.timeout.Timeout": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "urllib3.util.ssl_match_hostname.CertificateError": [],
    "textual.widgets._static.Static": [],
    "asyncio.selector_events.BaseSelectorEventLoop": [],
    "http.cookiejar.FileCookieJar": [],
    "zipfile.ZipInfo": [
        "<builtin>.classmethod"
    ],
    "tracemalloc.DomainFilter": [
        "<builtin>.property"
    ],
    "calendar.HTMLCalendar": [],
    "urllib.request.ProxyDigestAuthHandler": [],
    "csv.unix_dialect": [],
    "docutils.utils.code_analyzer.LexerError": [],
    "docutils.nodes.SkipNode": [],
    "cryptography.x509": [
        "cryptography.x509.base",
        "cryptography.x509.certificate_transparency"
    ],
    "charset_normalizer.utils": [
        "functools.lru_cache",
        "<builtin>.len",
        "functools._lru_cache_wrapper.wrapper",
        "functools.lru_cache.decorating_function"
    ],
    "asyncio.events._get_running_loop": [],
    "requests.auth.HTTPDigestAuth": [],
    "docutils.nodes.literal": [],
    "charset_normalizer.assets": [],
    "docutils.parsers.rst.states.RSTStateMachine": [],
    "ctypes.wintypes": [
        "ctypes.wintypes._COORD",
        "ctypes.wintypes.RECT",
        "ctypes.wintypes.WIN32_FIND_DATAA",
        "ctypes.wintypes.POINT",
        "ctypes.wintypes.VARIANT_BOOL",
        "ctypes.wintypes.SIZE",
        "ctypes.wintypes.FILETIME",
        "ctypes.wintypes._SMALL_RECT",
        "ctypes.wintypes.MSG",
        "ctypes.wintypes.WIN32_FIND_DATAW"
    ],
    "docutils.nodes.substitution_reference": [],
    "docutils.nodes.SkipSiblings": [],
    "decoder.JSONDecodeError": [],
    "textual.geometry.Region": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "textual.geometry.Spacing": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "ctypes": [
        "ctypes.c_longdouble",
        "ctypes.CFUNCTYPE",
        "ctypes.WinDLL",
        "ctypes.py_object",
        "ctypes.c_void_p",
        "ctypes.CDLL",
        "ctypes.PYFUNCTYPE",
        "<builtin>.int",
        "ctypes.c_byte",
        "ctypes.c_int",
        "ctypes.OleDLL",
        "struct",
        "ctypes.LibraryLoader",
        "ctypes.c_wchar_p",
        "ctypes.c_char",
        "ctypes.c_bool",
        "ctypes.LibraryLoader.__init__",
        "ctypes.c_ubyte",
        "ctypes.c_char_p",
        "ctypes.c_short",
        "<builtin>.Exception",
        "ctypes._endian",
        "ctypes.PyDLL",
        "ctypes.c_wchar",
        "ctypes.c_uint",
        "ctypes.c_long",
        "ctypes.c_ulonglong",
        "ctypes.c_ushort",
        "ctypes._check_size",
        "ctypes.HRESULT",
        "ctypes.c_double",
        "ctypes.c_longlong",
        "ctypes.c_float",
        "ctypes.c_ulong",
        "ctypes._reset_cache"
    ],
    "urllib3.filepost.choose_boundary": [],
    "rich.ansi._AnsiToken": [],
    "rich.jupyter.JupyterMixin": [],
    "pathlib.PurePosixPath": [],
    "_io.StringIO": [],
    "typing.NamedTuple": [],
    "types.DynamicClassAttribute": [],
    "docutils.nodes.doctest_block": [],
    "docutils.nodes.colspec": [],
    "rich.region.Region": [],
    "rich_cli.markdown.CodeBlock": [
        "<builtin>.classmethod"
    ],
    "rich.console.ConsoleDimensions": [],
    "docutils.parsers.rst.states.ParserError": [],
    "urllib.parse.urljoin": [
        "<builtin>.filter",
        "urllib.parse._coerce_args",
        "<list>.append",
        "urllib.parse.urlparse",
        "<list>.pop"
    ],
    "docutils.nodes.meta": [],
    "selectors._PollLikeSelector": [],
    "csv.DictWriter": [],
    "http.cookiejar.CookiePolicy": [],
    "docutils.nodes.figure": [],
    "urllib3.connection.HTTPConnection": [
        "<builtin>.property"
    ],
    "asyncio.queues.Queue": [
        "<builtin>.property"
    ],
    "commonmark.blocks.BlockStarts": [
        "<builtin>.staticmethod"
    ],
    "textual.geometry.Offset": [
        "<builtin>.property"
    ],
    "typing._SpecialForm.__init__": [],
    "urllib.request.Request": [
        "<builtin>.property"
    ],
    "pty": [],
    "docutils.nodes.system_message": [],
    "zipfile._SharedFile": [],
    "rich.console.PagerContext": [],
    "textual.scrollbar.ScrollDown": [],
    "inspect.BlockFinder": [],
    "requests.cookies.RequestsCookieJar": [],
    "csv.Sniffer": [],
    "asyncio.base_events.Server": [
        "<builtin>.property"
    ],
    "subprocess": [
        "subprocess.Popen",
        "subprocess._use_posix_spawn",
        "<builtin>.hasattr",
        "subprocess.Handle",
        "subprocess.TimeoutExpired",
        "subprocess.CalledProcessError",
        "signal",
        "subprocess.STARTUPINFO",
        "<builtin>.getattr",
        "subprocess.SubprocessError",
        "subprocess.CompletedProcess"
    ],
    "docutils.nodes.raw": [],
    "urllib3.packages.six.MovedAttribute": [],
    "requests.exceptions.InvalidJSONError": [],
    "commonmark.node.NodeWalker": [],
    "docutils.nodes.block_quote": [],
    "sre_parse.State.__init__": [],
    "http.client.UnknownTransferEncoding": [],
    "urllib3.connection.HTTPSConnection": [],
    "charset_normalizer.md.ArchaicUpperLowerPlugin": [
        "<builtin>.property"
    ],
    "urllib3.contrib.socks.SOCKSHTTPSConnection": [],
    "dataclasses.Field.__init__": [],
    "docutils.nodes.Sequential": [],
    "textual.layout.OrderedRegion": [],
    "traceback.walk_stack": [],
    "urllib.request.ProxyHandler": [],
    "csv.Dialect": [],
    "pygments.lexer.Lexer": [],
    "encodings.idna.StreamReader": [],
    "_thread.get_ident": [],
    "abc.abstractclassmethod": [],
    "numbers.Number": [],
    "docutils.nodes.caption": [],
    "docutils.utils.punctuation_chars": [],
    "netrc": [
        "shlex",
        "netrc.NetrcParseError",
        "netrc.netrc",
        "<builtin>.print"
    ],
    "docutils.nodes.footnote_reference": [],
    "zipfile.BadZipFile": [],
    "textual.events.MouseCapture": [],
    "urllib3.contrib.socks.SOCKSHTTPConnectionPool": [],
    "pathlib._PreciseSelector": [],
    "urllib3.response.MultiDecoder": [],
    "traceback.print_exception": [
        "traceback.TracebackException.format",
        "traceback.TracebackException.__init__",
        "<builtin>.type",
        "<builtin>.print"
    ],
    "ast._ABC": [],
    "docutils.nodes.substitution_definition": [],
    "urllib.request.OpenerDirector": [],
    "_py_abc.ABCMeta": [],
    "docutils.nodes.section": [],
    "hmac.HMAC": [
        "<builtin>.property"
    ],
    "zipfile.PyZipFile": [],
    "urllib3.util.ssl_.SSLContext": [],
    "abc.ABC": [],
    "rich_cli.pager.PagerApp.on_key": [
        "textual.widgets._scroll_view.ScrollView.page_down",
        "textual.widgets._scroll_view.ScrollView.scroll_down",
        "textual.widgets._scroll_view.ScrollView.scroll_up",
        "textual.widget.Widget.animate"
    ],
    "logging.Formatter": [],
    "urllib3.packages.six.Module_six_moves_urllib_error": [],
    "click.exceptions.FileError": [],
    "docutils.parsers.rst.states.Text": [
        "re.compile"
    ],
    "dummy_threading": [
        "_dummy_thread"
    ],
    "http.client.CannotSendHeader": [],
    "pathlib._Selector": [],
    "abc.abstractproperty": [],
    "logging.Logger": [],
    "docutils.nodes.topic": [],
    "docutils.nodes.Root": [],
    "locale.setlocale": [
        "<builtin>.isinstance"
    ],
    "asyncio.transports.WriteTransport": [],
    "asyncio.streams.StreamReader": [],
    "ast.Str": [],
    "optparse.IndentedHelpFormatter": [],
    "urllib.request.ProxyBasicAuthHandler": [],
    "zipfile.ZipExtFile": [],
    "textual.events.Callback": [],
    "docutils.nodes.NodeFound": [],
    "docutils.parsers.rst": [
        "docutils.transforms.universal",
        "docutils.parsers",
        "docutils.parsers.rst.DirectiveError",
        "docutils.statemachine",
        "docutils.parsers.rst.states",
        "docutils.parsers.rst.roles",
        "docutils.parsers.rst.Parser",
        "docutils.parsers.rst.Directive"
    ],
    "docutils.nodes.decoration": [],
    "rich.table._Cell": [],
    "pathlib._NormalAccessor": [
        "<builtin>.hasattr",
        "<builtin>.staticmethod"
    ],
    "docutils.parsers.rst.states.SpecializedBody": [],
    "docutils.statemachine.SearchStateMachine": [],
    "docutils.parsers.rst.states.NestedStateMachine": [],
    "base64.b64encode": [
        "<builtin>.repr",
        "<builtin>.len"
    ],
    "logging.PlaceHolder": [],
    "requests.exceptions.UnrewindableBodyError": [],
    "getpass.GetPassWarning": [],
    "sre_compile._get_iscased": [],
    "textual.layout.ReflowResult": [],
    "http.client.HTTPResponse": [],
    "docutils.statemachine.StateMachineError": [],
    "charset_normalizer.md.SuperWeirdWordPlugin": [
        "<builtin>.property"
    ],
    "textual.views._dock_view.DockView": [],
    "docutils.nodes.tgroup": [],
    "textual.events.Leave": [],
    "docutils.parsers.rst.states.Struct": [],
    "pathlib._Flavour": [],
    "click._compat._NonClosingTextIOWrapper": [],
    "docutils.parsers.rst.states.DefinitionList": [],
    "http.client.RemoteDisconnected": [],
    "rich.markdown.TextElement": [],
    "commonmark.node.Node.__init__": [],
    "collections.OrderedDict.items": [],
    "docutils.nodes.SkipDeparture": [],
    "docutils.io": [
        "docutils.io.FileOutput",
        "docutils.io.NullInput",
        "docutils.io.DocTreeInput",
        "locale.getdefaultlocale",
        "docutils.io.StringInput",
        "locale.getlocale",
        "docutils.io.InputError",
        "docutils.io.StringOutput",
        "docutils.io.OutputError",
        "docutils.io.Input",
        "docutils",
        "docutils.io.NullOutput",
        "docutils.io.ErrorOutput",
        "docutils.io.FileInput",
        "docutils.io.BinaryFileOutput",
        "docutils.io.Output"
    ],
    "urllib3.packages.six.Module_six_moves_urllib_request": [],
    "docutils.nodes.field": [],
    "textual.message_pump.MessagePump.check_message_enabled": [
        "<builtin>.type"
    ],
    "_markupbase.ParserBase": [],
    "calendar.timegm": [
        "datetime.datetime.date"
    ],
    "gettext.GNUTranslations": [],
    "typing._TypedDictMeta": [],
    "urllib3.contrib.pyopenssl.inject_into_urllib3": [
        "urllib3.contrib.pyopenssl._validate_dependencies_met"
    ],
    "textual.events.Mount": [],
    "requests.structures.CaseInsensitiveDict": [],
    "idna.core.encode": [
        "idna.core.uts46_remap",
        "idna.core.valid_string_length",
        "<list>.append",
        "<builtin>.isinstance",
        "<str>.split",
        "idna.core.alabel"
    ],
    "docutils.nodes.label": [],
    "docutils.utils.roman.RomanError": [],
    "mimetypes.MimeTypes": [],
    "textual.keys.Binding": [],
    "urllib.parse.DefragResult": [],
    "ast.literal_eval": [
        "ast.literal_eval._convert",
        "<builtin>.isinstance",
        "ast.parse"
    ],
    "rich.repr.ReprError": [],
    "requests.exceptions.TooManyRedirects": [],
    "requests.exceptions.RetryError": [],
    "commonmark.node.NodeWalker.__init__": [],
    "rich_rst.RestructuredText.__init__": [],
    "commonmark.blocks.Block": [
        "<builtin>.staticmethod"
    ],
    "asyncio.selector_events._SelectorSocketTransport": [],
    "textual.message_pump.MessagePump": [
        "<builtin>.property"
    ],
    "docutils.nodes.option_argument": [],
    "commonmark.inlines.InlineParser": [
        "<builtin>.staticmethod"
    ],
    "ctypes.LibraryLoader.__init__": [],
    "docutils.nodes.legend": [],
    "charset_normalizer.md.SuspiciousRange": [
        "<builtin>.property"
    ],
    "docutils.nodes.header": [],
    "zipfile._ZipWriteFile": [
        "<builtin>.property"
    ],
    "docutils.nodes.problematic": [],
    "click.decorators.option": [],
    "optparse.OptionGroup": [],
    "textual.layouts.vertical.VerticalLayout": [],
    "textual.events.Idle": [],
    "functools.cached_property": [],
    "docutils.nodes.subtitle": [],
    "urllib3.connection.BrokenPipeError": [],
    "configparser.InterpolationError": [],
    "calendar.Calendar": [
        "<builtin>.property"
    ],
    "commonmark.blocks.Item": [
        "<builtin>.staticmethod"
    ],
    "rich.markdown.BlockQuote": [],
    "typing.ForwardRef.__init__": [
        "<builtin>.TypeError",
        "<builtin>.SyntaxError",
        "<builtin>.isinstance",
        "<builtin>.compile"
    ],
    "click._winconsole.ConsoleStream": [
        "<builtin>.property"
    ],
    "commonmark.inlines.InlineParser.parseEntity": [
        "commonmark.inlines.InlineParser.match"
    ],
    "docutils.parsers.rst.states.InterpretedRoleNotImplementedError": [],
    "typing._TypingEmpty": [],
    "dis": [
        "opcode",
        "dis.Bytecode",
        "collections.namedtuple",
        "io",
        "dis.Instruction"
    ],
    "textual.app.ActionError": [],
    "threading._make_invoke_excepthook": [
        "<builtin>.RuntimeError"
    ],
    "typing._TypingEllipsis": [],
    "urllib.request.HTTPBasicAuthHandler": [],
    "rich.errors.StyleSyntaxError": [],
    "textual.binding.Bindings.allow_forward": [],
    "optparse.OptionContainer": [],
    "docutils.frontend.Values": [],
    "http.client.LineTooLong": [],
    "sre_constants.error.__init__": [
        "<builtin>.isinstance",
        "<builtin>.super"
    ],
    "urllib3.util.retry._RetryMeta": [
        "<builtin>.property"
    ],
    "docutils.parsers.rst.roles.GenericRole": [],
    "click.exceptions.NoSuchOption": [],
    "configparser.SectionProxy": [
        "<builtin>.property"
    ],
    "locale.getdefaultlocale": [
        "locale._parse_localename",
        "<builtin>.int"
    ],
    "optparse.OptionError": [],
    "textual.scrollbar.ScrollRight": [],
    "urllib3.packages.six._add_doc": [],
    "datetime.timezone._create": [],
    "textual.binding": [
        "textual.binding.Binding",
        "textual.binding.NoBinding",
        "textual.binding.Bindings",
        "textual.binding.BindingStack"
    ],
    "typing.overload": [],
    "asyncio.protocols.SubprocessProtocol": [],
    "commonmark.normalize_reference._check_native": [
        "<builtin>.chr"
    ],
    "asyncio.streams.FlowControlMixin": [],
    "requests.cookies.MockResponse": [],
    "docutils.frontend.ConfigParser": [],
    "commonmark.inlines.InlineParser.parseHtmlTag": [
        "commonmark.node.Node.__init__",
        "commonmark.inlines.InlineParser.match"
    ],
    "textual.binding.Bindings.__init__": [],
    "textual.widget.RenderCache": [
        "<builtin>.property"
    ],
    "textual.events.Timer": [],
    "tempfile._TemporaryFileCloser": [],
    "certifi": [
        "certifi.core"
    ],
    "textual.layout_map.RenderRegion": [],
    "docutils.utils.code_analyzer.Lexer": [],
    "optparse.Option": [],
    "cryptography.hazmat.bindings.openssl.binding.Binding": [
        "<builtin>.classmethod"
    ],
    "pygments.filter.FunctionFilter": [],
    "importlib.metadata.DistributionFinder.Context": [
        "<builtin>.property"
    ],
    "logging.LogRecord": [],
    "docutils.nodes.tip": [],
    "docutils.nodes.inline": [],
    "urllib3.packages.six._SixMetaPathImporter.__init__": [],
    "docutils.transforms": [
        "docutils.transforms.Transform",
        "docutils.transforms.Transformer",
        "docutils.transforms.TransformError"
    ],
    "asyncio.locks": [
        "asyncio.locks.Semaphore",
        "asyncio.locks.Event",
        "asyncio.locks.Condition",
        "asyncio.locks._ContextManagerMixin",
        "asyncio.locks.BoundedSemaphore",
        "asyncio.locks.Lock",
        "asyncio.locks._ContextManager"
    ],
    "<str>.startswith": [],
    "docutils.nodes.transition": [],
    "http.client.ImproperConnectionState": [],
    "typing.re": [],
    "textual.widgets._tree_control.TreeClick": [],
    "docutils.nodes.danger": [],
    "asyncio.base_events._SendfileFallbackProtocol": [],
    "textual.events.Load": [],
    "_weakrefset.WeakSet.add": [
        "_weakrefset.WeakSet._commit_removals"
    ],
    "tempfile._RandomNameSequence": [
        "<builtin>.property"
    ],
    "urllib.request.HTTPRedirectHandler": [],
    "docutils.nodes.Bibliographic": [],
    "weakref.WeakKeyDictionary.update": [
        "<builtin>.hasattr",
        "<builtin>.type",
        "_weakref.ref",
        "weakref.WeakKeyDictionary.update",
        "<builtin>.len"
    ],
    "click._winconsole._WindowsConsoleWriter": [
        "<builtin>.staticmethod"
    ],
    "urllib.request.UnknownHandler": [],
    "threading.current_thread": [
        "_thread.get_ident",
        "threading._DummyThread.__init__"
    ],
    "click.exceptions.UsageError": [],
    "urllib.request.HTTPPasswordMgr": [],
    "textual.layout.NoWidget": [],
    "sre_parse.fix_flags": [
        "<builtin>.isinstance",
        "<builtin>.ValueError"
    ],
    "requests.exceptions.URLRequired": [],
    "charset_normalizer.md.SuspiciousDuplicateAccentPlugin": [
        "<builtin>.property"
    ],
    "docutils.nodes.Text": [],
    "docutils.parsers.rst.roles.set_implicit_options": [
        "<builtin>.hasattr"
    ],
    "textual.layout.LayoutUpdate": [],
    "docutils.nodes.admonition": [],
    "cryptography.hazmat.bindings.openssl.binding._verify_package_version": [
        "<builtin>.ImportError",
        "<str>.encode"
    ],
    "ast.NameConstant": [],
    "asyncio.selector_events._SelectorDatagramTransport": [],
    "optparse.OptionValueError": [],
    "copy.Error": [],
    "docutils.parsers.rst.tableparser.TableParser": [],
    "tracemalloc.Statistic": [],
    "docutils.parsers.rst.states.Body": [
        "<map>.keys",
        "docutils.parsers.rst.states.Struct.__init__",
        "re.escape",
        "re.compile",
        "<builtin>.vars"
    ],
    "docutils.parsers.rst.languages": [
        "docutils.languages",
        "docutils.parsers.rst.languages.RstLanguageImporter"
    ],
    "docutils.parsers.rst.states.EnumeratedList": [],
    "charset_normalizer.md.UnprintablePlugin": [
        "<builtin>.property"
    ],
    "docutils.nodes.version": [],
    "commonmark.inlines.InlineParser.removeDelimitersBetween": [],
    "docutils.nodes.math_block": [],
    "urllib3.contrib.pyopenssl.UnsupportedExtension": [],
    "urllib.parse.ParseResult": [],
    "requests.adapters.BaseAdapter": [],
    "email.message.EmailMessage": [],
    "docutils.nodes.copyright": [],
    "types.coroutine": [
        "<builtin>.callable",
        "<builtin>.TypeError",
        "functools.wraps",
        "<builtin>.getattr"
    ],
    "asyncio.transports.ReadTransport": [],
    "calendar._localized_month.__init__": [],
    "inspect.EndOfBlock": [],
    "urllib3.packages.six.Iterator": [],
    "docutils.nodes.hint": [],
    "commonmark.blocks.Heading": [
        "<builtin>.staticmethod"
    ],
    "urllib.parse._NetlocResultMixinBytes": [
        "<builtin>.property"
    ],
    "click.exceptions.MissingParameter": [],
    "rich.errors.MarkupError": [],
    "docutils.nodes.line": [],
    "pathlib._Accessor": [],
    "sre_compile._combine_flags": [],
    "pygments.formatters.html": [
        "<builtin>.ord",
        "pygments.formatters.html.HtmlFormatter",
        "pygments.formatter"
    ],
    "docutils.nodes.document": [],
    "reprlib.recursive_repr.decorating_function": [
        "<builtin>.set",
        "<builtin>.getattr"
    ],
    "html.entities": [
        "<builtin>.chr",
        "<map>.items"
    ],
    "docutils.nodes.revision": [],
    "warnings.catch_warnings.__init__": [],
    "sre_parse.Tokenizer.error": [
        "sre_parse.Tokenizer.tell",
        "sre_parse.Tokenizer.error"
    ],
    "docutils.nodes.definition_list_item": [],
    "http.cookiejar.CookieJar.set_policy": [],
    "commonmark.blocks.Parser": [],
    "typing.NamedTupleMeta": [],
    "cryptography": [
        "warnings.warn",
        "cryptography.__about__"
    ],
    "textual.events.InputEvent": [],
    "ast.NodeTransformer": [],
    "textual.reactive.Reactive": [
        "<builtin>.classmethod"
    ],
    "ipaddress.NetmaskValueError": [],
    "http.client.CannotSendRequest": [],
    "docutils.nodes.sidebar": [],
    "weakref.WeakValueDictionary.update": [
        "<builtin>.hasattr",
        "weakref.WeakValueDictionary._commit_removals",
        "weakref.KeyedRef.__init__",
        "<builtin>.dict"
    ],
    "textual.message_pump.MessagePump._get_dispatch_methods": [],
    "urllib.error.URLError": [],
    "ast.Ellipsis": [],
    "docutils.parsers.rst.states.MarkupMismatch": [],
    "rich._win32_console.LegacyWindowsError": [],
    "docutils.transforms.universal.FilterMessages": [],
    "requests.adapters.HTTPAdapter": [],
    "io.TextIOBase": [],
    "urllib3.connection.BaseSSLError": [],
    "configparser.SafeConfigParser": [],
    "rich.highlighter.NullHighlighter": [],
    "docutils.nodes.image": [],
    "urllib.request.HTTPPasswordMgrWithPriorAuth": [],
    "docutils.nodes.tbody": [],
    "urllib3.response.BrotliDecoder": [],
    "commonmark.blocks.BlockQuote": [
        "<builtin>.staticmethod"
    ],
    "http.client.ResponseNotReady": [],
    "datetime.date": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "docutils.nodes.line_block": [],
    "docutils.statemachine.StringList": [],
    "warnings.warn_explicit": [
        "linecache.getlines",
        "<map>.get",
        "<builtin>.RuntimeError",
        "warnings.WarningMessage.__init__",
        "<map>.clear",
        "<builtin>.str",
        "<builtin>.issubclass",
        "<builtin>.isinstance",
        "warnings._showwarnmsg",
        "<builtin>.int"
    ],
    "urllib3.util.queue": [
        "urllib3.util.queue.LifoQueue"
    ],
    "textual.geometry.Size": [
        "<builtin>.property"
    ],
    "pathlib.WindowsPath": [],
    "configparser.InterpolationSyntaxError": [],
    "docutils.nodes.target": [],
    "pygments.lexer._This": [],
    "selectors._SelectorMapping": [],
    "selectors.EpollSelector": [],
    "requests.exceptions.InvalidHeader": [],
    "rich.theme.ThemeStackError": [],
    "cryptography.hazmat.bindings.openssl.binding._OpenSSLError": [
        "<builtin>.property"
    ],
    "rich._win32_console.CONSOLE_CURSOR_INFO": [],
    "docutils.transforms.universal.StripComments": [],
    "asyncio.tasks._GatheringFuture": [],
    "_weakrefset.WeakSet.__init__": [
        "_weakrefset.WeakSet.update",
        "<builtin>.set",
        "_weakref.ref"
    ],
    "docutils.nodes.TreeCopyVisitor": [],
    "urllib.response": [
        "urllib.response.addinfourl",
        "urllib.response.addinfo",
        "urllib.response.addbase",
        "urllib.response.addclosehook"
    ],
    "docutils.nodes.literal_block": [],
    "asyncio.base_events.BaseEventLoop": [],
    "textual._animator": [
        "textual._animator.Animation",
        "typing.TypeVar.__init__",
        "textual._animator.Animator",
        "textual._animator.BoundAnimator",
        "textual._animator.Animatable",
        "textual._easing"
    ],
    "optparse.OptionParser": [],
    "concurrent.futures": [
        "concurrent.futures._base"
    ],
    "urllib.parse.ParseResultBytes": [],
    "ast.NodeVisitor": [],
    "typing.io": [],
    "logging.Filterer": [],
    "click.exceptions.Abort": [],
    "docutils.nodes.container": [],
    "email.message.MIMEPart": [],
    "logging.FileHandler": [],
    "rich_cli.pager": [
        "textual.events",
        "rich_cli.pager.PagerApp",
        "rich_cli.pager.PagerRenderable",
        "textual.app"
    ],
    "textual.layout_map.LayoutMap": [],
    "docutils.nodes.description": [],
    "csv.DictReader": [
        "<builtin>.property"
    ],
    "dataclasses._FIELD_BASE": [],
    "pygments": [],
    "<str>.lower": [],
    "docutils.nodes.option_group": [],
    "csv.excel_tab": [],
    "operator.methodcaller.__init__": [
        "<builtin>.TypeError",
        "<builtin>.isinstance"
    ],
    "datetime.time": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "http.client.HTTPException": [],
    "urllib": [],
    "commonmark.blocks.Parser.add_line": [],
    "docutils.nodes.NodeVisitor": [],
    "textual.scrollbar.ScrollUp": [],
    "logging.Filter": [],
    "warnings._is_internal_frame": [],
    "rich.spinner.Spinner": [],
    "requests.exceptions.FileModeWarning": [],
    "urllib3.request": [
        "urllib3.filepost",
        "urllib3.request.RequestMethods"
    ],
    "_thread.RLock": [],
    "docutils.statemachine.StateMachineWS": [],
    "ctypes.WINFUNCTYPE": [
        "<builtin>.ValueError",
        "ctypes.WINFUNCTYPE.WinFunctionType"
    ],
    "urllib3.packages.six._LazyModule": [],
    "urllib3.packages.six.MovedModule": [],
    "optparse.Values": [],
    "email.errors": [
        "email.errors.InvalidBase64PaddingDefect",
        "email.errors.FirstHeaderLineIsContinuationDefect",
        "email.errors.UndecodableBytesDefect",
        "email.errors.NoBoundaryInMultipartDefect",
        "email.errors.HeaderMissingRequiredValue",
        "email.errors.InvalidBase64LengthDefect",
        "email.errors.StartBoundaryNotFoundDefect",
        "email.errors.MessageDefect",
        "email.errors.MultipartInvariantViolationDefect",
        "email.errors.InvalidMultipartContentTransferEncodingDefect",
        "email.errors.MultipartConversionError",
        "email.errors.HeaderDefect",
        "email.errors.InvalidHeaderDefect",
        "email.errors.HeaderParseError",
        "email.errors.CloseBoundaryNotFoundDefect",
        "email.errors.InvalidBase64CharactersDefect",
        "email.errors.BoundaryError",
        "email.errors.ObsoleteHeaderDefect",
        "email.errors.CharsetError",
        "email.errors.MessageError",
        "email.errors.NonPrintableDefect",
        "email.errors.MissingHeaderBodySeparatorDefect",
        "email.errors.MessageParseError",
        "email.errors.NonASCIILocalPartDefect",
        "email.errors.MisplacedEnvelopeHeaderDefect"
    ],
    "zipfile.LZMADecompressor": [],
    "docutils.nodes.field_name": [],
    "typing.NewType": [],
    "rich.box.Box": [],
    "rich.jupyter.JupyterRenderable": [],
    "configparser.Interpolation": [],
    "pygments.lexer.LexerMeta": [],
    "rich.errors.NotRenderableError": [],
    "textual.events.Unmount": [],
    "asyncio.events.set_event_loop": [
        "asyncio.events.get_event_loop_policy"
    ],
    "rich.errors.StyleStackError": [],
    "rich.markdown.ListItem": [],
    "idna.package_data": [],
    "textual.layout.Layout.reset": [],
    "pygments.styles.get_style_by_name": [
        "<str>.title",
        "pygments.plugin.find_plugin_styles",
        "<builtin>.__import__",
        "<builtin>.getattr"
    ],
    "commonmark.inlines.InlineParser.parseLinkLabel": [
        "commonmark.inlines.InlineParser.match",
        "<builtin>.len"
    ],
    "textual.views._window_view.WindowView": [],
    "typing.ForwardRef": [],
    "textual.events.ShutdownRequest": [],
    "_weakrefset": [
        "_weakrefset.WeakSet",
        "_weakrefset._IterationGuard"
    ],
    "docutils.statemachine.DuplicateStateError": [],
    "textual.widgets._button": [
        "textual.widgets._button.Expand",
        "textual.widgets._button.Button",
        "textual.widgets._button.ButtonPressed",
        "textual.widgets._button.ButtonRenderable"
    ],
    "docutils.nodes.footnote": [],
    "textual.keys.Keys": [],
    "docutils.nodes.abbreviation": [],
    "rich.segment.Segment.adjust_line_length": [
        "<builtin>.sum",
        "rich.cells.set_cell_size"
    ],
    "email.iterators": [],
    "urllib3.packages.six._SixMetaPathImporter._get_module": [],
    "click.exceptions.BadOptionUsage": [],
    "importlib.metadata.Prepared": [],
    "traceback.print_list": [
        "traceback.StackSummary.from_list",
        "traceback.StackSummary.format",
        "<builtin>.print"
    ],
    "textual.drivers.windows_driver": [
        "textual.drivers.win32",
        "textual.drivers.windows_driver.WindowsDriver"
    ],
    "rich.ansi.AnsiDecoder": [],
    "docutils.nodes.entry": [],
    "textual.events.Show": [],
    "urllib3.contrib.pyopenssl.PyOpenSSLContext": [
        "<builtin>.property"
    ],
    "http.cookiejar.LWPCookieJar": [],
    "rich.live._RefreshThread": [],
    "zipfile.LargeZipFile": [],
    "docutils.nodes.authors": [],
    "docutils.nodes.TextElement": [],
    "docutils.nodes.title_reference": [],
    "configparser.DuplicateSectionError": [],
    "pygments.lexer.words": [],
    "rich.console.CaptureError": [],
    "encodings.idna.IncrementalEncoder": [],
    "asyncio.streams.StreamReaderProtocol": [
        "<builtin>.property"
    ],
    "tempfile._TemporaryFileWrapper": [],
    "docutils.frontend.ConfigDeprecationWarning": [],
    "tracemalloc._Traces": [],
    "urllib.request.FileHandler": [],
    "docutils.nodes.date": [],
    "docutils.nodes.term": [],
    "rich.errors.MissingStyle": [],
    "textual.layouts.dock.DockOptions": [],
    "io.RawIOBase": [],
    "textual.widgets._directory_tree.DirEntry": [],
    "rich.errors.StyleError": [],
    "email.feedparser.BufferedSubFile": [],
    "textual.events.MouseRelease": [],
    "urllib.request.FTPHandler": [],
    "pygments.util.ClassNotFound": [],
    "docutils.nodes.rubric": [],
    "uu.Error": [],
    "urllib3.connectionpool.ConnectionPool": [],
    "typing._Immutable": [],
    "string._TemplateMetaclass": [],
    "traceback.StackSummary.extract": [
        "linecache.checkcache",
        "linecache.lazycache",
        "<builtin>.set",
        "<builtin>.getattr",
        "_collections.deque"
    ],
    "docutils.nodes.Admonition": [],
    "calendar.TextCalendar": [],
    "rich.markdown.UnknownElement": [],
    "importlib.metadata.FastPath": [],
    "pygments.filters": [
        "pygments.filters.ErrorToken",
        "pygments.token",
        "pygments.filters.SymbolFilter",
        "pygments.filters.GobbleFilter",
        "pygments.filters.TokenMergeFilter",
        "pygments.filters.RaiseOnErrorTokenFilter",
        "pygments.filters.CodeTagFilter",
        "pygments.filters.KeywordCaseFilter",
        "pygments.filters.NameHighlightFilter",
        "pygments.filters.VisibleWhitespaceFilter",
        "pygments.plugin"
    ],
    "rich_cli.__main__._line_range": [
        "rich_cli.__main__.on_error"
    ],
    "pygments.filter.Filter": [],
    "click.core.BaseCommand": [
        "typing.overload"
    ],
    "inspect._signature_fromstr.RewriteSymbolics": [],
    "configparser.NoOptionError": [],
    "textual.reactive.Reactive.__init__": [],
    "dataclasses.Field": [],
    "string.Formatter": [],
    "rich.align.VerticalCenter": [],
    "textual.actions.ActionError": [],
    "asyncio.transports._FlowControlMixin": [],
    "docutils.nodes.author": [],
    "pathlib._WildcardSelector": [],
    "urllib3.response.GzipDecoderState": [],
    "dataclasses._FIELD_BASE.__init__": [],
    "textual.events.Null": [],
    "os._fscodec.fsdecode": [
        "<str>.decode",
        "<builtin>.isinstance",
        "os._fspath"
    ],
    "urllib.parse._decode_args": [
        "<builtin>.tuple"
    ],
    "commonmark.node.Node.unlink": [],
    "urllib.parse.SplitResult": [],
    "rich_rst.RestructuredText": [],
    "docutils.statemachine.UnknownTransitionError": [],
    "click.exceptions.ClickException": [],
    "configparser.InterpolationDepthError": [],
    "urllib3.packages.six._MovedItems": [],
    "urllib3.poolmanager.PoolManager": [],
    "docutils.nodes.address": [],
    "requests.exceptions.MissingSchema": [],
    "email._encoded_words._QByteMap": [
        "<str>.encode"
    ],
    "email.feedparser.BytesFeedParser": [],
    "urllib.request.CacheFTPHandler": [],
    "ipaddress.AddressValueError": [],
    "ipaddress._BaseAddress": [],
    "pygments.lexer._PseudoMatch": [],
    "requests.structures.LookupDict": [],
    "rich.console.NewLine": [],
    "urllib3.contrib.pyopenssl.WrappedSocket": [],
    "docutils.nodes.reference": [],
    "gettext.NullTranslations": [],
    "http.cookiejar.CookieJar._process_rfc2109_cookies": [
        "<builtin>.getattr"
    ],
    "cryptography.hazmat.bindings.openssl.binding.Binding.init_static_locks": [
        "cryptography.hazmat.bindings.openssl.binding.Binding._ensure_ffi_initialized"
    ],
    "docutils.nodes.BackLinkable": [],
    "urllib3.util.response": [
        "email.errors"
    ],
    "ssl.SSLObject": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "urllib.request.AbstractBasicAuthHandler": [
        "re.compile"
    ],
    "tracemalloc.BaseFilter": [],
    "docutils.statemachine.DuplicateTransitionError": [],
    "calendar.LocaleTextCalendar": [],
    "pygments.lexer.combined": [],
    "docutils.parsers.rst.states.RFC2822List": [],
    "commonmark.node.Node": [],
    "datetime.timedelta": [
        "<builtin>.property"
    ],
    "docutils.nodes.subscript": [],
    "rich._ratio.Edge": [],
    "docutils.nodes.caution": [],
    "docutils.statemachine.TransitionCorrection": [],
    "<str>.split": [],
    "genericpath.exists": [],
    "pygments.plugin.find_plugin_lexers": [
        "pygments.plugin.iter_entry_points"
    ],
    "asyncio.tasks.Task": [
        "<builtin>.classmethod"
    ],
    "docutils.transforms.universal.SmartQuotes": [],
    "urllib.request.HTTPDefaultErrorHandler": [],
    "pygments.lexer.RegexLexerMeta": [],
    "textual.message_pump.CallbackError": [],
    "textual.events.Click": [],
    "urllib.request.HTTPPasswordMgrWithDefaultRealm": [],
    "docutils.statemachine.UnexpectedIndentationError": [],
    "urllib.error.HTTPError": [
        "<builtin>.property"
    ],
    "docutils.nodes.reprunicode": [],
    "textual._animator.BoundAnimator.__init__": [],
    "docutils.nodes.attribution": [],
    "docutils.parsers.rst.states.UnknownInterpretedRoleError": [],
    "calendar.LocaleHTMLCalendar": [],
    "click.exceptions.BadParameter": [],
    "docutils.nodes.classifier": [],
    "reprlib.recursive_repr": [],
    "pygments.lexer.ProfilingRegexLexerMeta": [],
    "requests.exceptions.InvalidSchema": [],
    "urllib3.util.retry.Retry": [
        "<builtin>.frozenset",
        "<builtin>.classmethod"
    ],
    "gettext._expand_lang": [
        "<builtin>.range",
        "locale.normalize",
        "<str>.find",
        "<list>.append",
        "<list>.reverse"
    ],
    "click.utils.PacifyFlushWrapper": [],
    "zipfile.Path": [
        "<builtin>.property"
    ],
    "logging.BufferingFormatter": [],
    "email.feedparser.FeedParser": [],
    "urllib3.packages.six.Module_six_moves_urllib_robotparser": [],
    "typing.TypedDict": [],
    "requests.exceptions.ContentDecodingError": [],
    "urllib3.contrib.socks.SOCKSHTTPSConnectionPool": [],
    "importlib.metadata.PackageNotFoundError": [],
    "commonmark.inlines.InlineParser.peek": [
        "<builtin>.len"
    ],
    "cryptography.hazmat.backends.openssl.x509": [],
    "http.client.UnknownProtocol": [],
    "commonmark.blocks.HtmlBlock": [
        "<builtin>.staticmethod"
    ],
    "nturl2path": [],
    "docutils.nodes.Labeled": [],
    "rich.traceback.PathHighlighter": [],
    "docutils.nodes.acronym": [],
    "rich.constrain.Constrain": [],
    "urllib.request.FancyURLopener": [],
    "requests.exceptions.RequestException": [],
    "docutils.nodes.GenericNodeVisitor": [],
    "click._compat._FixupStream": [],
    "textual.layouts.grid.GridArea": [],
    "threading.Thread._set_ident": [
        "_thread.get_ident"
    ],
    "requests.exceptions.ChunkedEncodingError": [],
    "commonmark.entitytrans": [
        "re.compile",
        "<builtin>.set"
    ],
    "requests.models.RequestHooksMixin": [],
    "pygments.util.Future": [],
    "docutils.parsers.rst.states.BulletList": [],
    "docutils.nodes.PreBibliographic": [],
    "pygments.lexer.DelegatingLexer": [],
    "docutils.transforms.universal.TestMessages": [],
    "cryptography.hazmat.bindings.openssl._conditional": [],
    "tracemalloc.Filter": [
        "<builtin>.property"
    ],
    "rich.rule.Rule": [],
    "rich.emoji.NoEmoji": [],
    "datetime.tzinfo": [],
    "docutils.parsers.rst.states.Definition": [],
    "docutils.parsers.rst.roles.CustomRole": [],
    "selectors.KqueueSelector": [],
    "http.client.HTTPConnection": [
        "<builtin>.staticmethod"
    ],
    "rich._windows.WindowsConsoleFeatures": [],
    "calendar.different_locale": [],
    "collections.OrderedDict.__init__": [
        "_weakref.proxy"
    ],
    "posixpath._get_sep": [
        "<builtin>.isinstance"
    ],
    "textual.events.Shutdown": [],
    "rich.styled.Styled": [],
    "commonmark.blocks.Parser.finalize": [],
    "calendar.IllegalWeekdayError": [],
    "email._policybase.Compat32": [],
    "textual.views": [
        "textual.views._window_view",
        "textual.views._dock_view",
        "textual.views._grid_view"
    ],
    "rich_cli.__main__.RichCommand": [],
    "urllib.request.HTTPDigestAuthHandler": [],
    "http.cookiejar.Cookie": [],
    "docutils.statemachine.SearchStateMachineWS": [],
    "email.parser": [
        "email.parser.Parser",
        "email.parser.HeaderParser",
        "email.parser.BytesParser",
        "email.feedparser",
        "email.parser.BytesHeaderParser"
    ],
    "docutils.parsers.rst.states.RFC2822Body": [
        "<map>.copy"
    ],
    "rich_rst.RSTVisitor": [],
    "abc.abstractstaticmethod": [],
    "re.subn": [
        "re._compile",
        "<str>.subn"
    ],
    "docutils.transforms.universal.StripClassesAndElements": [],
    "docutils.parsers.rst.states.RSTState": [],
    "importlib.metadata.PackagePath": [],
    "textual._ansi_sequences": [],
    "urllib3.contrib.socks.SOCKSProxyManager": [],
    "rich.theme.ThemeStack": [],
    "docutils.nodes.Targetable": [],
    "textual.widget.Widget.clear_render_cache": [],
    "docutils.nodes.table": [],
    "importlib.metadata.FileHash": [],
    "sre_compile.isstring": [
        "<builtin>.isinstance"
    ],
    "asyncio.streams.StreamWriter": [
        "<builtin>.property"
    ],
    "tracemalloc.StatisticDiff": [],
    "docutils.parsers.Parser": [],
    "textual.events.Resize": [
        "<builtin>.property"
    ],
    "rich.errors.LiveError": [],
    "docutils.nodes.thead": [],
    "docutils.nodes.Node": [
        "<builtin>.property"
    ],
    "datetime.datetime": [
        "<builtin>.property",
        "<builtin>.classmethod"
    ],
    "docutils.parsers.rst.states.FieldList": [],
    "textual.scrollbar.ScrollLeft": [],
    "abc.abstractmethod": [],
    "re.escape": [
        "<builtin>.isinstance",
        "<builtin>.str",
        "<str>.translate",
        "<str>.encode"
    ],
    "importlib.abc": [
        "importlib.abc.PathEntryFinder",
        "importlib.abc.Loader",
        "importlib.abc.ExecutionLoader",
        "importlib.abc.FileLoader",
        "importlib.abc.Finder",
        "importlib.abc.MetaPathFinder",
        "importlib.abc.ResourceReader",
        "importlib.abc.InspectLoader",
        "importlib.abc._register",
        "importlib.abc.SourceLoader",
        "importlib.abc.ResourceLoader"
    ],
    "textual.messages.Layout": [],
    "dataclasses.FrozenInstanceError": [],
    "docutils.nodes.field_body": [],
    "docutils.nodes.emphasis": [],
    "ssl._sslcopydoc": [
        "<builtin>.getattr"
    ],
    "textual.events.MouseMove": [],
    "docutils.utils.roman.InvalidRomanNumeralError": [],
    "docutils.nodes.footer": [],
    "urllib3.util.connection": [
        "urllib3.util.wait",
        "urllib3.util.connection._has_ipv6",
        "urllib3.contrib._appengine_environ"
    ],
    "encodings.normalize_encoding": [
        "<list>.append",
        "<builtin>.isinstance",
        "<builtin>.str"
    ],
    "random.SystemRandom": [],
    "netrc.netrc.__init__": [
        "posixpath.expanduser",
        "netrc.netrc._parse",
        "posixpath.join",
        "ntpath.join",
        "<builtin>.open",
        "ntpath.expanduser"
    ],
    "rich.columns.Columns": [],
    "commonmark.blocks.ThematicBreak": [
        "<builtin>.staticmethod"
    ],
    "urllib3.fields.RequestField.from_tuples": [
        "urllib3.fields.guess_content_type",
        "urllib3.fields.RequestField.make_multipart",
        "urllib3.fields.RequestField.__init__",
        "<builtin>.isinstance",
        "<builtin>.len"
    ],
    "html.parser": [
        "html.parser.HTMLParser",
        "re.compile",
        "_markupbase"
    ],
    "requests.models.Request": [],
    "docutils.nodes.Invisible": [],
    "configparser.MissingSectionHeaderError": [],
    "requests.auth.HTTPBasicAuth": [],
    "typing.NewType.new_type": [],
    "urllib.request.DataHandler": [],
    "importlib.metadata.PathDistribution": [],
    "asyncio.sslproto.SSLProtocol": [],
    "click.exceptions.BadArgumentUsage": [],
    "click.exceptions.Exit": [],
    "docutils.parsers.rst.states.Line": [],
    "requests.sessions.SessionRedirectMixin": [],
    "configparser.NoSectionError": [],
    "pathlib._PathParents": [],
    "commonmark.blocks.Paragraph": [
        "<builtin>.staticmethod"
    ],
    "docutils.nodes.StopTraversal": [],
    "docutils.parsers.rst.states.SubstitutionDef": [
        "re.compile"
    ],
    "urllib3.packages.six._SixMetaPathImporter": [],
    "textual.events.MouseScrollUp": [],
    "commonmark.blocks.CodeBlock": [
        "<builtin>.staticmethod"
    ],
    "csv.excel": [],
    "threading.Thread._set_native_id": [],
    "sre_compile._bytes_to_codes": [
        "<builtin>.memoryview",
        "<builtin>.len"
    ],
    "docutils.nodes.row": [],
    "http.client.NotConnected": [],
    "requests.exceptions.RequestsDependencyWarning": [],
    "_weakref.ref": [],
    "rich.console.ConsoleRenderable": [],
    "urllib3.util.retry.Retry.from_int": [
        "urllib3.util.retry.Retry.__init__",
        "<builtin>.isinstance",
        "logging.Logger.debug",
        "<builtin>.bool"
    ],
    "docutils.nodes.comment": [],
    "configparser.InterpolationMissingOptionError": [],
    "textual.message_pump.MessagePumpClosed": [],
    "docutils.parsers.rst.states.ExtensionOptions": [],
    "docutils.transforms.universal.Decorations": [],
    "operator.itemgetter.__init__": [],
    "docutils.nodes.docinfo": [],
    "contextlib.suppress.__init__": [],
    "http.cookiejar._debug": [
        "logging.getLogger",
        "logging.Logger.debug"
    ],
    "encodings.idna.IncrementalDecoder": [],
    "textual.views._dock_view.DoNotSet": [],
    "urllib3.packages.six.Module_six_moves_urllib_parse": [],
    "sre_parse.Tokenizer.tell": [
        "<builtin>.len"
    ],
    "threading.RLock": [
        "threading._RLock.__init__",
        "_thread.RLock"
    ],
    "urllib.error.ContentTooShortError": [],
    "textual.events.Event": [],
    "urllib3.util.request": [
        "<builtin>.frozenset",
        "<builtin>.object"
    ],
    "dataclasses._InitVarMeta": [],
    "datetime._days_before_year": [],
    "pygments.style": [
        "pygments.style.Style",
        "<builtin>.set",
        "pygments.style.StyleMeta"
    ],
    "cryptography.hazmat.bindings.openssl.binding._verify_openssl_version": [
        "warnings.warn"
    ],
    "colorsys": [],
    "textual.widgets._scroll_view.ScrollView.home": [],
    "commonmark.inlines.InlineParser.__init__": [],
    "commonmark.blocks.List": [
        "<builtin>.staticmethod"
    ],
    "asyncio.base_tasks": [],
    "http.cookies": [
        "http.cookies.CookieError",
        "<builtin>.range",
        "http.cookies.BaseCookie",
        "http.cookies.SimpleCookie",
        "re.escape",
        "re.compile",
        "<builtin>.map",
        "<builtin>.set",
        "http.cookies.Morsel"
    ],
    "urllib.parse.DefragResultBytes": [],
    "urllib.request.BaseHandler": [],
    "urllib.request.AbstractHTTPHandler": [],
    "textual.events.DoubleClick": [],
    "functools._HashedSeq": [],
    "email.header._ValueFormatter": [],
    "asyncio.events.new_event_loop": [
        "asyncio.events.get_event_loop_policy"
    ],
    "pygments.formatter.Formatter": [],
    "<str>.rstrip": [],
    "urllib3.contrib.socks.SOCKSConnection": [],
    "urllib3.connectionpool.HTTPConnectionPool": [],
    "encoder.JSONEncoder": [],
    "pathlib._TerminatingSelector": [],
    "optparse.OptParseError": [],
    "docutils.nodes.status": [],
    "rich_cli.__main__.ForceWidth.__init__": [],
    "http.cookiejar.CookieJar.set_cookie": [],
    "inspect._void": [],
    "docutils.nodes.list_item": [],
    "rich.syntax._SyntaxHighlightRange": [],
    "docutils.parsers.rst.states.Explicit": [],
    "urllib.request.HTTPHandler": [],
    "configparser.DuplicateOptionError": [],
    "asyncio.protocols.DatagramProtocol": [],
    "docutils.nodes.paragraph": [],
    "quopri": [],
    "asyncio.queues.PriorityQueue": [],
    "zipfile.FastLookup": [],
    "typing._Final": [],
    "commonmark.blocks.Parser.find_next_nonspace": [],
    "rich.cells._get_codepoint_cell_size": [
        "<builtin>.len"
    ],
    "pathlib.Path": [
        "<builtin>.classmethod"
    ],
    "docutils.nodes.compound": [],
    "asyncio.trsock.TransportSocket": [
        "<builtin>.property"
    ],
    "textual.layouts.grid.GridLayout": [
        "<builtin>.classmethod"
    ],
    "_thread._local": [],
    "locale": [
        "<builtin>.hasattr",
        "encodings.aliases",
        "<map>.items",
        "<map>.setdefault",
        "re.compile",
        "<builtin>.sorted",
        "functools.wraps",
        "<builtin>.globals",
        "<builtin>.print"
    ],
    "email._parseaddr.AddrlistClass": [],
    "netrc.netrc.authenticators": [],
    "pygments.lexer.RegexLexer": [],
    "urllib3": [
        "urllib3.exceptions",
        "__future__",
        "warnings.simplefilter",
        "logging.Logger.addHandler",
        "urllib3.poolmanager",
        "logging.getLogger",
        "urllib3._version",
        "urllib3.connectionpool"
    ],
    "rich_rst.MLStripper": [],
    "pathlib._RecursiveWildcardSelector": [],
    "textual.widgets._directory_tree.FileClick": [],
    "docutils.utils.smartquotes.smartchars": [],
    "docutils.nodes.attention": [],
    "rich.tree.Tree": [],
    "email._policybase._PolicyBase": [],
    "optparse.AmbiguousOptionError": [],
    "docutils.nodes.citation": [],
    "urllib.parse.Quoter": [],
    "http.cookiejar.DefaultCookiePolicy": [],
    "docutils.nodes.option_list": [],
    "urllib3.util.ssltransport.SSLTransport": [
        "<builtin>.staticmethod"
    ],
    "asyncio.events": [
        "asyncio.events.TimerHandle",
        "asyncio.events._RunningLoop",
        "asyncio.events.BaseDefaultEventLoopPolicy",
        "asyncio.exceptions",
        "asyncio.events.Handle",
        "asyncio.events.AbstractServer",
        "asyncio.events.AbstractEventLoop",
        "asyncio.events.AbstractEventLoopPolicy"
    ],
    "rich.markdown.HorizontalRule": [],
    "asyncio.queues.QueueEmpty": [],
    "collections": [
        "collections._OrderedDictKeysView",
        "collections.UserString",
        "collections.Counter",
        "heapq",
        "collections.UserDict",
        "reprlib",
        "collections._OrderedDictItemsView",
        "keyword",
        "collections.OrderedDict",
        "collections.UserList",
        "collections._OrderedDictValuesView",
        "collections.ChainMap",
        "collections._Link"
    ],
    "rich.highlighter.ISO8601Highlighter": [],
    "docutils.nodes.Referential": [],
    "<str>.endswith": [],
    "zipfile.LZMACompressor": [],
    "docutils.nodes.Titular": [],
    "asyncio.sslproto._SSLPipe": [
        "<builtin>.property"
    ],
    "docutils.nodes.FixedTextElement": [],
    "configparser.ParsingError": [
        "<builtin>.property"
    ],
    "docutils.utils": [
        "docutils.utils.DuplicateOptionError",
        "docutils.utils.SystemMessage",
        "docutils.utils.NameValueError",
        "docutils.utils.BadOptionDataError",
        "docutils.utils.SystemMessagePropagation",
        "docutils.utils.ExtensionOptionError",
        "docutils.utils.DependencyList",
        "docutils.utils.BadOptionError",
        "docutils.utils.Reporter"
    ],
    "requests.exceptions.ConnectionError": [],
    "requests.exceptions.InvalidURL": [],
    "docutils.nodes.Decorative": [],
    "urllib.parse._ResultMixinStr": [],
    "urllib3.packages.six._SixMetaPathImporter._add_module": []
}