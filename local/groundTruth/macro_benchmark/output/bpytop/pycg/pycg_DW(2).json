{"bpytop": ["threading", "argparse", "bpytop.Colors", "ntpath.isdir", "<builtin>.getattr", "bpytop.Nonblocking", "logging.Handler.setLevel", "bpytop.NetCollector", "bpytop.MemBox", "posixpath.isdir", "bpytop.get_cpu_core_mapping", "bpytop.Term", "bpytop.TimeIt", "bpytop.Symbol", "logging.Logger.exception", "bpytop.Init", "shutil", "logging.Formatter.__init__", "logging.Logger.warning", "ntpath.dirname", "logging", "argparse._ActionsContainer.add_argument", "fcntl", "posixpath.expanduser", "logging.getLogger", "bpytop.Color", "bpytop.Raw", "argparse.ArgumentParser.__init__", "math", "bpytop.get_cpu_name", "logging.handlers", "bpytop.Banner", "<builtin>.print", "bpytop.ProcBox", "logging.Logger.info", "bpytop.NetBox", "os.makedirs", "logging.Logger.setLevel", "bpytop.ProcCollector", "bpytop.SubBox", "bpytop.Fx", "urllib.request", "bpytop.Draw", "psutil", "bpytop.Config", "argparse.ArgumentParser.parse_args", "bpytop.Key", "signal", "bpytop.Box", "<builtin>.SystemExit", "bpytop.Theme", "os", "select", "logging.Logger.addHandler", "<builtin>.str", "collections", "bpytop.CpuBox", "bpytop.Timer", "bpytop.CpuCollector", "logging.handlers.RotatingFileHandler.__init__", "ntpath.expanduser", "bpytop.Meters", "datetime", "bpytop.Menu", "bpytop.Graph", "io", "bpytop.UpdateChecker", "bpytop.MemCollector", "posixpath.dirname", "tty", "random", "string.Template.__init__", "termios", "bpytop.Config.__init__", "bpytop.Meter", "bpytop.main", "logging.Logger.debug", "logging.Handler.setFormatter", "typing", "bpytop.Graphs", "bpytop.Mv", "string", "re", "time.time", "psutil.cpu_count", "subprocess", "bpytop.Collector"], "threading": ["<builtin>.hasattr", "_weakrefset", "threading.BrokenBarrierError", "traceback", "_threading_local", "threading._DummyThread", "collections", "itertools.count", "threading.Thread", "collections.namedtuple", "threading.Barrier", "<builtin>.set", "_thread.allocate_lock", "threading.Condition", "threading.Timer", "threading.Semaphore", "threading.BoundedSemaphore", "_weakrefset.WeakSet.__init__", "threading._MainThread", "threading._MainThread.__init__", "threading.Event", "os", "threading._RLock"], "argparse": ["gettext", "argparse._StoreConstAction", "argparse._StoreAction", "argparse.HelpFormatter", "argparse._SubParsersAction", "argparse._StoreFalseAction", "argparse._CountAction", "argparse._ArgumentGroup", "argparse._AppendConstAction", "argparse._ExtendAction", "argparse._HelpAction", "argparse.RawDescriptionHelpFormatter", "argparse._MutuallyExclusiveGroup", "argparse.ArgumentDefaultsHelpFormatter", "argparse.FileType", "argparse._VersionAction", "argparse.ArgumentParser", "argparse.ArgumentTypeError", "argparse.RawTextHelpFormatter", "shutil", "argparse.MetavarTypeHelpFormatter", "re", "argparse.Namespace", "argparse.Action", "argparse.ArgumentError", "argparse._ActionsContainer", "os", "argparse._AttributeHolder", "argparse._AppendAction", "argparse._StoreTrueAction"], "bpytop.Colors": ["bpytop.Color.__init__"], "ntpath.isdir": [], "<builtin>.getattr": [], "bpytop.Nonblocking": [], "logging.Handler.setLevel": ["logging._checkLevel"], "bpytop.NetCollector": ["time.time"], "bpytop.MemBox": [], "posixpath.isdir": [], "bpytop.get_cpu_core_mapping": ["<builtin>.int", "posixpath.isfile", "<builtin>.range", "<builtin>.open", "ntpath.isfile"], "bpytop.Term": ["threading.Event.__init__"], "bpytop.TimeIt": [], "bpytop.Symbol": ["bpytop.Color.fg"], "logging.Logger.exception": ["logging.Logger.error"], "bpytop.Init": [], "shutil": ["<builtin>.hasattr", "shutil.SameFileError", "collections", "bz2", "shutil.ExecError", "zlib", "shutil.SpecialFileError", "collections.namedtuple", "fnmatch", "os", "lzma", "sys.platform.startswith", "shutil.ReadError", "shutil.RegistryError", "shutil.Error", "shutil._GiveupOnFastCopy", "grp", "stat"], "logging.Formatter.__init__": ["<builtin>.ValueError"], "logging.Logger.warning": ["logging.Logger.isEnabledFor", "logging.Logger._log"], "ntpath.dirname": ["ntpath.split"], "logging": ["threading", "<builtin>.hasattr", "logging.LogRecord", "logging.Logger", "traceback", "logging.LoggerAdapter", "logging.PercentStyle", "logging.Manager", "logging.Handler", "threading.RLock", "atexit.register", "logging._StderrHandler.__init__", "logging.BufferingFormatter", "weakref", "logging.Formatter", "logging._StderrHandler", "weakref.WeakValueDictionary.__init__", "logging.PlaceHolder", "logging.Filter", "posixpath.normcase", "logging.NullHandler", "ntpath.normcase", "logging.RootLogger.__init__", "warnings", "logging.Filterer", "string", "re", "logging.Formatter.__init__", "time.time", "logging.StrFormatStyle", "logging.StringTemplateStyle", "io", "logging.Manager.__init__", "logging.StreamHandler", "logging.RootLogger", "collections.abc", "os", "logging.FileHandler"], "argparse._ActionsContainer.add_argument": ["<builtin>.hasattr", "argparse.ArgumentParser._add_action", "<builtin>.callable", "argparse._ActionsContainer._pop_action_class", "<builtin>.ValueError", "argparse._ActionsContainer._registry_get", "argparse.ArgumentParser._get_formatter", "argparse._ActionsContainer._get_positional_kwargs", "<builtin>.len", "argparse._ArgumentGroup._add_action", "argparse._ActionsContainer._add_action", "argparse.HelpFormatter._format_args", "argparse._ActionsContainer._get_optional_kwargs", "argparse._MutuallyExclusiveGroup._add_action"], "fcntl": [], "posixpath.expanduser": ["<builtin>.isinstance", "<builtin>.str", "posixpath._get_sep", "<builtin>.len", "pwd.getpwuid", "pwd.getpwnam"], "logging.getLogger": ["logging.Manager.getLogger"], "bpytop.Color": [], "bpytop.Raw": [], "argparse.ArgumentParser.__init__": ["posixpath.basename", "gettext.gettext", "argparse._ActionsContainer.add_argument", "argparse._ActionsContainer._add_container_actions", "argparse._ActionsContainer.register", "ntpath.basename", "<builtin>.super", "argparse._ActionsContainer.add_argument_group"], "math": [], "bpytop.get_cpu_name": ["re.sub", "subprocess.check_output"], "logging.handlers": ["threading", "socket", "logging.handlers.QueueHandler", "logging.handlers.TimedRotatingFileHandler", "logging.handlers.BaseRotatingHandler", "logging.handlers.DatagramHandler", "logging.handlers.RotatingFileHandler", "struct", "logging.handlers.WatchedFileHandler", "logging.handlers.BufferingHandler", "logging.handlers.MemoryHandler", "stat", "logging.handlers.SocketHandler", "logging.handlers.SMTPHandler", "logging.handlers.HTTPHandler", "logging.handlers.QueueListener", "re", "logging.handlers.NTEventLogHandler", "logging", "pickle", "os", "copy", "queue", "logging.handlers.SysLogHandler"], "bpytop.Banner": ["<builtin>.len", "<builtin>.enumerate", "bpytop.Color.fg", "bpytop.Mv.right"], "<builtin>.print": [], "bpytop.ProcBox": [], "logging.Logger.info": ["logging.Logger.isEnabledFor", "logging.Logger._log"], "bpytop.NetBox": [], "os.makedirs": ["<builtin>.isinstance", "ntpath.split", "posixpath.split", "ntpath.exists", "ntpath.isdir", "posixpath.isdir", "posixpath.exists", "<builtin>.bytes", "os.makedirs"], "logging.Logger.setLevel": ["logging.Manager._clear_cache", "logging._checkLevel"], "bpytop.ProcCollector": ["<builtin>.compile"], "bpytop.SubBox": [], "bpytop.Fx": ["re.compile"], "urllib.request": ["<builtin>.hasattr", "socket", "ssl", "contextlib", "urllib.request.HTTPDigestAuthHandler", "urllib.request.FancyURLopener", "http.client", "urllib.request.HTTPSHandler", "base64", "urllib.parse", "hashlib", "urllib.request.AbstractHTTPHandler", "urllib.request.HTTPDefaultErrorHandler", "posixpath", "urllib.request.HTTPRedirectHandler", "urllib.request.ProxyDigestAuthHandler", "urllib.error", "urllib.request.Request", "nturl2path", "urllib.request.HTTPHandler", "urllib.request.URLopener", "urllib.request.HTTPCookieProcessor", "urllib.request.AbstractDigestAuthHandler", "urllib.request.HTTPPasswordMgr", "urllib.request.UnknownHandler", "urllib.request.HTTPBasicAuthHandler", "urllib.request.DataHandler", "urllib.request.ftpwrapper", "urllib.request.HTTPPasswordMgrWithDefaultRealm", "email", "tempfile", "_scproxy", "urllib.request.CacheFTPHandler", "re.compile", "urllib.request.BaseHandler", "warnings", "urllib.request.FileHandler", "string", "re", "bisect", "io", "urllib.request.AbstractBasicAuthHandler", "urllib.response", "urllib.request.HTTPPasswordMgrWithPriorAuth", "os", "urllib.request.OpenerDirector", "urllib.request.ProxyHandler", "urllib.request.ProxyBasicAuthHandler", "urllib.request.FTPHandler", "urllib.request.HTTPErrorProcessor"], "bpytop.Draw": ["threading.Event.__init__", "threading.Event.set"], "psutil": ["threading", "<builtin>.hasattr", "psutil.test", "contextlib", "<builtin>.tuple", "<builtin>.str", "__future__", "<builtin>.NotImplementedError", "<builtin>.getattr", "functools", "collections", "psutil.Process", "<builtin>.set", "datetime", "psutil._psbsd", "psutil._pslinux", "<builtin>.int", "psutil._pswindows", "psutil.Popen", "signal", "<builtin>.globals", "psutil._pssunos", "<builtin>.dir", "subprocess", "os", "<builtin>.ImportError", "psutil.cpu_times", "<builtin>.object", "psutil._psaix"], "bpytop.Config": ["<builtin>.hasattr", "psutil.cpu_times_percent", "<builtin>.enumerate", "<builtin>.getattr", "psutil.sensors_temperatures"], "argparse.ArgumentParser.parse_args": ["argparse.ArgumentParser.parse_known_args", "argparse.ArgumentParser.error", "gettext.gettext"], "bpytop.Key": ["threading.Event.__init__", "threading.Event.set"], "signal": ["enum", "_functools.partial", "functools", "<builtin>.globals", "functools.wraps"], "bpytop.Box": ["pwd.getpwuid", "<builtin>.sorted"], "<builtin>.SystemExit": [], "bpytop.Theme": [], "os": ["abc", "os._wrap_close", "os._add", "os._exists", "os._Environ.__init__", "os.PathLike", "collections.abc", "<builtin>.ImportError", "os._Environ", "<builtin>.set", "os._createenviron", "os._get_exports_list", "os._fscodec", "os._AddedDllDirectory", "<builtin>.globals", "posixpath", "ntpath", "stat"], "select": [], "logging.Logger.addHandler": ["logging._releaseLock", "logging._acquireLock"], "<builtin>.str": [], "collections": ["collections.ChainMap", "keyword", "collections._OrderedDictValuesView", "reprlib", "collections.Counter", "collections.UserDict", "heapq", "collections.UserList", "collections.UserString", "collections._OrderedDictKeysView", "collections._OrderedDictItemsView", "collections.OrderedDict", "collections._Link", "operator"], "bpytop.CpuBox": [], "bpytop.Timer": [], "bpytop.CpuCollector": ["<builtin>.range"], "logging.handlers.RotatingFileHandler.__init__": ["logging.handlers.BaseRotatingHandler.__init__"], "ntpath.expanduser": ["ntpath.dirname", "ntpath.join", "<builtin>.isinstance", "ntpath._get_bothseps", "<builtin>.len"], "bpytop.Meters": [], "datetime": ["datetime.timezone", "datetime.datetime", "datetime.timedelta", "datetime.tzinfo", "datetime.date", "datetime.timezone._create", "datetime.time", "_datetime", "math", "datetime._days_before_year"], "bpytop.Menu": ["bpytop.Mv.left", "bpytop.Mv.down", "bpytop.Fx.trans", "<builtin>.len", "<builtin>.range", "bpytop.Color.fg"], "bpytop.Graph": [], "io": ["_io._RawIOBase.register", "abc", "_io._IOBase.register", "io.RawIOBase", "io.IOBase", "io.BufferedIOBase", "io.TextIOBase"], "bpytop.UpdateChecker": [], "bpytop.MemCollector": ["time.time"], "posixpath.dirname": ["sys.base_prefix.rfind", "sys.path.rfind", "posixpath._get_sep", "<builtin>.len"], "tty": ["termios"], "random": ["<builtin>.hasattr", "random.SystemRandom", "collections.abc", "random.Random", "os", "warnings", "_random", "random.Random.__init__", "hashlib", "random._test", "_sha512", "math", "bisect"], "string.Template.__init__": [], "termios": [], "bpytop.Config.__init__": ["<builtin>.setattr", "<builtin>.getattr", "bpytop.Config.load_config"], "bpytop.Meter": [], "bpytop.main": ["bpytop.Draw.now", "bpytop.Term.title", "bpytop.Fx.trans", "bpytop.Key.start", "bpytop.Term.echo", "bpytop.Box.draw_bg", "bpytop.Theme.__init__", "bpytop.Term.refresh", "bpytop.Init.done", "bpytop.Init.success", "bpytop.Init.fail", "bpytop.Collector.start", "logging.Logger.exception", "<builtin>.isinstance", "bpytop.Init.start", "sys.stdin.reconfigure", "bpytop.CpuCollector.get_sensors", "bpytop.Draw.out", "threading.Event.wait", "bpytop.Draw.buffer", "bpytop.TimeIt.start", "bpytop.Box.calc_sizes", "bpytop.Collector.collect", "bpytop.clean_quit", "bpytop.main.run", "bpytop.TimeIt.stop", "bpytop.UpdateChecker.run"], "logging.Logger.debug": ["logging.Logger.isEnabledFor", "logging.Logger._log"], "logging.Handler.setFormatter": [], "typing": ["contextlib", "abc", "typing._VariadicGenericAlias", "typing._SpecialForm", "typing._SpecialForm.__init__", "typing._TypingEmpty", "typing.IO", "typing.TextIO", "typing.SupportsComplex", "typing.TypeVar.__init__", "functools", "typing._alias", "types", "collections", "typing._Final", "typing._Immutable", "typing._ProtocolMeta", "typing._GenericAlias", "typing.TypedDict", "typing._GenericAlias.__init__", "typing.BinaryIO", "typing.Protocol", "typing.NamedTupleMeta", "typing.SupportsBytes", "typing._TypingEllipsis", "typing.SupportsInt", "typing.SupportsRound", "typing.ForwardRef", "typing._TypedDictMeta", "typing.re", "re", "typing.SupportsIndex", "operator", "typing.SupportsAbs", "typing.SupportsFloat", "typing.Generic", "collections.abc", "typing.io", "typing.NamedTuple", "typing.TypeVar"], "bpytop.Graphs": [], "bpytop.Mv": [], "string": ["collections", "string._TemplateMetaclass", "string.Formatter", "re", "string.Template"], "re": ["enum", "functools.lru_cache.decorating_function", "re.RegexFlag", "sre_compile.compile", "functools._lru_cache_wrapper.wrapper", "<builtin>.type", "sre_compile", "copyreg.pickle", "sre_parse", "functools.singledispatch.wrapper", "functools.update_wrapper.wrapper", "re.Scanner", "<builtin>.chr", "functools", "<builtin>.globals", "functools.lru_cache", "copyreg"], "time.time": [], "psutil.cpu_count": ["psutil._pswindows.cpu_count_logical", "psutil._pswindows.cpu_count_cores", "_psosx.cpu_count_cores", "psutil._psbsd.cpu_count_cores", "psutil._psaix.cpu_count_logical", "psutil._pssunos.cpu_count_logical", "psutil._psbsd.cpu_count_logical", "psutil._pssunos.cpu_count_cores", "psutil._pslinux.cpu_count_cores", "psutil._pslinux.cpu_count_logical", "psutil._psaix.cpu_count_cores", "_psosx.cpu_count_logical"], "subprocess": ["threading", "<builtin>.hasattr", "contextlib", "subprocess.Handle", "subprocess.SubprocessError", "<builtin>.getattr", "_posixsubprocess", "selectors", "subprocess.CalledProcessError", "subprocess.Popen", "subprocess.TimeoutExpired", "warnings", "subprocess.STARTUPINFO", "signal", "io", "subprocess._use_posix_spawn", "subprocess.CompletedProcess", "os", "select"], "bpytop.Collector": ["threading.Event.__init__", "threading.Event.set"], "<builtin>.hasattr": [], "_weakrefset": ["_weakrefset._IterationGuard", "_weakrefset.WeakSet"], "threading.BrokenBarrierError": [], "traceback": ["traceback.TracebackException", "collections", "traceback.StackSummary", "traceback.FrameSummary", "linecache"], "_threading_local": ["threading", "contextlib", "contextlib.contextmanager", "_threading_local._localimpl", "weakref", "_threading_local.local"], "threading._DummyThread": [], "itertools.count": [], "threading.Thread": [], "collections.namedtuple": ["<builtin>.dict", "<builtin>.tuple", "<builtin>.str", "<builtin>.reversed", "<builtin>.type", "<builtin>.TypeError", "<builtin>.len", "<builtin>.repr", "collections.<lambda1>", "<builtin>.enumerate", "<builtin>.set", "<builtin>.isinstance", "sys._getframe", "_collections._tuplegetter", "sys.intern", "<builtin>.zip", "<builtin>.exec", "<builtin>.map", "<builtin>.ValueError", "<builtin>.list"], "threading.Barrier": [], "<builtin>.set": [], "_thread.allocate_lock": [], "threading.Condition": [], "threading.Timer": [], "threading.Semaphore": [], "threading.BoundedSemaphore": [], "_weakrefset.WeakSet.__init__": ["weakref.WeakKeyDictionary.update", "_weakrefset.WeakSet.update", "<builtin>.set", "weakref.WeakValueDictionary.update"], "threading._MainThread": [], "threading._MainThread.__init__": ["threading.Thread._set_tstate_lock", "threading.Thread._set_ident", "threading.Thread._set_native_id", "threading.Thread.__init__", "threading.Event.set"], "threading.Event": [], "threading._RLock": [], "gettext": ["posixpath.join", "ntpath.join", "locale", "re.compile", "os", "<builtin>.enumerate", "re", "gettext.GNUTranslations", "gettext.NullTranslations"], "argparse._StoreConstAction": [], "argparse._StoreAction": [], "argparse.HelpFormatter": ["argparse.HelpFormatter._Section"], "argparse._SubParsersAction": ["argparse._SubParsersAction._ChoicesPseudoAction"], "argparse._StoreFalseAction": [], "argparse._CountAction": [], "argparse._ArgumentGroup": [], "argparse._AppendConstAction": [], "argparse._ExtendAction": [], "argparse._HelpAction": [], "argparse.RawDescriptionHelpFormatter": [], "argparse._MutuallyExclusiveGroup": [], "argparse.ArgumentDefaultsHelpFormatter": [], "argparse.FileType": [], "argparse._VersionAction": [], "argparse.ArgumentParser": [], "argparse.ArgumentTypeError": [], "argparse.RawTextHelpFormatter": [], "argparse.MetavarTypeHelpFormatter": [], "argparse.Namespace": [], "argparse.Action": [], "argparse.ArgumentError": [], "argparse._ActionsContainer": [], "argparse._AttributeHolder": [], "argparse._AppendAction": [], "argparse._StoreTrueAction": [], "bpytop.Color.__init__": ["logging.Logger.exception", "<builtin>.int", "<builtin>.tuple", "<builtin>.map", "<builtin>.str", "<builtin>.ValueError", "<builtin>.len", "<builtin>.hex", "<builtin>.all", "bpytop.Color.truecolor_to_256"], "logging._checkLevel": ["<builtin>.TypeError", "<builtin>.str", "<builtin>.ValueError", "<builtin>.isinstance"], "<builtin>.int": [], "posixpath.isfile": [], "<builtin>.range": [], "<builtin>.open": [], "ntpath.isfile": [], "threading.Event.__init__": ["threading.Condition.__init__", "_thread.allocate_lock"], "bpytop.Color.fg": ["<builtin>.len", "bpytop.Color.escape_color"], "logging.Logger.error": ["logging.Logger.isEnabledFor", "logging.Logger._log"], "shutil.SameFileError": [], "bz2": ["threading", "io", "_compression", "_bz2", "os", "warnings", "bz2.BZ2File", "<builtin>.object"], "shutil.ExecError": [], "zlib": [], "shutil.SpecialFileError": [], "fnmatch": ["functools.lru_cache.decorating_function", "functools._lru_cache_wrapper.wrapper", "functools", "os", "functools.singledispatch.wrapper", "functools.update_wrapper.wrapper", "re", "posixpath", "functools.lru_cache"], "lzma": ["io", "lzma.LZMAFile", "_compression", "os", "_lzma"], "sys.platform.startswith": [], "shutil.ReadError": [], "shutil.RegistryError": [], "shutil.Error": [], "shutil._GiveupOnFastCopy": [], "grp": [], "stat": [], "<builtin>.ValueError": [], "logging.Logger.isEnabledFor": ["logging.Logger.getEffectiveLevel", "logging._releaseLock", "logging._acquireLock"], "logging.Logger._log": ["<builtin>.isinstance", "logging.Logger.handle", "logging.Logger.findCaller", "<builtin>.type", "logging.Logger.makeRecord", "sys.exc_info"], "ntpath.split": ["<builtin>.len", "ntpath.splitdrive", "ntpath._get_bothseps"], "logging.LogRecord": [], "logging.Logger": [], "logging.LoggerAdapter": [], "logging.PercentStyle": ["re.compile"], "logging.Manager": [], "logging.Handler": ["<builtin>.property"], "threading.RLock": ["_thread.RLock", "threading._RLock.__init__"], "atexit.register": [], "logging._StderrHandler.__init__": ["logging.Handler.__init__"], "logging.BufferingFormatter": [], "weakref": ["_weakrefset", "weakref.WeakKeyDictionary", "weakref.WeakMethod", "weakref.WeakValueDictionary", "weakref.finalize", "collections.abc", "weakref.KeyedRef"], "logging.Formatter": [], "logging._StderrHandler": [], "weakref.WeakValueDictionary.__init__": ["<builtin>.set"], "logging.PlaceHolder": [], "logging.Filter": [], "posixpath.normcase": [], "logging.NullHandler": [], "ntpath.normcase": ["sys.base_prefix.replace", "<builtin>.isinstance", "sys.path.replace"], "logging.RootLogger.__init__": ["logging.Logger.__init__"], "warnings": ["<builtin>.hasattr", "warnings.catch_warnings", "warnings._processoptions", "warnings.filterwarnings", "warnings.WarningMessage", "warnings.simplefilter", "warnings._OptionError"], "logging.Filterer": [], "logging.StrFormatStyle": ["re.compile"], "logging.StringTemplateStyle": [], "logging.Manager.__init__": [], "logging.StreamHandler": [], "logging.RootLogger": [], "collections.abc": ["collections.abc"], "logging.FileHandler": [], "argparse.ArgumentParser._add_action": [], "<builtin>.callable": [], "argparse._ActionsContainer._pop_action_class": ["argparse._ActionsContainer._registry_get"], "argparse._ActionsContainer._registry_get": [], "argparse.ArgumentParser._get_formatter": ["argparse.HelpFormatter.__init__"], "argparse._ActionsContainer._get_positional_kwargs": ["<builtin>.TypeError", "<builtin>.dict", "gettext.gettext"], "<builtin>.len": [], "argparse._ArgumentGroup._add_action": ["<builtin>.super"], "argparse._ActionsContainer._add_action": ["argparse._ActionsContainer._check_conflict"], "argparse.HelpFormatter._format_args": ["argparse.HelpFormatter._metavar_formatter", "<builtin>.range", "<builtin>.ValueError", "argparse.HelpFormatter._metavar_formatter.format"], "argparse._ActionsContainer._get_optional_kwargs": ["<builtin>.dict", "<builtin>.len", "<builtin>.ValueError", "gettext.gettext"], "argparse._MutuallyExclusiveGroup._add_action": ["argparse.ArgumentParser._add_action", "gettext.gettext", "<builtin>.ValueError", "argparse._ActionsContainer._add_action", "argparse._ArgumentGroup._add_action", "argparse._MutuallyExclusiveGroup._add_action"], "<builtin>.isinstance": [], "posixpath._get_sep": ["<builtin>.isinstance"], "pwd.getpwuid": [], "pwd.getpwnam": [], "logging.Manager.getLogger": ["<builtin>.isinstance", "<builtin>.TypeError", "logging.Manager._fixupParents", "logging._releaseLock", "logging.Manager._fixupChildren", "logging._acquireLock"], "posixpath.basename": ["sys.base_prefix.rfind", "sys.path.rfind", "sys.stdin.buffer.rfind", "posixpath._get_sep"], "gettext.gettext": ["gettext.dgettext"], "argparse._ActionsContainer._add_container_actions": ["argparse._ActionsContainer.add_mutually_exclusive_group", "argparse._ActionsContainer.add_argument_group", "<builtin>.ValueError", "gettext.gettext"], "argparse._ActionsContainer.register": [], "ntpath.basename": ["ntpath.split"], "<builtin>.super": [], "argparse._ActionsContainer.add_argument_group": ["argparse._ArgumentGroup.__init__"], "re.sub": ["re._compile"], "subprocess.check_output": ["subprocess.run", "<builtin>.ValueError"], "socket": ["enum", "<builtin>.hasattr", "io", "socket._GiveupOnSendfile", "socket.SocketIO", "socket.socket", "_socket", "sys.platform.lower", "os", "<builtin>.getattr", "os._get_exports_list", "<builtin>.object", "selectors"], "logging.handlers.QueueHandler": [], "logging.handlers.TimedRotatingFileHandler": [], "logging.handlers.BaseRotatingHandler": [], "logging.handlers.DatagramHandler": [], "logging.handlers.RotatingFileHandler": [], "struct": ["_struct"], "logging.handlers.WatchedFileHandler": [], "logging.handlers.BufferingHandler": [], "logging.handlers.MemoryHandler": [], "logging.handlers.SocketHandler": [], "logging.handlers.SMTPHandler": [], "logging.handlers.HTTPHandler": [], "logging.handlers.QueueListener": [], "logging.handlers.NTEventLogHandler": [], "pickle": ["argparse", "pickle.PickleError", "_pickle", "functools", "copyreg", "types", "struct", "pprint", "pickle._Pickler", "argparse.ArgumentParser.print_help", "pickle.UnpicklingError", "pickle._Stop", "pickle._test", "pickle.PicklingError", "codecs", "re.match", "argparse.ArgumentParser.parse_args", "pickle._load", "re", "pickle._Unpickler", "unittest.main.TestProgram._print_help", "argparse.FileType.__init__", "io", "<builtin>.dir", "pickle._Unframer", "argparse._ActionsContainer.add_argument", "_compat_pickle", "pickle._Framer", "argparse.ArgumentParser.__init__"], "copy": ["types", "<builtin>.type", "copy.Error", "weakref", "<builtin>.getattr", "copyreg"], "queue": ["threading", "queue.Empty", "queue.PriorityQueue", "collections", "queue.LifoQueue", "_queue", "heapq", "queue.Full", "queue.Queue", "queue._PySimpleQueue"], "logging.handlers.SysLogHandler": [], "<builtin>.enumerate": [], "bpytop.Mv.right": [], "posixpath.split": ["posixpath._get_sep", "win32evtlogutil.__file__.rfind", "sys.base_prefix.rfind", "<builtin>.len", "sys.path.rfind"], "ntpath.exists": [], "posixpath.exists": [], "<builtin>.bytes": [], "logging.Manager._clear_cache": ["logging._releaseLock", "<builtin>.isinstance", "logging._acquireLock"], "<builtin>.compile": [], "re.compile": ["re._compile"], "ssl": ["<builtin>.hasattr", "socket", "ssl.Purpose", "ssl._TLSMessageType", "ssl.SSLContext", "<builtin>.getattr", "base64", "ssl._TLSAlertType", "collections", "collections.namedtuple", "ssl._ASN1Object", "ssl.TLSVersion", "ssl.SSLObject", "warnings", "_ssl", "enum", "ssl.SSLSocket", "ssl._TLSContentType", "os"], "contextlib": ["contextlib.ContextDecorator", "abc", "contextlib.AbstractAsyncContextManager", "functools", "types", "collections", "contextlib.AsyncExitStack", "contextlib._GeneratorContextManagerBase", "contextlib.closing", "contextlib._GeneratorContextManager", "contextlib._AsyncGeneratorContextManager", "contextlib.ExitStack", "contextlib._BaseExitStack", "contextlib.AbstractContextManager", "contextlib._RedirectStream", "contextlib.nullcontext", "contextlib.redirect_stderr", "contextlib.suppress", "collections.abc", "contextlib.redirect_stdout"], "urllib.request.HTTPDigestAuthHandler": [], "urllib.request.FancyURLopener": [], "http.client": ["socket", "ssl", "http.client.HTTPMessage", "http.client.IncompleteRead", "http.client.ResponseNotReady", "urllib.parse", "http.client.HTTPSConnection", "http.client.HTTPConnection", "http.client.UnknownTransferEncoding", "http.client.HTTPException", "http.client.LineTooLong", "http.client.ImproperConnectionState", "http.client.UnknownProtocol", "http.client.CannotSendRequest", "http.client.HTTPResponse", "http", "http.client.RemoteDisconnected", "re.compile", "email.message", "http.client.NotConnected", "email.parser", "re", "<builtin>.globals", "io", "http.client.InvalidURL", "http.client.CannotSendHeader", "collections.abc", "http.client.UnimplementedFileMode", "http.client.BadStatusLine"], "urllib.request.HTTPSHandler": [], "base64": ["re", "struct", "base64.main", "binascii"], "urllib.parse": ["urllib.parse._NetlocResultMixinBase", "urllib.parse._NetlocResultMixinStr", "<builtin>.bytes", "collections", "urllib.parse.Quoter", "collections.namedtuple", "urllib.parse.SplitResultBytes", "urllib.parse.DefragResult", "urllib.parse.ParseResult", "urllib.parse.DefragResultBytes", "<builtin>.frozenset", "re.compile", "urllib.parse._ResultMixinStr", "warnings", "re", "urllib.parse.SplitResult", "urllib.parse.ParseResultBytes", "urllib.parse._fix_result_transcoding", "urllib.parse._ResultMixinBytes", "urllib.parse._NetlocResultMixinBytes"], "hashlib": ["_hashlib", "logging", "hashlib.__get_openssl_constructor", "logging.exception", "<builtin>.range", "<builtin>.bytes", "<builtin>.set", "hashlib.__get_builtin_constructor", "<builtin>.globals"], "urllib.request.AbstractHTTPHandler": [], "urllib.request.HTTPDefaultErrorHandler": [], "posixpath": ["os", "genericpath", "stat"], "urllib.request.HTTPRedirectHandler": [], "urllib.request.ProxyDigestAuthHandler": [], "urllib.error": ["urllib.error.ContentTooShortError", "urllib.response", "urllib.error.HTTPError", "urllib.error.URLError"], "urllib.request.Request": [], "nturl2path": [], "urllib.request.HTTPHandler": [], "urllib.request.URLopener": [], "urllib.request.HTTPCookieProcessor": [], "urllib.request.AbstractDigestAuthHandler": [], "urllib.request.HTTPPasswordMgr": [], "urllib.request.UnknownHandler": [], "urllib.request.HTTPBasicAuthHandler": [], "urllib.request.DataHandler": [], "urllib.request.ftpwrapper": [], "urllib.request.HTTPPasswordMgrWithDefaultRealm": [], "email": [], "tempfile": ["shutil", "<builtin>.hasattr", "io", "tempfile._RandomNameSequence", "random", "tempfile._TemporaryFileCloser", "tempfile.TemporaryDirectory", "tempfile._TemporaryFileWrapper", "weakref", "os", "warnings", "_thread.allocate_lock", "tempfile.SpooledTemporaryFile", "functools"], "_scproxy": [], "urllib.request.CacheFTPHandler": [], "urllib.request.BaseHandler": [], "urllib.request.FileHandler": [], "bisect": ["_bisect"], "urllib.request.AbstractBasicAuthHandler": ["re.compile"], "urllib.response": ["urllib.response.addclosehook", "tempfile", "urllib.response.addinfourl", "urllib.response.addbase", "urllib.response.addinfo"], "urllib.request.HTTPPasswordMgrWithPriorAuth": [], "urllib.request.OpenerDirector": [], "urllib.request.ProxyHandler": [], "urllib.request.ProxyBasicAuthHandler": [], "urllib.request.FTPHandler": [], "urllib.request.HTTPErrorProcessor": [], "threading.Event.set": ["threading.Condition.notify_all"], "psutil.test": ["psutil.Process.uids", "psutil._common.bytes2human", "psutil.process_iter", "<builtin>.print", "<builtin>.round", "time.strftime", "<builtin>.int", "_compat.get_terminal_size", "time.localtime", "psutil._common", "<builtin>.sum"], "<builtin>.tuple": [], "__future__": ["__future__._Feature.__init__", "__future__._Feature"], "<builtin>.NotImplementedError": [], "functools": ["collections", "abc", "functools.singledispatchmethod", "collections.namedtuple", "functools.cached_property", "reprlib", "functools.partialmethod", "<builtin>.object", "functools.partial", "functools._HashedSeq"], "psutil.Process": ["<builtin>.hasattr", "_common.memoize_when_activated", "contextlib.contextmanager", "_common.deprecated_method", "psutil._assert_pid_not_reused"], "psutil._psbsd": ["<builtin>.hasattr", "contextlib", "collections", "<builtin>.dict", "contextlib.contextmanager", "_psutil_posix.getpagesize", "collections.namedtuple", "xml.etree.ElementTree", "os", "functools", "_common.memoize", "psutil._psbsd.Process"], "psutil._pslinux": ["<builtin>.hasattr", "socket", "__future__", "posixpath.exists", "psutil._pslinux.Connections", "base64", "traceback", "functools", "resource", "struct", "collections", "ctypes.CDLL.__init__", "collections.namedtuple", "psutil._pslinux.Connections.__init__", "psutil._pslinux.set_scputimes_ntuple", "_common.memoize", "psutil._pslinux.Process", "ntpath.exists", "glob", "<builtin>.int", "_psutil_posix.getpagesize", "psutil._pslinux.IOPriority", "warnings", "traceback.print_exc", "re", "<builtin>.globals", "psutil._pslinux._Ipv6UnsupportedError", "enum", "<builtin>.dir", "ctypes", "os", "psutil._pslinux.RootFsDeviceFinder"], "psutil._pswindows": ["enum", "_compat.lru_cache", "contextlib", "collections", "<builtin>.dict", "psutil._pswindows.Priority", "<builtin>.str", "psutil._pswindows.IOPriority", "psutil._pswindows.Process", "<builtin>.RuntimeError", "collections.namedtuple", "os", "signal", "psutil._pswindows.WindowsService", "sys.getwindowsversion", "functools", "<builtin>.globals", "_common.memoize"], "psutil.Popen": [], "<builtin>.globals": [], "psutil._pssunos": ["socket", "collections", "<builtin>.dict", "_psutil_posix.getpagesize", "collections.namedtuple", "subprocess", "os", "psutil._pssunos.Process", "functools"], "<builtin>.dir": [], "<builtin>.ImportError": [], "psutil.cpu_times": ["psutil._pssunos.cpu_times", "psutil._psbsd.cpu_times", "psutil._psaix.cpu_times", "psutil._psaix.per_cpu_times", "psutil._pssunos.per_cpu_times", "psutil._pslinux.cpu_times", "psutil._pswindows.per_cpu_times", "psutil._pswindows.cpu_times", "_psosx.per_cpu_times", "_psosx.cpu_times", "psutil._pslinux.per_cpu_times", "psutil._psbsd.per_cpu_times"], "<builtin>.object": [], "psutil._psaix": ["<builtin>.hasattr", "collections", "<builtin>.dict", "psutil._psaix.Process", "glob", "_psutil_posix.getpagesize", "collections.namedtuple", "subprocess", "os", "functools", "re"], "psutil.cpu_times_percent": ["<builtin>.zip", "psutil.cpu_times_percent.calculate", "<builtin>.ValueError", "psutil.cpu_times", "time.sleep"], "psutil.sensors_temperatures": ["_psosx.sensors_temperatures", "_common.shwtemp", "<builtin>.dict", "psutil.sensors_temperatures.convert", "psutil._pslinux.sensors_temperatures", "collections.defaultdict", "psutil._psbsd.sensors_temperatures"], "argparse.ArgumentParser.parse_known_args": ["<builtin>.hasattr", "<builtin>.delattr", "argparse.ArgumentParser.error", "<builtin>.str", "argparse.ArgumentParser._parse_known_args", "<builtin>.list", "<builtin>.getattr", "argparse.Namespace.__init__", "sys.exc_info", "<builtin>.setattr"], "argparse.ArgumentParser.error": ["argparse.ArgumentParser.exit", "argparse.ArgumentParser.print_usage", "gettext.gettext"], "enum": ["enum.IntFlag", "enum.EnumMeta", "types", "enum.IntEnum", "enum.Flag", "enum._EnumDict", "enum.Enum", "enum.auto", "<builtin>.object"], "_functools.partial": [], "functools.wraps": ["_functools.partial"], "<builtin>.sorted": [], "abc": ["abc.ABC", "abc.abstractstaticmethod", "_py_abc", "abc.abstractproperty", "abc.ABCMeta", "abc.abstractclassmethod"], "os._wrap_close": [], "os._add": [], "os._exists": ["<builtin>.globals"], "os._Environ.__init__": [], "os.PathLike": ["abc.abstractmethod"], "os._Environ": [], "os._createenviron": ["sys.getfilesystemencoding", "os._Environ.__init__", "os._createenviron.check_str"], "os._get_exports_list": ["<builtin>.dir", "<builtin>.list"], "os._fscodec": ["sys.getfilesystemencodeerrors", "sys.getfilesystemencoding"], "os._AddedDllDirectory": [], "ntpath": ["<builtin>.hasattr", "os", "genericpath", "sys.getwindowsversion", "stat"], "logging._releaseLock": [], "logging._acquireLock": [], "collections.ChainMap": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "keyword": ["<builtin>.frozenset"], "collections._OrderedDictValuesView": [], "reprlib": ["reprlib.Repr.__init__", "reprlib.Repr"], "collections.Counter": [], "collections.UserDict": [], "heapq": ["doctest", "<builtin>.print", "_heapq", "doctest.testmod"], "collections.UserList": [], "collections.UserString": [], "collections._OrderedDictKeysView": [], "collections._OrderedDictItemsView": [], "collections.OrderedDict": ["<builtin>.object", "reprlib.recursive_repr", "reprlib.recursive_repr.decorating_function"], "collections._Link": [], "operator": ["operator.attrgetter", "operator.itemgetter", "operator.methodcaller"], "logging.handlers.BaseRotatingHandler.__init__": ["logging.FileHandler.__init__"], "ntpath.join": ["genericpath._check_arg_types", "<builtin>.map", "ntpath.splitdrive", "<builtin>.isinstance"], "ntpath._get_bothseps": ["<builtin>.isinstance"], "datetime.timezone": ["<builtin>.object"], "datetime.datetime": [], "datetime.timedelta": [], "datetime.tzinfo": [], "datetime.date": [], "datetime.timezone._create": ["datetime.timezone.__new__"], "datetime.time": [], "_datetime": [], "datetime._days_before_year": [], "bpytop.Mv.left": [], "bpytop.Mv.down": [], "bpytop.Fx.trans": [], "_io._RawIOBase.register": [], "_io._IOBase.register": [], "io.RawIOBase": [], "io.IOBase": [], "io.BufferedIOBase": [], "io.TextIOBase": [], "sys.base_prefix.rfind": [], "sys.path.rfind": [], "random.SystemRandom": [], "random.Random": [], "_random": [], "random.Random.__init__": ["random.Random.seed"], "random._test": ["random._test_generator"], "_sha512": [], "<builtin>.setattr": [], "bpytop.Config.load_config": ["logging.Logger.exception", "<builtin>.int", "<builtin>.str", "<builtin>.type", "posixpath.isfile", "bpytop.strtobool", "<builtin>.getattr", "<builtin>.open", "ntpath.isfile", "<builtin>.bool"], "bpytop.Draw.now": ["<builtin>.print", "threading.Event.set", "threading.Event.clear", "threading.Event.wait"], "bpytop.Term.title": [], "bpytop.Key.start": ["threading.Thread.start", "threading.Thread.__init__"], "bpytop.Term.echo": ["sys.stdin.fileno"], "bpytop.Box.draw_bg": ["bpytop.Draw.buffer", "bpytop.Box.empty_bg", "bpytop.Box.draw_clock", "bpytop.Box.draw_update_ms"], "bpytop.Theme.__init__": ["bpytop.Theme._load_theme", "bpytop.Theme.refresh"], "bpytop.Term.refresh": ["bpytop.Draw.now", "bpytop.Mv.left", "bpytop.Mv.down", "<builtin>.min", "bpytop.Box.calc_sizes", "<builtin>.str", "bpytop.Mv.right", "bpytop.Key.last", "bpytop.clean_quit", "<builtin>.getattr", "bpytop.Key.has_key", "bpytop.Box.draw_bg", "threading.Event.wait", "bpytop.Timer.finish", "threading.Event.clear", "threading.Event.set", "bpytop.create_box"], "bpytop.Init.done": ["bpytop.Draw.now", "bpytop.Draw.clear", "bpytop.Init.draw_bg"], "bpytop.Init.success": ["bpytop.Draw.buffer", "bpytop.Init.draw_bg", "bpytop.Mv.right"], "bpytop.Init.fail": ["bpytop.Draw.buffer", "time.sleep", "logging.Logger.exception", "bpytop.clean_quit"], "bpytop.Collector.start": ["threading.Thread.start", "threading.Thread.__init__"], "bpytop.Init.start": ["bpytop.Draw.buffer", "bpytop.Mv.left", "bpytop.Mv.down", "bpytop.Fx.trans", "bpytop.Banner.draw", "<builtin>.round", "<builtin>.str", "bpytop.Mv.to", "bpytop.Graph.__init__", "<builtin>.range", "random.Random.randint", "bpytop.Color.fg", "bpytop.Draw.out"], "sys.stdin.reconfigure": [], "bpytop.CpuCollector.get_sensors": ["<builtin>.hasattr", "shutil.which", "<builtin>.bool", "psutil.sensors_temperatures", "subprocess.check_output"], "bpytop.Draw.out": ["bpytop.Draw.now", "<builtin>.sorted", "bpytop.Draw.clear"], "threading.Event.wait": ["threading.Condition.wait"], "bpytop.Draw.buffer": ["bpytop.Draw.out"], "bpytop.TimeIt.start": ["time.time"], "bpytop.Box.calc_sizes": [], "bpytop.Collector.collect": ["threading.Event.set", "threading.Event.wait", "<builtin>.list"], "bpytop.clean_quit": ["time.time", "bpytop.Draw.now", "bpytop.Term.title", "bpytop.Key.stop", "<builtin>.round", "<builtin>.print", "logging.Logger.info", "bpytop.Term.echo", "bpytop.Collector.stop", "_thread.interrupt_main", "logging.Logger.warning", "<builtin>.SystemExit"], "bpytop.main.run": ["bpytop.Timer.left", "bpytop.Collector.collect", "bpytop.Term.refresh", "bpytop.Timer.not_zero", "bpytop.process_keys", "bpytop.Timer.stamp", "bpytop.Key.input_wait"], "bpytop.TimeIt.stop": ["time.time", "logging.Logger.debug"], "bpytop.UpdateChecker.run": ["threading.Thread.start", "threading.Thread.__init__"], "typing._VariadicGenericAlias": ["typing._tp_cache"], "typing._SpecialForm": ["typing._tp_cache"], "typing._SpecialForm.__init__": [], "typing._TypingEmpty": [], "typing.IO": ["abc.abstractmethod"], "typing.TextIO": ["abc.abstractmethod"], "typing.SupportsComplex": ["abc.abstractmethod"], "typing.TypeVar.__init__": ["sys._getframe", "<builtin>.tuple", "<builtin>.ValueError", "typing._type_check", "<builtin>.TypeError", "<builtin>.len", "<builtin>.bool"], "typing._alias": ["typing._GenericAlias.__init__"], "types": ["types.DynamicClassAttribute", "<builtin>.type", "types._g", "types._cell_factory", "types._GeneratorWrapper", "<builtin>.object", "<builtin>.globals", "sys.exc_info", "types._C"], "typing._Final": [], "typing._Immutable": [], "typing._ProtocolMeta": [], "typing._GenericAlias": ["typing._tp_cache"], "typing.TypedDict": [], "typing._GenericAlias.__init__": ["<builtin>.tuple", "typing._collect_type_vars", "<builtin>.isinstance"], "typing.BinaryIO": ["abc.abstractmethod"], "typing.Protocol": [], "typing.NamedTupleMeta": [], "typing.SupportsBytes": ["abc.abstractmethod"], "typing._TypingEllipsis": [], "typing.SupportsInt": ["abc.abstractmethod"], "typing.SupportsRound": ["abc.abstractmethod"], "typing.ForwardRef": [], "typing._TypedDictMeta": [], "typing.re": [], "typing.SupportsIndex": ["abc.abstractmethod"], "typing.SupportsAbs": ["abc.abstractmethod"], "typing.SupportsFloat": ["abc.abstractmethod"], "typing.Generic": ["typing._tp_cache"], "typing.io": [], "typing.NamedTuple": [], "typing.TypeVar": [], "string._TemplateMetaclass": [], "string.Formatter": [], "string.Template": [], "functools.lru_cache.decorating_function": ["_functools._lru_cache_wrapper"], "re.RegexFlag": [], "sre_compile.compile": ["sre_compile.isstring", "<builtin>.tuple", "<builtin>.print", "sre_compile.dis", "_sre.compile", "sre_compile._code", "sre_parse.parse"], "functools._lru_cache_wrapper.wrapper": ["functools._make_key"], "<builtin>.type": [], "sre_compile": ["<builtin>.tuple", "sre_constants", "sre_parse"], "copyreg.pickle": ["<builtin>.callable", "<builtin>.TypeError", "copyreg.constructor"], "sre_parse": ["<builtin>.frozenset", "<builtin>.ord", "sre_constants", "sre_parse.State", "sre_parse.SubPattern", "sre_parse.Tokenizer", "sre_parse.Verbose"], "functools.singledispatch.wrapper": ["<builtin>.TypeError", "functools.singledispatch.dispatch"], "functools.update_wrapper.wrapper": [], "re.Scanner": [], "<builtin>.chr": [], "functools.lru_cache": ["<builtin>.callable", "<builtin>.TypeError", "<builtin>.isinstance", "_functools._lru_cache_wrapper"], "copyreg": ["copyreg.pickle"], "psutil._pswindows.cpu_count_logical": ["_psutil_windows.cpu_count_logical"], "psutil._pswindows.cpu_count_cores": ["_psutil_windows.cpu_count_cores"], "_psosx.cpu_count_cores": [], "psutil._psbsd.cpu_count_cores": ["<builtin>.len", "_psutil_bsd.cpu_topology", "psutil._psbsd.cpu_count_logical"], "psutil._psaix.cpu_count_logical": [], "psutil._pssunos.cpu_count_logical": [], "psutil._psbsd.cpu_count_logical": ["_psutil_bsd.cpu_count_logical"], "psutil._pssunos.cpu_count_cores": ["_psutil_sunos.cpu_count_cores"], "psutil._pslinux.cpu_count_cores": ["<builtin>.int", "_common.get_procfs_path", "<builtin>.len", "<builtin>.set", "_common.open_binary", "<builtin>.sum"], "psutil._pslinux.cpu_count_logical": ["_common.open_text", "_common.open_binary", "_common.get_procfs_path", "re.compile"], "psutil._psaix.cpu_count_cores": ["<builtin>.len", "subprocess.Popen.communicate", "<builtin>.RuntimeError", "subprocess.Popen.__init__"], "_psosx.cpu_count_logical": [], "subprocess.Handle": [], "subprocess.SubprocessError": [], "_posixsubprocess": [], "selectors": ["<builtin>.hasattr", "selectors.SelectSelector", "collections", "abc", "selectors.PollSelector", "collections.namedtuple", "selectors.EpollSelector", "selectors.DevpollSelector", "selectors._BaseSelectorImpl", "collections.abc", "select", "selectors._SelectorMapping", "selectors._PollLikeSelector", "selectors.KqueueSelector", "math", "<builtin>.globals", "selectors.BaseSelector"], "subprocess.CalledProcessError": [], "subprocess.Popen": [], "subprocess.TimeoutExpired": [], "subprocess.STARTUPINFO": [], "subprocess._use_posix_spawn": ["<builtin>.hasattr", "<builtin>.len", "<builtin>.map", "<builtin>.tuple"], "subprocess.CompletedProcess": [], "_weakrefset._IterationGuard": [], "_weakrefset.WeakSet": [], "traceback.TracebackException": [], "traceback.StackSummary": [], "traceback.FrameSummary": [], "linecache": ["functools", "os", "tokenize"], "contextlib.contextmanager": ["functools.wraps", "_functools.partial"], "_threading_local._localimpl": [], "_threading_local.local": [], "<builtin>.dict": [], "<builtin>.reversed": [], "<builtin>.TypeError": [], "<builtin>.repr": [], "collections.<lambda1>": ["<builtin>.property", "operator.itemgetter.__init__"], "sys._getframe": [], "_collections._tuplegetter": [], "sys.intern": [], "<builtin>.zip": [], "<builtin>.exec": [], "<builtin>.map": [], "<builtin>.list": [], "weakref.WeakKeyDictionary.update": ["<builtin>.hasattr", "<builtin>.len", "<builtin>.type", "_weakref.ref"], "_weakrefset.WeakSet.update": ["_weakrefset.WeakSet.add", "_weakrefset.WeakSet._commit_removals"], "weakref.WeakValueDictionary.update": ["<builtin>.hasattr", "weakref.KeyedRef.__init__", "<builtin>.dict"], "threading.Thread._set_tstate_lock": ["_thread._set_sentinel"], "threading.Thread._set_ident": ["_thread.get_ident"], "threading.Thread._set_native_id": ["_thread.get_native_id"], "threading.Thread.__init__": ["threading._newname", "threading._make_invoke_excepthook", "_weakrefset.WeakSet.add", "<builtin>.str", "threading.Event.__init__", "threading.current_thread"], "posixpath.join": ["sys.path.endswith", "<builtin>.map", "posixpath._get_sep", "sys.base_prefix.endswith", "genericpath._check_arg_types"], "locale": ["<builtin>.hasattr", "functools", "<builtin>.print", "locale._print_locale", "re.compile", "encodings.aliases", "collections.abc", "locale._test", "<builtin>.sorted", "sys.platform.startswith", "_functools.partial", "re", "<builtin>.globals", "functools.wraps", "encodings"], "gettext.GNUTranslations": [], "gettext.NullTranslations": [], "argparse.HelpFormatter._Section": [], "argparse._SubParsersAction._ChoicesPseudoAction": [], "<builtin>.hex": [], "<builtin>.all": [], "bpytop.Color.truecolor_to_256": ["<builtin>.round"], "threading.Condition.__init__": ["_collections.deque", "threading.RLock"], "bpytop.Color.escape_color": ["<builtin>.int", "<builtin>.len", "logging.Logger.exception", "bpytop.Color.truecolor_to_256"], "_compression": ["_compression.BaseStream", "_compression.DecompressReader", "io"], "_bz2": [], "bz2.BZ2File": [], "lzma.LZMAFile": [], "_lzma": [], "logging.Logger.getEffectiveLevel": [], "logging.Logger.handle": ["logging.Filterer.filter", "logging.Logger.callHandlers"], "logging.Logger.findCaller": ["<builtin>.hasattr", "posixpath.normcase", "ntpath.normcase", "traceback.print_stack", "logging.<lambda1>", "io.StringIO"], "logging.Logger.makeRecord": ["logging.LogRecord.__init__", "<builtin>.KeyError"], "sys.exc_info": [], "ntpath.splitdrive": ["<builtin>.isinstance", "sys.stdin.buffer.replace", "win32evtlogutil.__file__.replace", "sys.path.replace", "<builtin>.len", "sys.base_prefix.replace"], "<builtin>.property": [], "_thread.RLock": [], "threading._RLock.__init__": ["_thread.allocate_lock"], "logging.Handler.__init__": ["logging.NullHandler.createLock", "logging.Filterer.__init__", "logging._checkLevel", "logging.Handler.createLock", "logging._addHandlerRef"], "weakref.WeakKeyDictionary": [], "weakref.WeakMethod": [], "weakref.WeakValueDictionary": [], "weakref.finalize": ["itertools.count", "weakref.finalize._Info"], "weakref.KeyedRef": [], "sys.base_prefix.replace": [], "sys.path.replace": [], "logging.Logger.__init__": ["logging.Filterer.__init__", "logging._checkLevel"], "warnings.catch_warnings": [], "warnings._processoptions": ["<builtin>.print", "warnings._setoption"], "warnings.filterwarnings": ["<builtin>.issubclass", "<builtin>.isinstance", "re.compile", "warnings._add_filter", "re"], "warnings.WarningMessage": [], "warnings.simplefilter": ["warnings._add_filter", "<builtin>.isinstance"], "warnings._OptionError": [], "argparse.HelpFormatter.__init__": ["<builtin>.min", "re.compile", "argparse.HelpFormatter._Section.__init__", "shutil.get_terminal_size", "<builtin>.max"], "argparse._ActionsContainer._check_conflict": ["argparse._ActionsContainer._get_handler"], "argparse.HelpFormatter._metavar_formatter": ["<builtin>.str"], "argparse.HelpFormatter._metavar_formatter.format": ["<builtin>.isinstance"], "logging.Manager._fixupParents": ["logging.PlaceHolder.__init__", "<builtin>.isinstance"], "logging.Manager._fixupChildren": ["<builtin>.len"], "sys.stdin.buffer.rfind": [], "gettext.dgettext": ["gettext.translation", "gettext.NullTranslations.gettext"], "argparse._ActionsContainer.add_mutually_exclusive_group": ["argparse._MutuallyExclusiveGroup.__init__"], "argparse._ArgumentGroup.__init__": ["<builtin>.super"], "re._compile": ["<builtin>.isinstance", "sre_compile.isstring", "<builtin>.next", "<builtin>.type", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.len", "<builtin>.iter", "sre_compile.compile"], "subprocess.run": ["subprocess.CalledProcessError.__init__", "subprocess.CompletedProcess.__init__", "<builtin>.ValueError", "subprocess.Popen.__init__"], "socket._GiveupOnSendfile": [], "socket.SocketIO": [], "socket.socket": ["<builtin>.hasattr"], "_socket": [], "sys.platform.lower": [], "_struct": [], "pickle.PickleError": [], "_pickle": [], "pprint": ["types", "io", "collections", "pprint.PrettyPrinter", "pprint._perfcheck", "<builtin>.frozenset", "<builtin>.type", "pprint._safe_key", "re"], "pickle._Pickler": ["<builtin>.type"], "argparse.ArgumentParser.print_help": ["argparse.ArgumentParser.format_help", "argparse.ArgumentParser._print_message"], "pickle.UnpicklingError": [], "pickle._Stop": [], "pickle._test": ["doctest", "doctest.testmod"], "pickle.PicklingError": [], "codecs": ["codecs.Codec", "codecs.IncrementalEncoder", "codecs.IncrementalDecoder", "codecs.EncodedFile", "codecs.BufferedIncrementalDecoder", "<builtin>.SystemError", "codecs.StreamWriter", "codecs.StreamReader", "codecs.StreamRecoder", "codecs.CodecInfo", "codecs.BufferedIncrementalEncoder", "encodings", "codecs.StreamReaderWriter"], "re.match": ["re._compile"], "pickle._load": ["pickle._Unpickler.__init__", "pickle._Unpickler.load"], "pickle._Unpickler": [], "unittest.main.TestProgram._print_help": ["argparse.ArgumentParser.format_help", "<builtin>.print", "argparse.ArgumentParser.print_help", "unittest.main.TestProgram._print_help"], "argparse.FileType.__init__": [], "pickle._Unframer": [], "_compat_pickle": ["<builtin>.len", "<builtin>.dict"], "pickle._Framer": [], "copy.Error": [], "queue.Empty": [], "queue.PriorityQueue": [], "queue.LifoQueue": [], "_queue": [], "queue.Full": [], "queue.Queue": [], "queue._PySimpleQueue": [], "win32evtlogutil.__file__.rfind": [], "ssl.Purpose": [], "ssl._TLSMessageType": [], "ssl.SSLContext": ["<builtin>.hasattr"], "ssl._TLSAlertType": [], "ssl._ASN1Object": [], "ssl.TLSVersion": [], "ssl.SSLObject": [], "_ssl": [], "ssl.SSLSocket": ["ssl._sslcopydoc"], "ssl._TLSContentType": [], "contextlib.ContextDecorator": [], "contextlib.AbstractAsyncContextManager": ["abc.abstractmethod"], "contextlib.AsyncExitStack": [], "contextlib._GeneratorContextManagerBase": [], "contextlib.closing": [], "contextlib._GeneratorContextManager": [], "contextlib._AsyncGeneratorContextManager": [], "contextlib.ExitStack": [], "contextlib._BaseExitStack": [], "contextlib.AbstractContextManager": ["abc.abstractmethod"], "contextlib._RedirectStream": [], "contextlib.nullcontext": [], "contextlib.redirect_stderr": [], "contextlib.suppress": [], "contextlib.redirect_stdout": [], "http.client.HTTPMessage": [], "http.client.IncompleteRead": [], "http.client.ResponseNotReady": [], "http.client.HTTPSConnection": [], "http.client.HTTPConnection": [], "http.client.UnknownTransferEncoding": [], "http.client.HTTPException": [], "http.client.LineTooLong": [], "http.client.ImproperConnectionState": [], "http.client.UnknownProtocol": [], "http.client.CannotSendRequest": [], "http.client.HTTPResponse": [], "http": ["enum", "http.HTTPStatus"], "http.client.RemoteDisconnected": [], "email.message": ["io", "email.utils", "email.errors", "email.charset", "email._encoded_words", "re.compile", "email._policybase", "quopri", "email.message.Message", "email.message.EmailMessage", "re", "uu", "email.message.MIMEPart"], "http.client.NotConnected": [], "email.parser": ["email.feedparser", "email.parser.HeaderParser", "io", "email.parser.BytesHeaderParser", "email._policybase", "email.parser.BytesParser", "email.parser.Parser"], "http.client.InvalidURL": [], "http.client.CannotSendHeader": [], "http.client.UnimplementedFileMode": [], "http.client.BadStatusLine": [], "base64.main": ["base64.encode", "getopt", "<builtin>.print", "sys.exit", "base64.decode", "<builtin>.open", "base64.test"], "binascii": [], "urllib.parse._NetlocResultMixinBase": [], "urllib.parse._NetlocResultMixinStr": [], "urllib.parse.Quoter": [], "urllib.parse.SplitResultBytes": [], "urllib.parse.DefragResult": [], "urllib.parse.ParseResult": [], "urllib.parse.DefragResultBytes": [], "<builtin>.frozenset": [], "urllib.parse._ResultMixinStr": [], "urllib.parse.SplitResult": [], "urllib.parse.ParseResultBytes": [], "urllib.parse._fix_result_transcoding": [], "urllib.parse._ResultMixinBytes": [], "urllib.parse._NetlocResultMixinBytes": [], "_hashlib": [], "hashlib.__get_openssl_constructor": ["hashlib.__get_builtin_constructor", "<builtin>.getattr"], "logging.exception": ["logging.error"], "hashlib.__get_builtin_constructor": ["_sha1", "<builtin>.ValueError", "_blake2", "_sha256", "_sha512", "_md5", "_sha3"], "genericpath": ["os", "stat"], "urllib.error.ContentTooShortError": [], "urllib.error.HTTPError": [], "urllib.error.URLError": [], "tempfile._RandomNameSequence": [], "tempfile._TemporaryFileCloser": [], "tempfile.TemporaryDirectory": [], "tempfile._TemporaryFileWrapper": [], "tempfile.SpooledTemporaryFile": [], "_bisect": [], "urllib.response.addclosehook": [], "urllib.response.addinfourl": [], "urllib.response.addbase": [], "urllib.response.addinfo": [], "threading.Condition.notify_all": ["<builtin>.len", "threading.Condition.notify"], "psutil.Process.uids": ["psutil._psbsd.Process.uids", "psutil._pssunos.Process.uids", "psutil._psaix.Process.uids", "psutil._pslinux.Process.uids"], "psutil._common.bytes2human": ["<builtin>.locals", "<builtin>.float", "<builtin>.dict", "<builtin>.reversed", "<builtin>.enumerate"], "psutil.process_iter": ["psutil.pids", "<builtin>.list", "psutil.process_iter.add", "<builtin>.sorted", "<builtin>.set", "psutil.process_iter.remove"], "<builtin>.round": [], "time.strftime": [], "_compat.get_terminal_size": [], "time.localtime": [], "psutil._common": ["threading", "socket", "contextlib", "sys.getfilesystemencoding", "psutil._common.memoize", "__future__", "functools", "psutil._common._WrapNumbers.__init__", "psutil._common._WrapNumbers", "collections", "collections.namedtuple", "psutil._common.AccessDenied", "psutil._common.NicDuplex", "stat", "sys.getfilesystemencodeerrors", "psutil._common.TimeoutExpired", "warnings", "psutil._common.ZombieProcess", "psutil._common.Error", "<builtin>.globals", "enum", "os.getenv", "psutil._common.NoSuchProcess", "psutil._common.BatteryTime", "os", "<builtin>.bool", "sys.platform.startswith", "<builtin>.object"], "<builtin>.sum": [], "__future__._Feature.__init__": [], "__future__._Feature": [], "functools.singledispatchmethod": [], "functools.cached_property": [], "functools.partialmethod": [], "functools.partial": ["reprlib.recursive_repr.decorating_function", "reprlib.recursive_repr"], "functools._HashedSeq": [], "_common.memoize_when_activated": [], "_common.deprecated_method": [], "psutil._assert_pid_not_reused": ["functools.wraps", "_functools.partial"], "_psutil_posix.getpagesize": [], "xml.etree.ElementTree": ["xml.etree.ElementTree.C14NWriterTarget", "xml.etree.ElementTree.XMLPullParser", "contextlib", "_elementtree", "xml.etree.ElementTree.XMLParser", "collections", "contextlib.contextmanager", "xml.etree.ElementTree.ElementTree", "<builtin>.set", "xml.etree.ElementPath", "xml.etree.ElementTree.TreeBuilder", "xml.etree.ElementTree.Element", "re.compile", "warnings", "re", "io", "xml.etree.ElementTree._ListDataStream", "xml.etree.ElementTree.QName", "collections.abc", "xml.etree.ElementTree.ParseError"], "_common.memoize": [], "psutil._psbsd.Process": ["psutil._psbsd.wrap_exceptions", "_common.memoize_when_activated", "collections.namedtuple"], "psutil._pslinux.Connections": [], "resource": [], "ctypes.CDLL.__init__": ["nt._getfullpathname", "ctypes.CDLL.__init__._FuncPtr", "sys.platform.startswith"], "psutil._pslinux.Connections.__init__": [], "psutil._pslinux.set_scputimes_ntuple": ["<builtin>.len", "_common.open_binary", "collections.namedtuple"], "psutil._pslinux.Process": ["ntpath.exists", "psutil._pslinux.wrap_exceptions", "_common.memoize_when_activated", "posixpath.exists"], "glob": ["re", "os", "re.compile", "fnmatch"], "psutil._pslinux.IOPriority": [], "traceback.print_exc": ["sys.exc_info", "traceback.print_exception"], "psutil._pslinux._Ipv6UnsupportedError": [], "ctypes": ["ctypes.LibraryLoader.__init__", "ctypes.PYFUNCTYPE", "ctypes.HRESULT", "ctypes.CFUNCTYPE", "ctypes.c_byte", "ctypes.c_char_p", "ctypes.c_double", "struct", "ctypes.c_float", "ctypes.OleDLL", "ctypes._check_size", "ctypes.CDLL.__init__", "ctypes.py_object", "ctypes.c_char", "ctypes.c_short", "ctypes.c_bool", "ctypes.c_int", "ctypes.c_ushort", "ctypes.PyDLL", "<builtin>.int", "_ctypes", "ctypes.c_wchar", "ctypes.c_long", "ctypes.c_longdouble", "ctypes.LibraryLoader", "ctypes._reset_cache", "ctypes.c_void_p", "ctypes.c_ulong", "<builtin>.Exception", "ctypes.c_longlong", "ctypes.c_wchar_p", "ctypes.c_ubyte", "ctypes.c_uint", "ctypes._endian", "ctypes.c_ulonglong", "ctypes.WinDLL", "os", "ctypes.CDLL"], "psutil._pslinux.RootFsDeviceFinder": [], "_compat.lru_cache": [], "psutil._pswindows.Priority": [], "psutil._pswindows.IOPriority": [], "psutil._pswindows.Process": ["psutil._pswindows.retry_error_partial_copy", "_common.memoize_when_activated", "psutil._pswindows.wrap_exceptions"], "<builtin>.RuntimeError": [], "psutil._pswindows.WindowsService": ["contextlib.contextmanager"], "sys.getwindowsversion": [], "psutil._pssunos.Process": ["_common.memoize_when_activated", "psutil._pssunos.wrap_exceptions", "collections.namedtuple"], "psutil._pssunos.cpu_times": ["_psutil_sunos.per_cpu_times", "<builtin>.zip", "<builtin>.sum"], "psutil._psbsd.cpu_times": ["_psutil_bsd.cpu_times"], "psutil._psaix.cpu_times": ["_psutil_aix.per_cpu_times", "<builtin>.zip", "<builtin>.sum"], "psutil._psaix.per_cpu_times": ["_psutil_aix.per_cpu_times"], "psutil._pssunos.per_cpu_times": ["_psutil_sunos.per_cpu_times"], "psutil._pslinux.cpu_times": ["<builtin>.float", "_common.get_procfs_path", "<builtin>.len", "psutil._pslinux.set_scputimes_ntuple", "_common.open_binary"], "psutil._pswindows.per_cpu_times": ["_psutil_windows.per_cpu_times"], "psutil._pswindows.cpu_times": ["<builtin>.zip", "_psutil_windows.per_cpu_times", "_psutil_windows.cpu_times", "<builtin>.sum"], "_psosx.per_cpu_times": [], "_psosx.cpu_times": [], "psutil._pslinux.per_cpu_times": ["<builtin>.float", "_common.get_procfs_path", "<builtin>.len", "psutil._pslinux.set_scputimes_ntuple", "_common.open_binary"], "psutil._psbsd.per_cpu_times": ["<builtin>.NotImplementedError", "psutil._psbsd.cpu_times", "psutil._psbsd.cpu_count_logical", "_psutil_bsd.per_cpu_times"], "psutil._psaix.Process": ["psutil._psaix.wrap_exceptions", "_common.memoize_when_activated"], "psutil.cpu_times_percent.calculate": ["psutil._cpu_tot_time", "<builtin>.min", "<builtin>.round", "psutil._cpu_times_deltas", "_psosx.scputimes", "<builtin>.max"], "time.sleep": [], "_psosx.sensors_temperatures": [], "_common.shwtemp": [], "psutil.sensors_temperatures.convert": ["<builtin>.float"], "psutil._pslinux.sensors_temperatures": ["_common.debug", "ntpath.dirname", "posixpath.join", "<builtin>.float", "ntpath.join", "posixpath.basename", "<builtin>.dict", "re.compile", "posixpath.dirname", "collections.defaultdict", "_common.cat", "<builtin>.sorted", "<builtin>.set", "ntpath.basename", "_common.bcat"], "collections.defaultdict": [], "psutil._psbsd.sensors_temperatures": ["_psutil_bsd.sensors_cpu_temperature", "_common.shwtemp", "_collections.defaultdict", "<builtin>.range", "psutil._psbsd.cpu_count_logical"], "<builtin>.delattr": [], "argparse.ArgumentParser._parse_known_args": ["argparse.ArgumentParser._parse_known_args.consume_optional", "<builtin>.hasattr", "argparse.ArgumentParser._read_args_from_files", "argparse.ArgumentParser._parse_optional", "<builtin>.min", "argparse._get_action_name", "<builtin>.isinstance", "gettext.gettext", "argparse.ArgumentParser.error", "argparse.ArgumentParser._get_value", "<builtin>.enumerate", "<builtin>.iter", "<builtin>.set", "<builtin>.getattr", "<builtin>.max", "argparse.ArgumentParser._parse_known_args.consume_positionals", "argparse.ArgumentParser._get_positional_actions", "<builtin>.setattr"], "argparse.Namespace.__init__": ["<builtin>.setattr"], "argparse.ArgumentParser.exit": ["argparse.ArgumentParser._print_message", "sys.exit"], "argparse.ArgumentParser.print_usage": ["argparse.ArgumentParser.format_usage", "argparse.ArgumentParser._print_message"], "enum.IntFlag": [], "enum.EnumMeta": [], "enum.IntEnum": [], "enum.Flag": [], "enum._EnumDict": [], "enum.Enum": ["types.DynamicClassAttribute"], "enum.auto": [], "abc.ABC": [], "abc.abstractstaticmethod": [], "_py_abc": ["_py_abc.ABCMeta", "_weakrefset"], "abc.abstractproperty": [], "abc.ABCMeta": [], "abc.abstractclassmethod": [], "abc.abstractmethod": [], "sys.getfilesystemencoding": [], "os._createenviron.check_str": ["<builtin>.TypeError", "<builtin>.type", "<builtin>.isinstance"], "sys.getfilesystemencodeerrors": [], "reprlib.recursive_repr.decorating_function": ["<builtin>.getattr", "<builtin>.set"], "reprlib.recursive_repr": [], "reprlib.Repr.__init__": [], "reprlib.Repr": [], "doctest": ["doctest.UnexpectedException", "doctest.DocTestParser", "__future__", "doctest.register_optionflag", "inspect", "doctest._test", "unittest", "traceback", "linecache", "doctest.DocFileCase", "collections", "difflib", "doctest.DocTestFinder", "doctest._SpoofOut", "collections.namedtuple", "doctest.DocTestCase", "doctest.Example", "sys.exit", "doctest._DocTestSuite", "doctest.DebugRunner", "doctest._TestClass", "doctest._OutputRedirectingPdb", "doctest.SkipDocTestCase", "doctest.OutputChecker", "doctest.DocTest", "re", "io", "doctest.DocTestRunner", "os", "doctest.DocTestFailure"], "_heapq": [], "doctest.testmod": ["inspect.ismodule", "doctest.DocTestFinder.__init__", "doctest.DocTestRunner.merge", "doctest.DocTestRunner.run", "doctest.DocTestFinder.find", "doctest.DebugRunner.run", "doctest.DocTestRunner.__init__", "<builtin>.TypeError", "sys.modules.get", "doctest.DocTestRunner.summarize"], "operator.attrgetter": [], "operator.itemgetter": [], "operator.methodcaller": [], "logging.FileHandler.__init__": ["posixpath.abspath", "logging.FileHandler._open", "ntpath.abspath", "logging.StreamHandler.__init__", "logging.Handler.__init__"], "genericpath._check_arg_types": ["<builtin>.TypeError", "<builtin>.isinstance"], "datetime.timezone.__new__": ["<builtin>.TypeError", "<builtin>.ValueError", "datetime.timezone._create", "<builtin>.isinstance"], "random.Random.seed": ["<builtin>.isinstance", "<builtin>.map", "<builtin>.ord", "<builtin>.len", "<builtin>.super"], "random._test_generator": ["<builtin>.min", "<builtin>.round", "<builtin>.print", "random.Random.betavariate", "random.Random.triangular", "random.Random.normalvariate", "random.Random.gauss", "<builtin>.range", "<builtin>.max", "random.Random.gammavariate", "time.perf_counter", "random.Random.vonmisesvariate", "random.Random.lognormvariate"], "bpytop.strtobool": ["<builtin>.type", "<builtin>.ValueError"], "<builtin>.bool": [], "threading.Event.clear": [], "threading.Thread.start": ["threading.Event.is_set", "<builtin>.RuntimeError", "_thread.start_new_thread", "threading.Event.wait"], "sys.stdin.fileno": [], "bpytop.Box.empty_bg": ["bpytop.Mv.right", "bpytop.Mv.left", "bpytop.Mv.down", "bpytop.Banner.draw"], "bpytop.Box.draw_clock": ["<builtin>.hasattr", "bpytop.Draw.buffer", "time.tzset", "bpytop.Mv.to", "time.strftime", "psutil.sensors_battery", "<builtin>.len", "bpytop.Draw.out"], "bpytop.Box.draw_update_ms": ["<builtin>.hasattr", "bpytop.Draw.buffer", "bpytop.Mv.to", "bpytop.Draw.clear", "psutil.sensors_battery", "<builtin>.len", "<builtin>.range", "bpytop.Draw.out"], "bpytop.Theme._load_theme": ["bpytop.Draw.now", "bpytop.Theme._load_file", "bpytop.Color.__init__", "<builtin>.list", "<builtin>.range", "<builtin>.getattr", "bpytop.Color.fg", "logging.Logger.warning", "<builtin>.setattr"], "bpytop.Theme.refresh": ["<builtin>.str", "logging.Logger.exception"], "<builtin>.min": [], "bpytop.Key.last": [], "bpytop.Key.has_key": ["<builtin>.bool"], "bpytop.Timer.finish": ["time.time", "bpytop.Key.break_wait"], "bpytop.create_box": ["bpytop.Mv.to", "<builtin>.range", "bpytop.Mv.right"], "bpytop.Draw.clear": [], "bpytop.Init.draw_bg": ["bpytop.Draw.buffer", "bpytop.Graph.__init__", "bpytop.Mv.to", "<builtin>.range", "bpytop.Draw.out", "random.Random.randint", "time.sleep"], "bpytop.Banner.draw": ["bpytop.Draw.out", "bpytop.Mv.to", "<builtin>.enumerate"], "bpytop.Mv.to": [], "bpytop.Graph.__init__": ["<builtin>.min", "<builtin>.isinstance", "<builtin>.int", "<builtin>.len", "<builtin>.range", "bpytop.min_max", "bpytop.Graph._create"], "random.Random.randint": ["random.Random.randrange"], "shutil.which": ["ntpath.dirname", "posixpath.join", "<builtin>.isinstance", "ntpath.join", "posixpath.normcase", "<builtin>.any", "posixpath.dirname", "ntpath.normcase", "shutil._access_check", "<builtin>.set"], "threading.Condition.wait": ["threading.Condition._release_save", "threading.Condition._acquire_restore", "<builtin>.RuntimeError", "threading.Condition._is_owned", "_thread.allocate_lock"], "bpytop.Key.stop": ["threading.Thread.join", "threading._DummyThread.join", "threading.Thread.is_alive", "threading._DummyThread.is_alive"], "bpytop.Collector.stop": ["threading.Thread.join", "threading._DummyThread.is_alive", "threading._DummyThread.join", "threading.Thread.is_alive", "threading.Event.set"], "_thread.interrupt_main": [], "bpytop.Timer.left": ["time.time", "bpytop.Timer.stamp"], "bpytop.Timer.not_zero": ["time.time"], "bpytop.process_keys": ["bpytop.Menu.options", "bpytop.Draw.clear", "<builtin>.len", "bpytop.Menu.main", "bpytop.Term.refresh", "bpytop.Key.has_key", "bpytop.Key.get_mouse", "logging.Logger.exception", "bpytop.NetCollector.switch", "bpytop.ProcBox.selector", "bpytop.ProcCollector.sorting", "threading.Event.wait", "bpytop.Collector.collect", "logging.Logger.error", "bpytop.clean_quit", "bpytop.Key.get", "bpytop.Menu.help", "bpytop.Box.draw_update_ms", "<builtin>.list", "psutil.pid_exists"], "bpytop.Timer.stamp": ["time.time"], "bpytop.Key.input_wait": ["threading.Event.is_set", "bpytop.Draw.now", "threading.Event.clear", "threading.Event.wait"], "typing._tp_cache": ["functools.lru_cache.decorating_function", "functools._lru_cache_wrapper.wrapper", "functools.singledispatch.wrapper", "_functools.partial", "functools.wraps", "functools.lru_cache"], "typing._type_check": ["<builtin>.isinstance", "<builtin>.callable", "typing.ForwardRef.__init__", "<builtin>.type", "<builtin>.TypeError"], "types.DynamicClassAttribute": [], "types._g": [], "types._cell_factory": [], "types._GeneratorWrapper": [], "types._C": [], "typing._collect_type_vars": ["<builtin>.tuple", "<builtin>.isinstance"], "_functools._lru_cache_wrapper": [], "sre_compile.isstring": ["<builtin>.isinstance"], "sre_compile.dis": ["<builtin>.len", "sre_compile.dis.dis_", "<builtin>.set", "<builtin>.str"], "_sre.compile": [], "sre_compile._code": ["sre_compile._compile", "sre_compile._compile_info"], "sre_parse.parse": ["sre_parse.SubPattern.dump", "sre_parse.fix_flags", "sre_parse.Tokenizer.error", "sre_parse.State.__init__", "sre_parse._parse_sub", "sre_parse.Tokenizer.__init__", "sre_parse.Tokenizer.seek"], "functools._make_key": ["functools._HashedSeq.__init__"], "sre_constants": ["sre_constants.error", "sre_constants.dump", "<builtin>.print", "sre_constants._makecodes", "<builtin>.open", "sre_constants._NamedIntConstant"], "copyreg.constructor": ["<builtin>.callable", "<builtin>.TypeError"], "<builtin>.ord": [], "sre_parse.State": [], "sre_parse.SubPattern": [], "sre_parse.Tokenizer": [], "sre_parse.Verbose": [], "functools.singledispatch.dispatch": ["_collections_abc.MutableMapping.clear", "_abc.get_cache_token", "_py_abc.get_cache_token", "collections.ChainMap.clear", "functools._find_impl"], "_psutil_windows.cpu_count_logical": [], "_psutil_windows.cpu_count_cores": [], "_psutil_bsd.cpu_topology": [], "_psutil_bsd.cpu_count_logical": [], "_psutil_sunos.cpu_count_cores": [], "_common.get_procfs_path": [], "_common.open_binary": [], "_common.open_text": [], "subprocess.Popen.communicate": ["asyncio.windows_utils.PipeHandle.close", "_io._IOBase.close", "socket.SocketIO.close", "http.client.HTTPResponse.read", "bz2.BZ2File.read", "http.client.HTTPResponse.close", "gzip.GzipFile.close", "time.monotonic", "subprocess.Popen.wait", "subprocess.Popen._wait", "lzma.LZMAFile.read", "subprocess.Popen._communicate", "sys.stdout.close", "_compression.DecompressReader.read", "zipfile.ZipExtFile.read", "sys.stdout.read", "gzip._GzipReader.read", "gzip.GzipFile.read", "_io._IOBase.read", "_compression.DecompressReader.close", "<builtin>.min", "bz2.BZ2File.close", "zipfile._ZipWriteFile.close", "subprocess.Popen._stdin_write", "zipfile.ZipExtFile.close", "<builtin>.ValueError", "subprocess.Popen._remaining_time", "lzma.LZMAFile.close"], "subprocess.Popen.__init__": ["<builtin>.hasattr", "io.TextIOWrapper", "<builtin>.isinstance", "subprocess.Popen._execute_child", "warnings.warn", "<builtin>.ValueError", "subprocess._cleanup", "subprocess.Popen._get_handles", "<builtin>.TypeError", "<builtin>.bool", "<builtin>.filter", "io.open", "msvcrt.open_osfhandle"], "selectors.SelectSelector": [], "selectors.PollSelector": [], "selectors.EpollSelector": [], "selectors.DevpollSelector": [], "selectors._BaseSelectorImpl": [], "selectors._SelectorMapping": [], "selectors._PollLikeSelector": [], "selectors.KqueueSelector": [], "selectors.BaseSelector": ["abc.abstractmethod"], "tokenize": ["tokenize.main", "io", "collections", "tokenize.maybe", "tokenize._all_string_prefixes", "tokenize.TokenInfo", "token", "<builtin>.map", "tokenize.TokenError", "codecs", "re.compile", "tokenize.Untokenizer", "<builtin>.sorted", "<builtin>.set", "tokenize.group", "re", "tokenize.StopTokenizing", "tokenize.any"], "operator.itemgetter.__init__": [], "_weakref.ref": [], "_weakrefset.WeakSet.add": ["_weakrefset.WeakSet._commit_removals", "_weakref.ref"], "_weakrefset.WeakSet._commit_removals": [], "weakref.KeyedRef.__init__": ["<builtin>.super"], "_thread._set_sentinel": [], "_thread.get_ident": [], "_thread.get_native_id": [], "threading._newname": [], "threading._make_invoke_excepthook": ["<builtin>.RuntimeError"], "threading.current_thread": ["_thread.get_ident", "threading._DummyThread.__init__"], "sys.path.endswith": [], "sys.base_prefix.endswith": [], "locale._print_locale": ["locale.setlocale", "<builtin>.print", "locale.getlocale", "locale.getdefaultlocale", "locale.resetlocale", "locale._print_locale._init_categories"], "encodings.aliases": [], "locale._test": ["locale.setlocale", "locale.format_string", "<builtin>.print", "locale.atof", "locale.atoi", "locale.str"], "encodings": ["codecs", "encodings.CodecRegistryError"], "_collections.deque": [], "_compression.BaseStream": [], "_compression.DecompressReader": [], "logging.Filterer.filter": ["<builtin>.hasattr"], "logging.Logger.callHandlers": ["logging.Handler.handle", "sys.stderr.write", "logging.NullHandler.handle"], "traceback.print_stack": ["traceback.print_list", "sys._getframe", "traceback.extract_stack"], "logging.<lambda1>": ["sys._getframe"], "io.StringIO": [], "logging.LogRecord.__init__": ["time.time", "<builtin>.hasattr", "posixpath.basename", "<builtin>.isinstance", "<builtin>.int", "ntpath.splitext", "<builtin>.len", "posixpath.splitext", "logging.getLevelName", "ntpath.basename", "threading.current_thread", "sys.modules.get"], "<builtin>.KeyError": [], "sys.stdin.buffer.replace": [], "win32evtlogutil.__file__.replace": [], "logging.NullHandler.createLock": [], "logging.Filterer.__init__": [], "logging.Handler.createLock": ["threading.RLock", "logging._register_at_fork_reinit_lock"], "logging._addHandlerRef": ["logging._releaseLock", "weakref.ref", "logging._acquireLock"], "weakref.finalize._Info": [], "warnings._setoption": ["warnings._getcategory", "<builtin>.int", "warnings._getaction", "<builtin>.len", "warnings.filterwarnings", "re.escape", "sys.warnoptions.split", "re"], "<builtin>.issubclass": [], "warnings._add_filter": ["_warnings.filters.insert", "_warnings._filters_mutated", "_warnings.filters.append", "_warnings.filters.remove"], "argparse.HelpFormatter._Section.__init__": [], "shutil.get_terminal_size": ["<builtin>.int", "sys.__stdout__.fileno"], "<builtin>.max": [], "argparse._ActionsContainer._get_handler": ["<builtin>.getattr", "<builtin>.ValueError", "gettext.gettext"], "logging.PlaceHolder.__init__": [], "gettext.translation": ["posixpath.abspath", "gettext.find", "warnings.catch_warnings.__init__", "warnings.warn", "<builtin>.FileNotFoundError", "warnings", "ntpath.abspath", "copy", "<builtin>.open", "warnings.filterwarnings", "gettext.NullTranslations.__init__"], "gettext.NullTranslations.gettext": [], "argparse._MutuallyExclusiveGroup.__init__": ["<builtin>.super"], "<builtin>.next": [], "<builtin>.iter": [], "subprocess.CalledProcessError.__init__": [], "subprocess.CompletedProcess.__init__": [], "pprint.PrettyPrinter": [], "pprint._perfcheck": ["<builtin>.print", "pprint._safe_repr", "pprint.PrettyPrinter.__init__", "pprint.PrettyPrinter.pformat", "time.perf_counter"], "pprint._safe_key": [], "argparse.ArgumentParser.format_help": ["argparse.HelpFormatter.end_section", "argparse.HelpFormatter.format_help", "argparse.HelpFormatter.add_usage", "argparse.HelpFormatter.add_arguments", "argparse.ArgumentParser._get_formatter", "argparse.HelpFormatter.start_section", "argparse.HelpFormatter.add_text"], "argparse.ArgumentParser._print_message": ["sys.stderr.write", "sys.stdout.write"], "codecs.Codec": [], "codecs.IncrementalEncoder": [], "codecs.IncrementalDecoder": [], "codecs.EncodedFile": ["codecs.StreamRecoder.__init__"], "codecs.BufferedIncrementalDecoder": [], "<builtin>.SystemError": [], "codecs.StreamWriter": [], "codecs.StreamReader": [], "codecs.StreamRecoder": [], "codecs.CodecInfo": [], "codecs.BufferedIncrementalEncoder": [], "codecs.StreamReaderWriter": [], "pickle._Unpickler.__init__": ["<builtin>.iter"], "pickle._Unpickler.load": ["<builtin>.hasattr", "pickle._Unframer.read", "pickle._Unframer.__init__", "<builtin>.isinstance"], "ssl._sslcopydoc": ["<builtin>.getattr"], "http.HTTPStatus": [], "email.utils": ["socket", "random", "email.charset", "re.compile", "os", "urllib.parse", "email._parseaddr", "re", "datetime"], "email.errors": ["email.errors.UndecodableBytesDefect", "email.errors.ObsoleteHeaderDefect", "email.errors.CharsetError", "email.errors.NonASCIILocalPartDefect", "email.errors.MultipartInvariantViolationDefect", "email.errors.StartBoundaryNotFoundDefect", "email.errors.HeaderMissingRequiredValue", "email.errors.MessageError", "email.errors.BoundaryError", "email.errors.FirstHeaderLineIsContinuationDefect", "email.errors.NoBoundaryInMultipartDefect", "email.errors.MisplacedEnvelopeHeaderDefect", "email.errors.NonPrintableDefect", "email.errors.InvalidBase64PaddingDefect", "email.errors.InvalidBase64CharactersDefect", "email.errors.InvalidMultipartContentTransferEncodingDefect", "email.errors.InvalidBase64LengthDefect", "email.errors.MessageParseError", "email.errors.MessageDefect", "email.errors.InvalidHeaderDefect", "email.errors.CloseBoundaryNotFoundDefect", "email.errors.HeaderDefect", "email.errors.HeaderParseError", "email.errors.MissingHeaderBodySeparatorDefect", "email.errors.MultipartConversionError"], "email.charset": ["email.encoders", "email.errors", "email.base64mime", "email.charset.Charset", "email.quoprimime", "functools"], "email._encoded_words": ["functools", "email.errors", "email._encoded_words._QByteMap", "re.compile", "<builtin>.ord", "base64", "string", "re", "binascii"], "email._policybase": ["abc", "email.utils", "email._policybase.Policy", "email.charset", "email._policybase._PolicyBase.__init__", "email._policybase._PolicyBase", "email._policybase.Compat32", "email.header"], "quopri": ["quopri.main", "binascii"], "email.message.Message": ["email.iterators"], "email.message.EmailMessage": [], "uu": ["os", "uu.Error", "binascii", "uu.test"], "email.message.MIMEPart": [], "email.feedparser": ["email.feedparser.BufferedSubFile", "io", "collections", "email.errors", "re.compile", "email._policybase", "email.feedparser.FeedParser", "<builtin>.object", "re", "email.feedparser.BytesFeedParser"], "email.parser.HeaderParser": [], "email.parser.BytesHeaderParser": [], "email.parser.BytesParser": [], "email.parser.Parser": [], "base64.encode": ["<builtin>.len", "sys.stdout.buffer.write", "sys.stdin.buffer.read"], "getopt": ["gettext", "getopt.getopt", "<builtin>.print", "os", "getopt.GetoptError"], "sys.exit": [], "base64.decode": ["sys.stdin.buffer.readline", "sys.stdout.buffer.write"], "base64.test": ["<builtin>.print", "base64.decodebytes", "base64.encodebytes", "<builtin>.repr"], "logging.error": ["<builtin>.len", "logging.basicConfig", "logging.Logger.error"], "_sha1": [], "_blake2": [], "_sha256": [], "_md5": [], "_sha3": [], "threading.Condition.notify": ["threading.Condition._is_owned", "<builtin>.RuntimeError", "_collections.deque", "itertools.islice"], "psutil._psbsd.Process.uids": ["psutil._psbsd.Process.oneshot", "_common.puids"], "psutil._pssunos.Process.uids": ["psutil._pssunos.Process._proc_basic_info", "_common.puids", "psutil._pssunos.Process._proc_cred"], "psutil._psaix.Process.uids": ["psutil._psaix.Process._proc_cred", "_common.puids"], "psutil._pslinux.Process.uids": ["<builtin>.int", "psutil._pslinux.Process._read_status_file", "_common.puids"], "<builtin>.locals": [], "<builtin>.float": [], "psutil.pids": ["_psosx.pids", "psutil._psaix.pids", "psutil._psbsd.pids", "<builtin>.sorted", "psutil._pslinux.pids", "psutil._pssunos.pids"], "psutil.process_iter.add": ["psutil.Process.__init__", "psutil.Process.as_dict"], "psutil.process_iter.remove": [], "psutil._common.memoize": ["functools.wraps", "_functools.partial"], "psutil._common._WrapNumbers.__init__": [], "psutil._common._WrapNumbers": [], "psutil._common.AccessDenied": [], "psutil._common.NicDuplex": [], "psutil._common.TimeoutExpired": [], "psutil._common.ZombieProcess": [], "psutil._common.Error": [], "os.getenv": [], "psutil._common.NoSuchProcess": [], "psutil._common.BatteryTime": [], "xml.etree.ElementTree.C14NWriterTarget": [], "xml.etree.ElementTree.XMLPullParser": [], "_elementtree": [], "xml.etree.ElementTree.XMLParser": [], "xml.etree.ElementTree.ElementTree": [], "xml.etree.ElementPath": ["re", "xml.etree.ElementPath._SelectorContext", "re.compile"], "xml.etree.ElementTree.TreeBuilder": [], "xml.etree.ElementTree.Element": [], "xml.etree.ElementTree._ListDataStream": [], "xml.etree.ElementTree.QName": [], "xml.etree.ElementTree.ParseError": [], "psutil._psbsd.wrap_exceptions": ["functools.wraps", "_functools.partial"], "nt._getfullpathname": [], "ctypes.CDLL.__init__._FuncPtr": [], "psutil._pslinux.wrap_exceptions": ["functools.wraps", "_functools.partial"], "traceback.print_exception": ["traceback.TracebackException.__init__", "<builtin>.print", "<builtin>.type", "traceback.TracebackException.format"], "ctypes.LibraryLoader.__init__": [], "ctypes.PYFUNCTYPE": ["ctypes.PYFUNCTYPE.CFunctionType"], "ctypes.HRESULT": [], "ctypes.CFUNCTYPE": ["ctypes.CFUNCTYPE.CFunctionType", "<builtin>.ValueError"], "ctypes.c_byte": [], "ctypes.c_char_p": [], "ctypes.c_double": [], "ctypes.c_float": [], "ctypes.OleDLL": [], "ctypes._check_size": ["<builtin>.SystemError", "struct"], "ctypes.py_object": [], "ctypes.c_char": [], "ctypes.c_short": [], "ctypes.c_bool": [], "ctypes.c_int": [], "ctypes.c_ushort": [], "ctypes.PyDLL": [], "_ctypes": [], "ctypes.c_wchar": [], "ctypes.c_long": [], "ctypes.c_longdouble": [], "ctypes.LibraryLoader": [], "ctypes._reset_cache": [], "ctypes.c_void_p": [], "ctypes.c_ulong": [], "<builtin>.Exception": [], "ctypes.c_longlong": [], "ctypes.c_wchar_p": [], "ctypes.c_ubyte": [], "ctypes.c_uint": [], "ctypes._endian": ["ctypes._endian.BigEndianStructure", "ctypes", "ctypes._endian.LittleEndianStructure", "<builtin>.type", "<builtin>.RuntimeError", "ctypes._endian._swapped_meta"], "ctypes.c_ulonglong": [], "ctypes.WinDLL": [], "ctypes.CDLL": [], "psutil._pswindows.retry_error_partial_copy": ["functools.wraps", "_functools.partial"], "psutil._pswindows.wrap_exceptions": ["functools.wraps", "_functools.partial"], "psutil._pssunos.wrap_exceptions": ["functools.wraps", "_functools.partial"], "_psutil_sunos.per_cpu_times": [], "_psutil_bsd.cpu_times": [], "_psutil_aix.per_cpu_times": [], "_psutil_windows.per_cpu_times": [], "_psutil_windows.cpu_times": [], "_psutil_bsd.per_cpu_times": [], "psutil._psaix.wrap_exceptions": ["functools.wraps", "_functools.partial"], "psutil._cpu_tot_time": ["<builtin>.getattr", "<builtin>.sum"], "psutil._cpu_times_deltas": ["<builtin>.getattr", "_psosx.scputimes", "<builtin>.max"], "_psosx.scputimes": [], "_common.debug": [], "_common.cat": [], "_common.bcat": [], "_psutil_bsd.sensors_cpu_temperature": [], "_collections.defaultdict": [], "argparse.ArgumentParser._parse_known_args.consume_optional": ["argparse.ArgumentParser._parse_known_args.take_action", "argparse.ArgumentError.__init__", "gettext.gettext", "argparse.ArgumentParser._match_argument"], "argparse.ArgumentParser._read_args_from_files": ["argparse.ArgumentParser._read_args_from_files", "argparse.ArgumentParser.error", "<builtin>.str", "<builtin>.open", "argparse.ArgumentParser.convert_arg_line_to_args", "sys.exc_info"], "argparse.ArgumentParser._parse_optional": ["<builtin>.len", "argparse.ArgumentParser._get_option_tuples", "argparse.ArgumentParser.error", "gettext.gettext"], "argparse._get_action_name": [], "argparse.ArgumentParser._get_value": ["gettext.gettext", "<builtin>.callable", "<builtin>.str", "argparse._ActionsContainer._registry_get", "<builtin>.getattr", "sys.exc_info", "<builtin>.repr", "argparse.ArgumentError.__init__"], "argparse.ArgumentParser._parse_known_args.consume_positionals": ["<builtin>.len", "argparse.ArgumentParser._parse_known_args.take_action", "argparse.ArgumentParser._match_arguments_partial", "<builtin>.zip"], "argparse.ArgumentParser._get_positional_actions": [], "argparse.ArgumentParser.format_usage": ["argparse.HelpFormatter.format_help", "argparse.HelpFormatter.add_usage", "argparse.ArgumentParser._get_formatter"], "_py_abc.ABCMeta": [], "doctest.UnexpectedException": [], "doctest.DocTestParser": ["re.compile"], "doctest.register_optionflag": ["<builtin>.len"], "inspect": ["<builtin>.hasattr", "abc", "inspect._void", "<builtin>.type", "functools", "linecache", "inspect._ParameterKind", "inspect.BoundArguments", "types", "collections", "collections.namedtuple", "inspect._main", "dis", "inspect.EndOfBlock", "inspect._empty", "tokenize", "warnings", "importlib.machinery", "re", "<builtin>.globals", "operator", "enum", "inspect.BlockFinder", "collections.abc", "os", "inspect.Parameter", "inspect.Signature", "<builtin>.object", "token"], "doctest._test": ["argparse", "<builtin>.__import__", "ntpath.split", "argparse._ActionsContainer.add_argument", "posixpath.split", "sys.path.insert", "argparse.ArgumentParser.parse_args", "doctest.testmod", "doctest.testfile", "argparse.ArgumentParser.__init__"], "unittest": ["unittest.main", "unittest.async_case", "unittest.suite", "unittest.result", "unittest.case", "unittest.runner", "unittest.loader", "unittest.signals"], "doctest.DocFileCase": [], "difflib": ["difflib.HtmlDiff", "collections", "difflib._test", "difflib.SequenceMatcher", "collections.namedtuple", "heapq", "difflib.Differ", "re"], "doctest.DocTestFinder": [], "doctest._SpoofOut": [], "doctest.DocTestCase": [], "doctest.Example": [], "doctest._DocTestSuite": [], "doctest.DebugRunner": [], "doctest._TestClass": [], "doctest._OutputRedirectingPdb": [], "doctest.SkipDocTestCase": [], "doctest.OutputChecker": [], "doctest.DocTest": [], "doctest.DocTestRunner": ["re.compile"], "doctest.DocTestFailure": [], "inspect.ismodule": ["<builtin>.isinstance"], "doctest.DocTestFinder.__init__": [], "doctest.DocTestRunner.merge": [], "doctest.DocTestRunner.run": ["doctest.DocTestRunner.__run", "doctest._extract_future_flags", "sys.stdout.encoding.lower", "doctest._OutputRedirectingPdb.__init__", "sys.settrace", "pdb.Pdb.reset", "sys.gettrace"], "doctest.DocTestFinder.find": ["linecache.getlines", "<builtin>.type", "<builtin>.ValueError", "inspect.getsourcefile", "<builtin>.getattr", "inspect.getfile", "inspect.getmodule", "doctest.DocTestFinder._find"], "doctest.DebugRunner.run": ["doctest.DebugRunner.run", "doctest.DocTestRunner.run"], "doctest.DocTestRunner.__init__": ["_io.StringIO.__init__", "io.StringIO.__init__"], "sys.modules.get": [], "doctest.DocTestRunner.summarize": ["<builtin>.len", "<builtin>.print"], "posixpath.abspath": ["posixpath.isabs", "posixpath.normpath", "posixpath.join", "<builtin>.isinstance"], "logging.FileHandler._open": ["<builtin>.open"], "ntpath.abspath": ["nt._getfullpathname", "ntpath._abspath_fallback", "ntpath.normpath"], "logging.StreamHandler.__init__": ["logging.Handler.__init__"], "random.Random.betavariate": ["random.Random.gammavariate"], "random.Random.triangular": [], "random.Random.normalvariate": [], "random.Random.gauss": [], "random.Random.gammavariate": ["<builtin>.ValueError"], "time.perf_counter": [], "random.Random.vonmisesvariate": [], "random.Random.lognormvariate": ["random.Random.normalvariate"], "threading.Event.is_set": [], "_thread.start_new_thread": [], "time.tzset": [], "psutil.sensors_battery": ["psutil._pslinux.sensors_battery", "psutil._psbsd.sensors_battery", "_psosx.sensors_battery", "psutil._pswindows.sensors_battery"], "bpytop.Theme._load_file": ["<builtin>.str", "logging.Logger.exception", "<builtin>.open"], "bpytop.Key.break_wait": ["time.sleep", "threading.Event.clear", "threading.Event.set"], "bpytop.min_max": ["<builtin>.min", "<builtin>.max"], "bpytop.Graph._create": ["bpytop.Mv.left", "bpytop.Mv.down", "<builtin>.float", "<builtin>.round", "<builtin>.len", "<builtin>.range", "<builtin>.bool"], "random.Random.randrange": ["<builtin>.ValueError", "random.Random._randbelow_with_getrandbits"], "<builtin>.any": [], "shutil._access_check": ["ntpath.exists", "ntpath.isdir", "posixpath.isdir", "posixpath.exists"], "threading.Condition._release_save": [], "threading.Condition._acquire_restore": [], "threading.Condition._is_owned": [], "threading.Thread.join": ["threading.Event.is_set", "<builtin>.RuntimeError", "threading.current_thread", "<builtin>.max", "threading.Thread._wait_for_tstate_lock"], "threading._DummyThread.join": [], "threading.Thread.is_alive": ["threading.Event.is_set", "threading.Thread._wait_for_tstate_lock"], "threading._DummyThread.is_alive": ["threading.Event.is_set"], "bpytop.Menu.options": ["bpytop.Draw.now", "bpytop.Mv.down", "bpytop.Timer.left", "bpytop.Draw.saved_buffer", "bpytop.Banner.draw", "<builtin>.round", "<builtin>.str", "bpytop.Timer.not_zero", "<builtin>.type", "bpytop.Draw.clear", "logging.Logger.info", "<builtin>.len", "<builtin>.getattr", "bpytop.Key.input_wait", "bpytop.Mv.left", "logging.Logger.setLevel", "bpytop.Mv.to", "bpytop.Term.refresh", "bpytop.Fx.uncolor", "<builtin>.enumerate", "<builtin>.max", "bpytop.Key.get_mouse", "bpytop.Mv.right", "<builtin>.isinstance", "<builtin>.int", "bpytop.Theme.refresh", "bpytop.ProcCollector.sorting", "bpytop.CpuCollector.get_sensors", "bpytop.Timer.finish", "logging.Logger.warning", "threading.Event.wait", "bpytop.create_box", "<builtin>.setattr", "<builtin>.min", "bpytop.Collector.collect", "bpytop.clean_quit", "bpytop.Key.get", "<builtin>.map", "bpytop.Box.draw_update_ms", "<builtin>.list", "<builtin>.range", "bpytop.Timer.stamp"], "bpytop.Menu.main": ["bpytop.Draw.now", "bpytop.Mv.down", "bpytop.Timer.left", "bpytop.Menu.options", "bpytop.Draw.saved_buffer", "bpytop.Banner.draw", "bpytop.Timer.not_zero", "<builtin>.len", "bpytop.Key.input_wait", "bpytop.Mv.left", "bpytop.Mv.to", "bpytop.Fx.uncolor", "bpytop.Key.mouse_moved", "bpytop.Key.get_mouse", "bpytop.Mv.right", "logging.Logger.warning", "threading.Event.wait", "bpytop.Collector.collect", "bpytop.clean_quit", "bpytop.Key.get", "bpytop.Menu.help", "<builtin>.list", "bpytop.Timer.stamp"], "bpytop.Key.get_mouse": ["threading.Event.is_set", "threading.Event.clear"], "bpytop.NetCollector.switch": ["<builtin>.len", "bpytop.Collector.collect"], "bpytop.ProcBox.selector": ["<builtin>.round", "bpytop.Collector.collect"], "bpytop.ProcCollector.sorting": ["<builtin>.len", "bpytop.Collector.collect"], "bpytop.Key.get": [], "bpytop.Menu.help": ["bpytop.Draw.now", "bpytop.Mv.down", "bpytop.Timer.left", "bpytop.Draw.saved_buffer", "bpytop.Banner.draw", "bpytop.Timer.not_zero", "<builtin>.len", "bpytop.Key.input_wait", "bpytop.Mv.left", "bpytop.Mv.to", "bpytop.Fx.uncolor", "<builtin>.enumerate", "bpytop.Key.get_mouse", "bpytop.Mv.right", "logging.Logger.warning", "threading.Event.wait", "bpytop.create_box", "bpytop.Collector.collect", "bpytop.clean_quit", "bpytop.Key.get", "<builtin>.range", "bpytop.Timer.stamp"], "psutil.pid_exists": ["_psosx.pid_exists", "psutil._psbsd.pid_exists", "psutil.pids", "psutil._pslinux.pid_exists", "psutil._psaix.pid_exists", "psutil._pssunos.pid_exists"], "typing.ForwardRef.__init__": ["<builtin>.TypeError", "<builtin>.SyntaxError", "<builtin>.compile", "<builtin>.isinstance"], "sre_compile.dis.dis_": ["sre_compile.dis.dis_", "sre_compile.dis.dis_.print_", "<builtin>.str", "sre_compile.dis.dis_.print_2", "<builtin>.map", "sre_compile._hex_code", "<builtin>.ValueError", "<builtin>.list", "<builtin>.range", "<builtin>.chr", "<builtin>.bin"], "sre_compile._compile": ["_sre.ascii_tolower", "sre_compile._optimize_charset", "_sre.unicode_tolower", "sre_compile._combine_flags", "sre_compile._compile_charset", "_sre.unicode_iscased", "sre_constants.error.__init__", "_sre.ascii_iscased", "sre_compile._compile", "sre_compile._simple"], "sre_compile._compile_info": ["<builtin>.min", "sre_compile._get_charset_prefix", "sre_compile._generate_overlap_table", "sre_compile._optimize_charset", "<builtin>.len", "sre_compile._get_literal_prefix", "sre_compile._compile_charset", "sre_parse.SubPattern.getwidth"], "sre_parse.SubPattern.dump": ["<builtin>.str", "<builtin>.print", "<builtin>.enumerate", "<builtin>.isinstance"], "sre_parse.fix_flags": ["<builtin>.ValueError", "<builtin>.isinstance"], "sre_parse.Tokenizer.error": ["sre_parse.Tokenizer.tell", "sre_parse.Tokenizer.error"], "sre_parse.State.__init__": [], "sre_parse._parse_sub": ["sre_parse.Tokenizer.tell", "<builtin>.len", "sre_parse.Tokenizer.match", "sre_parse.SubPattern.__init__", "sre_parse.SubPattern.append", "sre_parse._parse"], "sre_parse.Tokenizer.__init__": ["<builtin>.str", "sre_parse.Tokenizer.__next", "<builtin>.isinstance"], "sre_parse.Tokenizer.seek": ["sre_parse.Tokenizer.__next"], "functools._HashedSeq.__init__": [], "sre_constants.error": [], "sre_constants.dump": ["<builtin>.sorted"], "sre_constants._makecodes": ["<builtin>.globals", "<builtin>.enumerate"], "sre_constants._NamedIntConstant": [], "_collections_abc.MutableMapping.clear": ["collections.ChainMap.popitem", "weakref.WeakValueDictionary.popitem", "weakref.WeakKeyDictionary.popitem", "_collections_abc.MutableMapping.popitem"], "_abc.get_cache_token": [], "_py_abc.get_cache_token": [], "collections.ChainMap.clear": [], "functools._find_impl": ["functools._compose_mro", "<builtin>.issubclass", "<builtin>.RuntimeError"], "asyncio.windows_utils.PipeHandle.close": [], "_io._IOBase.close": [], "socket.SocketIO.close": ["_compression.DecompressReader.close", "_io._IOBase.close", "socket.SocketIO.close", "socket.socket._decref_socketios", "_io._RawIOBase.close"], "http.client.HTTPResponse.read": ["<builtin>.memoryview", "http.client.HTTPResponse._close_conn", "<builtin>.bytearray", "http.client.HTTPResponse._readall_chunked", "http.client.HTTPResponse._safe_read", "http.client.HTTPResponse.readinto"], "bz2.BZ2File.read": ["_compression.BaseStream._check_can_read"], "http.client.HTTPResponse.close": ["http.client.HTTPResponse._close_conn", "<builtin>.super"], "gzip.GzipFile.close": ["gzip.GzipFile.write", "sys.base_prefix.write", "gzip.write32u", "sys.stdout.buffer.write", "sys.stdin.buffer.write", "sys.path.write"], "time.monotonic": [], "subprocess.Popen.wait": ["subprocess.Popen._remaining_time", "<builtin>.min", "subprocess.Popen._wait", "time.monotonic"], "subprocess.Popen._wait": ["subprocess.Popen._try_wait", "time.monotonic", "<builtin>.min", "<builtin>.int", "_winapi.GetExitCodeProcess", "subprocess.Popen._handle_exitstatus", "subprocess.Popen._remaining_time", "_winapi.WaitForSingleObject", "time.sleep", "subprocess.TimeoutExpired.__init__"], "lzma.LZMAFile.read": ["_compression.BaseStream._check_can_read"], "subprocess.Popen._communicate": ["<builtin>.hasattr", "threading.Thread.join", "asyncio.windows_utils.PipeHandle.close", "_io._IOBase.close", "selectors.SelectSelector.__init__", "socket.SocketIO.close", "<builtin>.len", "selectors._PollLikeSelector.__init__", "subprocess.Popen._translate_newlines", "threading.Thread.start", "http.client.HTTPResponse.close", "gzip.GzipFile.close", "http.client.HTTPResponse.flush", "subprocess.Popen.wait", "sys.stdout.close", "<builtin>.memoryview", "<builtin>.RuntimeError", "gzip.GzipFile.flush", "sys.stdout.flush", "threading.Thread.__init__", "_compression.DecompressReader.close", "bz2.BZ2File.close", "zipfile._ZipWriteFile.close", "subprocess.Popen._save_input", "threading._DummyThread.join", "subprocess.Popen._stdin_write", "zipfile.ZipExtFile.close", "_io._BufferedIOBase.flush", "threading.Thread.is_alive", "subprocess.Popen._check_timeout", "subprocess.Popen._remaining_time", "_io._IOBase.flush", "subprocess.TimeoutExpired.__init__", "lzma.LZMAFile.close", "threading._DummyThread.is_alive"], "sys.stdout.close": [], "_compression.DecompressReader.read": ["<builtin>.len", "sys.path.read", "_io._RawIOBase.readall", "<builtin>.EOFError", "sys.base_prefix.read"], "zipfile.ZipExtFile.read": ["zipfile.ZipExtFile._read1", "<builtin>.len"], "sys.stdout.read": [], "gzip._GzipReader.read": ["sys.path.prepend", "gzip._GzipReader._read_gzip_header", "sys.base_prefix.prepend", "<builtin>.len", "sys.path.read", "gzip._GzipReader._add_read_data", "gzip._GzipReader._read_eof", "gzip._GzipReader._init_read", "_io._RawIOBase.readall", "<builtin>.EOFError", "sys.base_prefix.read"], "gzip.GzipFile.read": ["_compression.BaseStream._check_not_closed", "<builtin>.OSError"], "_io._IOBase.read": [], "_compression.DecompressReader.close": ["<builtin>.super"], "bz2.BZ2File.close": ["sys.base_prefix.write", "tarfile.TarFile.close", "logging.FileHandler.close", "sys.path.write", "sys.path.close", "sys.base_prefix.close"], "zipfile._ZipWriteFile.close": ["zipfile.ZipInfo.FileHeader", "sys.path.FileHeader", "<builtin>.RuntimeError", "zipfile.LZMACompressor.flush", "<builtin>.len", "sys.base_prefix.FileHeader", "<builtin>.super"], "subprocess.Popen._stdin_write": ["_compression.DecompressReader.close", "gzip.GzipFile.write", "zipfile._ZipWriteFile.write", "asyncio.windows_utils.PipeHandle.close", "xml.etree.ElementTree._ListDataStream.write", "bz2.BZ2File.close", "_io._IOBase.close", "zipfile._ZipWriteFile.close", "bz2.BZ2File.write", "socket.SocketIO.close", "zipfile.ZipExtFile.close", "gzip.GzipFile.close", "sys.stdout.close", "http.client.HTTPResponse.close", "lzma.LZMAFile.write", "lzma.LZMAFile.close", "sys.stdout.write"], "zipfile.ZipExtFile.close": ["zipfile._SharedFile.close", "<builtin>.super"], "subprocess.Popen._remaining_time": ["time.monotonic"], "lzma.LZMAFile.close": ["sys.base_prefix.write", "tarfile.TarFile.close", "logging.FileHandler.close", "sys.path.write", "sys.path.close", "sys.base_prefix.close"], "io.TextIOWrapper": [], "subprocess.Popen._execute_child": ["<builtin>.hasattr", "_winapi.CreateProcess", "<builtin>.tuple", "warnings.warn", "<builtin>.TypeError", "<builtin>.len", "_winapi.CloseHandle", "os.get_exec_path", "<builtin>.bytes", "<builtin>.getattr", "subprocess.STARTUPINFO.copy", "posixpath.join", "subprocess.Popen._filter_handle_list", "subprocess.list2cmdline", "ntpath.join", "sys.audit", "<builtin>.set", "subprocess.Popen._handle_exitstatus", "<builtin>.issubclass", "<builtin>.isinstance", "<builtin>.int", "subprocess.Popen._posix_spawn", "<builtin>.bytearray", "<builtin>.sorted", "subprocess.STARTUPINFO.__init__", "ntpath.dirname", "subprocess.Popen._close_pipe_fds", "<builtin>.map", "<builtin>.ValueError", "<builtin>.list", "posixpath.dirname", "<builtin>.bool"], "warnings.warn": ["<builtin>.issubclass", "<builtin>.isinstance", "sys._getframe", "<builtin>.type", "<builtin>.TypeError", "<builtin>.range", "sys.__dict__.setdefault", "warnings._next_external_frame", "warnings._is_internal_frame", "_warnings.warn_explicit"], "subprocess._cleanup": [], "subprocess.Popen._get_handles": ["_winapi.CreatePipe", "subprocess.Popen._get_devnull", "<builtin>.isinstance", "sys.__stdout__.fileno", "msvcrt.get_osfhandle", "_winapi.GetStdHandle", "_winapi.CloseHandle", "subprocess.Popen._make_inheritable"], "<builtin>.filter": [], "io.open": [], "msvcrt.open_osfhandle": [], "tokenize.main": ["argparse", "tokenize._tokenize", "tokenize.main.perror", "tokenize.main.error", "argparse._ActionsContainer.add_argument", "<builtin>.print", "<builtin>.list", "argparse.ArgumentParser.parse_args", "tokenize.tokenize", "builtins.open", "argparse.ArgumentParser.__init__"], "tokenize.maybe": ["tokenize.group"], "tokenize._all_string_prefixes": ["itertools.product", "itertools.permutations"], "tokenize.TokenInfo": [], "token": ["<builtin>.globals", "<builtin>.isinstance"], "tokenize.TokenError": [], "tokenize.Untokenizer": [], "tokenize.group": [], "tokenize.StopTokenizing": [], "tokenize.any": ["tokenize.group"], "threading._DummyThread.__init__": ["threading._newname", "threading.Thread._set_ident", "threading.Thread._set_native_id", "threading.Thread.__init__", "threading.Event.set"], "locale.setlocale": ["locale.normalize", "locale._build_localename", "locale.setlocale", "<builtin>.isinstance"], "locale.getlocale": ["<builtin>.TypeError", "locale.setlocale", "locale._parse_localename"], "locale.getdefaultlocale": ["<builtin>.int", "os", "locale._parse_localename", "_locale._getdefaultlocale"], "locale.resetlocale": ["locale.getdefaultlocale", "locale.setlocale", "locale._build_localename"], "locale._print_locale._init_categories": ["<builtin>.globals"], "locale.format_string": ["<builtin>.tuple", "locale._format", "<builtin>.isinstance", "<builtin>.list"], "locale.atof": ["locale.delocalize"], "locale.atoi": ["<builtin>.int", "locale.delocalize"], "locale.str": ["locale._format"], "encodings.CodecRegistryError": [], "logging.Handler.handle": ["logging.NullHandler.emit", "logging.Handler.acquire", "unittest.case._CapturingHandler.emit", "logging.Filterer.filter", "logging.StreamHandler.emit", "logging.Handler.emit", "logging.FileHandler.emit", "logging.Handler.release"], "sys.stderr.write": [], "logging.NullHandler.handle": [], "traceback.print_list": ["<builtin>.print", "traceback.StackSummary.from_list", "traceback.StackSummary.format"], "traceback.extract_stack": ["traceback.walk_stack", "traceback.StackSummary.extract", "sys._getframe"], "ntpath.splitext": ["genericpath._splitext", "<builtin>.isinstance"], "posixpath.splitext": ["genericpath._splitext", "<builtin>.isinstance"], "logging.getLevelName": [], "logging._register_at_fork_reinit_lock": ["_weakrefset.WeakSet.add", "logging._releaseLock", "logging._acquireLock"], "weakref.ref": [], "warnings._getcategory": ["<builtin>.issubclass", "<builtin>.__import__", "<builtin>.getattr"], "warnings._getaction": [], "re.escape": ["<builtin>.str", "<builtin>.isinstance"], "sys.warnoptions.split": [], "_warnings.filters.insert": [], "_warnings._filters_mutated": [], "_warnings.filters.append": [], "_warnings.filters.remove": [], "sys.__stdout__.fileno": [], "gettext.find": ["posixpath.join", "ntpath.join", "ntpath.exists", "posixpath.exists", "gettext._expand_lang"], "warnings.catch_warnings.__init__": [], "<builtin>.FileNotFoundError": [], "gettext.NullTranslations.__init__": ["gettext.NullTranslations._parse"], "pprint._safe_repr": ["<builtin>.issubclass", "pprint._recursion", "pprint._safe_repr", "<builtin>.type", "<builtin>.len", "<builtin>.getattr", "<builtin>.sorted", "<builtin>.repr", "<builtin>.id"], "pprint.PrettyPrinter.__init__": ["<builtin>.int", "<builtin>.bool", "<builtin>.ValueError"], "pprint.PrettyPrinter.pformat": ["_io.StringIO", "pprint.PrettyPrinter._format"], "argparse.HelpFormatter.end_section": ["argparse.HelpFormatter._dedent"], "argparse.HelpFormatter.format_help": ["argparse.HelpFormatter._Section.format_help"], "argparse.HelpFormatter.add_usage": ["argparse.HelpFormatter._add_item"], "argparse.HelpFormatter.add_arguments": ["argparse.HelpFormatter.add_argument"], "argparse.HelpFormatter.start_section": ["argparse.HelpFormatter._indent", "argparse.HelpFormatter._add_item", "argparse.HelpFormatter._Section.__init__"], "argparse.HelpFormatter.add_text": ["argparse.HelpFormatter._add_item"], "sys.stdout.write": [], "codecs.StreamRecoder.__init__": [], "pickle._Unframer.read": ["<builtin>.len"], "pickle._Unframer.__init__": [], "email._parseaddr": ["email._parseaddr.AddrlistClass", "email._parseaddr.AddressList", "calendar"], "email.errors.UndecodableBytesDefect": [], "email.errors.ObsoleteHeaderDefect": [], "email.errors.CharsetError": [], "email.errors.NonASCIILocalPartDefect": [], "email.errors.MultipartInvariantViolationDefect": [], "email.errors.StartBoundaryNotFoundDefect": [], "email.errors.HeaderMissingRequiredValue": [], "email.errors.MessageError": [], "email.errors.BoundaryError": [], "email.errors.FirstHeaderLineIsContinuationDefect": [], "email.errors.NoBoundaryInMultipartDefect": [], "email.errors.MisplacedEnvelopeHeaderDefect": [], "email.errors.NonPrintableDefect": [], "email.errors.InvalidBase64PaddingDefect": [], "email.errors.InvalidBase64CharactersDefect": [], "email.errors.InvalidMultipartContentTransferEncodingDefect": [], "email.errors.InvalidBase64LengthDefect": [], "email.errors.MessageParseError": [], "email.errors.MessageDefect": [], "email.errors.InvalidHeaderDefect": [], "email.errors.CloseBoundaryNotFoundDefect": [], "email.errors.HeaderDefect": [], "email.errors.HeaderParseError": [], "email.errors.MissingHeaderBodySeparatorDefect": [], "email.errors.MultipartConversionError": [], "email.encoders": ["quopri", "base64"], "email.base64mime": ["base64", "binascii"], "email.charset.Charset": [], "email.quoprimime": ["<builtin>.ord", "<builtin>.range", "string", "<builtin>.chr", "re"], "email._encoded_words._QByteMap": [], "email._policybase.Policy": ["abc.abstractmethod"], "email._policybase._PolicyBase.__init__": ["<builtin>.hasattr", "<builtin>.TypeError", "<builtin>.super"], "email._policybase._PolicyBase": [], "email._policybase.Compat32": [], "email.header": ["email.charset.Charset.__init__", "email.header.Header", "email.errors", "email.charset", "re.compile", "email.base64mime", "email.header._ValueFormatter", "email.quoprimime", "re", "email.header._Accumulator", "binascii"], "quopri.main": ["quopri.decode", "getopt", "<builtin>.print", "sys.stderr.write", "<builtin>.open", "quopri.encode", "sys.exit", "sys.stdin.buffer.close"], "email.iterators": ["io"], "uu.Error": [], "uu.test": ["<builtin>.isinstance", "uu.decode", "<builtin>.print", "uu.encode", "optparse.OptionContainer.add_option", "<builtin>.len", "optparse", "optparse.OptionParser.error", "<builtin>.open", "sys.exit", "optparse.OptionParser.parse_args", "optparse.OptionParser.__init__"], "email.feedparser.BufferedSubFile": [], "email.feedparser.FeedParser": [], "email.feedparser.BytesFeedParser": [], "sys.stdout.buffer.write": [], "sys.stdin.buffer.read": [], "getopt.getopt": ["getopt.do_longs", "getopt.do_shorts", "<builtin>.type", "<builtin>.list"], "getopt.GetoptError": [], "sys.stdin.buffer.readline": [], "base64.decodebytes": ["base64._input_type_check"], "base64.encodebytes": ["<builtin>.len", "<builtin>.range", "base64._input_type_check"], "logging.basicConfig": ["logging.Logger.setLevel", "logging.Logger.addHandler", "logging.FileHandler.__init__", "<builtin>.ValueError", "<builtin>.len", "logging.FileHandler.close", "logging.Handler.close", "logging.Handler.setFormatter", "logging._releaseLock", "logging.Logger.removeHandler", "logging.StreamHandler.__init__", "logging.Formatter.__init__", "logging._acquireLock"], "itertools.islice": [], "psutil._psbsd.Process.oneshot": ["<builtin>.len", "_psutil_bsd.proc_oneshot_info"], "_common.puids": [], "psutil._pssunos.Process._proc_basic_info": ["_common.AccessDenied", "_psutil_sunos.proc_basic_info", "ntpath.exists", "posixpath.exists", "<builtin>.len"], "psutil._pssunos.Process._proc_cred": ["_psutil_sunos.proc_cred"], "psutil._psaix.Process._proc_cred": ["_psutil_aix.proc_cred"], "psutil._pslinux.Process._read_status_file": ["_common.open_binary"], "_psosx.pids": [], "psutil._psaix.pids": ["<builtin>.int", "_common.get_procfs_path"], "psutil._psbsd.pids": ["psutil._psbsd._pid_0_exists", "_psutil_bsd.pids"], "psutil._pslinux.pids": ["<builtin>.int", "_compat.b", "_common.get_procfs_path"], "psutil._pssunos.pids": ["<builtin>.int", "_compat.b", "_common.get_procfs_path"], "psutil.Process.__init__": ["psutil.Process._init"], "psutil.Process.as_dict": ["<builtin>.isinstance", "<builtin>.dict", "psutil.Process.oneshot", "<builtin>.map", "<builtin>.type", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.len", "<builtin>.getattr", "<builtin>.set"], "xml.etree.ElementPath._SelectorContext": [], "traceback.TracebackException.__init__": ["traceback.TracebackException.__init__", "traceback.walk_tb", "traceback._some_str", "<builtin>.issubclass", "traceback.StackSummary.extract", "<builtin>.str", "<builtin>.type", "traceback.TracebackException._load_lines", "<builtin>.set", "<builtin>.id"], "traceback.TracebackException.format": ["traceback.TracebackException.format_exception_only", "traceback.TracebackException.format"], "ctypes.PYFUNCTYPE.CFunctionType": [], "ctypes.CFUNCTYPE.CFunctionType": [], "ctypes._endian.BigEndianStructure": [], "ctypes._endian.LittleEndianStructure": [], "ctypes._endian._swapped_meta": [], "argparse.ArgumentParser._parse_known_args.take_action": ["argparse.ArgumentParser._get_values", "argparse._get_action_name", "argparse.ArgumentError.__init__", "gettext.gettext"], "argparse.ArgumentError.__init__": ["argparse._get_action_name"], "argparse.ArgumentParser._match_argument": ["gettext.gettext", "argparse.ArgumentParser._get_nargs_pattern", "re.match", "<builtin>.len", "gettext.ngettext", "argparse.ArgumentError.__init__"], "argparse.ArgumentParser.convert_arg_line_to_args": [], "argparse.ArgumentParser._get_option_tuples": ["argparse.ArgumentParser.error", "gettext.gettext"], "argparse.ArgumentParser._match_arguments_partial": ["<builtin>.len", "<builtin>.range", "argparse.ArgumentParser._get_nargs_pattern", "re.match"], "inspect._void": [], "inspect._ParameterKind": [], "inspect.BoundArguments": [], "inspect._main": ["argparse", "<builtin>.hasattr", "inspect.getsource", "argparse._ActionsContainer.add_argument", "<builtin>.print", "sys.exit", "importlib", "<builtin>.type", "inspect.getsourcefile", "argparse.ArgumentParser.parse_args", "inspect.findsource", "<builtin>.getattr", "<builtin>.repr", "importlib.import_module", "argparse.ArgumentParser.__init__"], "dis": ["types", "io", "collections", "dis.Instruction", "dis.Bytecode", "collections.namedtuple", "dis._test", "opcode"], "inspect.EndOfBlock": [], "inspect._empty": [], "importlib.machinery": [], "inspect.BlockFinder": [], "inspect.Parameter": [], "inspect.Signature": [], "<builtin>.__import__": [], "sys.path.insert": [], "doctest.testfile": ["doctest.DocTestParser.get_doctest", "doctest._load_testfile", "posixpath.basename", "doctest.DocTestRunner.merge", "doctest.DocTestRunner.run", "doctest.DebugRunner.run", "<builtin>.ValueError", "doctest.DocTestRunner.__init__", "ntpath.basename", "doctest.DocTestRunner.summarize"], "unittest.main": ["argparse", "unittest.runner", "unittest.main.TestProgram", "unittest.loader", "os", "unittest.signals"], "unittest.async_case": ["inspect", "unittest.case", "asyncio", "unittest.async_case.IsolatedAsyncioTestCase"], "unittest.suite": ["unittest.case", "unittest.util", "unittest.suite.BaseTestSuite", "unittest.suite.TestSuite", "unittest.suite._DebugResult", "unittest.suite._ErrorHolder"], "unittest.result": ["io", "functools", "unittest.util", "unittest.result.TestResult", "traceback"], "unittest.case": ["unittest.case._BaseTestCaseContext", "contextlib", "unittest.result", "unittest.case._AssertLogsContext", "unittest.case._ShouldStop", "traceback", "functools", "unittest.case.SkipTest", "pprint", "types", "collections", "difflib", "unittest.case._OrderedChainMap", "collections.namedtuple", "unittest.case._CapturingHandler", "unittest.case._Outcome", "unittest.util", "unittest.case._AssertRaisesBaseContext", "unittest.case.FunctionTestCase", "unittest.case._AssertRaisesContext", "unittest.case._SubTest", "unittest.case._AssertWarnsContext", "warnings", "re", "logging", "unittest.case._UnexpectedSuccess", "unittest.case.TestCase", "<builtin>.object"], "unittest.runner": ["unittest.runner._WritelnDecorator", "unittest.result", "unittest.runner.TextTestResult", "unittest.runner.TextTestRunner", "warnings", "unittest.signals"], "unittest.loader": ["types", "functools", "unittest.suite", "unittest.loader.TestLoader.__init__", "unittest.case", "re.compile", "fnmatch", "os", "warnings", "traceback", "unittest.util", "re", "unittest.loader._FailedTest", "unittest.loader.TestLoader"], "unittest.signals": ["weakref.WeakKeyDictionary.__init__", "functools", "unittest.signals._InterruptHandler", "weakref", "signal"], "difflib.HtmlDiff": [], "difflib._test": ["doctest", "doctest.testmod", "difflib"], "difflib.SequenceMatcher": [], "difflib.Differ": [], "doctest.DocTestRunner.__run": ["doctest.DebugRunner.report_unexpected_exception", "doctest._strip_exception_details", "traceback.format_exception_only", "<builtin>.compile", "<builtin>.exec", "doctest.DebugRunner.report_failure", "doctest.DocTestRunner.report_unexpected_exception", "doctest._SpoofOut.getvalue", "doctest._SpoofOut.truncate", "doctest.DocTestRunner.report_start", "doctest.DocTestRunner.__record_outcome", "<builtin>.range", "<builtin>.enumerate", "doctest.DocTestRunner.report_success", "doctest._OutputRedirectingPdb.set_continue", "doctest.DocTestRunner.report_failure", "sys.exc_info", "doctest._exception_traceback"], "doctest._extract_future_flags": ["<builtin>.getattr"], "sys.stdout.encoding.lower": [], "doctest._OutputRedirectingPdb.__init__": ["pdb.Pdb.__init__"], "sys.settrace": [], "pdb.Pdb.reset": [], "sys.gettrace": [], "linecache.getlines": ["<builtin>.len", "linecache.clearcache", "linecache.updatecache"], "inspect.getsourcefile": ["ntpath.exists", "ntpath.splitext", "<builtin>.any", "posixpath.exists", "posixpath.splitext", "inspect.getfile", "<builtin>.getattr", "inspect.getmodule"], "inspect.getfile": ["<builtin>.hasattr", "inspect.ismodule", "inspect.isfunction", "inspect.isclass", "inspect.istraceback", "<builtin>.type", "<builtin>.TypeError", "<builtin>.getattr", "inspect.iscode", "inspect.isframe", "inspect.ismethod", "sys.modules.get"], "inspect.getmodule": ["<builtin>.hasattr", "inspect.ismodule", "sys.modules.copy", "inspect.getabsfile", "<builtin>.getattr", "ntpath.realpath", "sys.modules.get", "posixpath.realpath"], "doctest.DocTestFinder._find": ["inspect.ismodule", "doctest.DocTestFinder._get_test", "<builtin>.isinstance", "inspect.isclass", "inspect.unwrap", "<builtin>.print", "doctest.DocTestFinder._from_module", "<builtin>.type", "<builtin>.ValueError", "<builtin>.getattr", "inspect.isroutine", "doctest.DocTestFinder._find", "<builtin>.id"], "_io.StringIO.__init__": [], "io.StringIO.__init__": [], "posixpath.isabs": ["sys.base_prefix.startswith", "sys.path.startswith", "posixpath._get_sep"], "posixpath.normpath": ["sys.path.split", "<builtin>.isinstance", "sys.base_prefix.startswith", "sys.base_prefix.split", "sys.path.startswith"], "ntpath._abspath_fallback": ["ntpath.normpath", "ntpath.isabs", "<builtin>.isinstance", "ntpath.join"], "ntpath.normpath": ["<builtin>.isinstance", "sys.path.split", "sys.base_prefix.startswith", "sys.path.lstrip", "sys.base_prefix.split", "sys.path.replace", "<builtin>.len", "ntpath.splitdrive", "sys.base_prefix.replace", "sys.path.startswith", "sys.base_prefix.lstrip"], "psutil._pslinux.sensors_battery": ["posixpath.join", "ntpath.join", "<builtin>.int", "_common.cat", "<builtin>.sorted", "psutil._pslinux.sensors_battery.multi_bcat", "<builtin>.object", "_common.sbattery"], "psutil._psbsd.sensors_battery": ["_psutil_bsd.sensors_battery", "_common.sbattery"], "_psosx.sensors_battery": [], "psutil._pswindows.sensors_battery": ["_psutil_windows.sensors_battery", "<builtin>.bool", "_common.sbattery"], "random.Random._randbelow_with_getrandbits": [], "threading.Thread._wait_for_tstate_lock": ["threading._DummyThread._stop", "threading.Thread._stop"], "bpytop.Draw.saved_buffer": ["<builtin>.sorted"], "bpytop.Fx.uncolor": [], "bpytop.Key.mouse_moved": ["threading.Event.is_set", "threading.Event.clear"], "_psosx.pid_exists": [], "psutil._psbsd.pid_exists": ["psutil._psbsd.pids", "_psposix.pid_exists"], "psutil._pslinux.pid_exists": ["<builtin>.int", "<builtin>.ValueError", "_common.get_procfs_path", "psutil._pslinux.pids", "_common.open_binary", "_psposix.pid_exists"], "psutil._psaix.pid_exists": ["posixpath.join", "ntpath.join", "ntpath.exists", "<builtin>.str", "_common.get_procfs_path", "posixpath.exists"], "psutil._pssunos.pid_exists": ["_psposix.pid_exists"], "<builtin>.SyntaxError": [], "sre_compile.dis.dis_.print_": ["<builtin>.print"], "sre_compile.dis.dis_.print_2": ["<builtin>.print"], "sre_compile._hex_code": [], "<builtin>.bin": [], "_sre.ascii_tolower": [], "sre_compile._optimize_charset": ["_sre.ascii_tolower", "_sre.unicode_tolower", "<builtin>.map", "sre_compile._bytes_to_codes", "<builtin>.any", "<builtin>.bytearray", "<builtin>.range", "<builtin>.len", "_sre.unicode_iscased", "<builtin>.bytes", "_sre.ascii_iscased", "sre_compile._mk_bitmap"], "_sre.unicode_tolower": [], "sre_compile._combine_flags": [], "sre_compile._compile_charset": ["sre_constants.error.__init__"], "_sre.unicode_iscased": [], "sre_constants.error.__init__": ["<builtin>.isinstance", "<builtin>.super"], "_sre.ascii_iscased": [], "sre_compile._simple": ["<builtin>.len", "sre_compile._simple"], "sre_compile._get_charset_prefix": ["sre_compile._get_iscased", "sre_compile._combine_flags", "<builtin>.map", "<builtin>.any", "<builtin>.range", "_sre.unicode_iscased", "_sre.ascii_iscased"], "sre_compile._generate_overlap_table": ["<builtin>.len", "<builtin>.range"], "sre_compile._get_literal_prefix": ["sre_compile._get_iscased", "sre_compile._combine_flags", "<builtin>.len", "sre_compile._get_literal_prefix", "_sre.unicode_iscased", "_sre.ascii_iscased"], "sre_parse.SubPattern.getwidth": ["<builtin>.min", "<builtin>.max"], "sre_parse.Tokenizer.tell": ["<builtin>.len"], "sre_parse.Tokenizer.match": ["sre_parse.Tokenizer.__next"], "sre_parse.SubPattern.__init__": [], "sre_parse.SubPattern.append": [], "sre_parse._parse": ["sre_parse.Tokenizer.tell", "warnings.warn", "<builtin>.AssertionError", "<builtin>.len", "sre_parse._escape", "sre_parse.State.opengroup", "sre_parse.Tokenizer.error", "sre_parse.State.closegroup", "sre_parse.Tokenizer.get", "sre_parse._parse_sub", "sre_parse.State.checklookbehindgroup", "sre_parse.State.checkgroup", "sre_parse._parse_flags", "sre_parse._uniq", "<builtin>.int", "warnings", "sre_parse.Tokenizer.match", "sre_parse._parse", "sre_parse.Tokenizer.getuntil", "<builtin>.range", "sre_parse._class_escape", "<builtin>.OverflowError", "sre_parse.SubPattern.__init__", "sre_parse.Tokenizer.seek", "sre_parse.SubPattern.append"], "sre_parse.Tokenizer.__next": ["<builtin>.len", "sre_parse.Tokenizer.error"], "collections.ChainMap.popitem": ["<builtin>.KeyError"], "weakref.WeakValueDictionary.popitem": ["weakref.WeakValueDictionary._commit_removals"], "weakref.WeakKeyDictionary.popitem": [], "_collections_abc.MutableMapping.popitem": ["<builtin>.next", "<builtin>.iter"], "functools._compose_mro": ["<builtin>.issubclass", "functools._c3_mro", "<builtin>.set", "functools._compose_mro.is_related", "functools._compose_mro.is_strict_base"], "socket.socket._decref_socketios": ["socket.socket.close"], "_io._RawIOBase.close": [], "<builtin>.memoryview": [], "http.client.HTTPResponse._close_conn": [], "<builtin>.bytearray": [], "http.client.HTTPResponse._readall_chunked": ["http.client.HTTPResponse._safe_read", "http.client.HTTPResponse._get_chunk_left", "http.client.IncompleteRead.__init__"], "http.client.HTTPResponse._safe_read": ["<builtin>.len", "http.client.IncompleteRead.__init__"], "http.client.HTTPResponse.readinto": ["http.client.HTTPResponse._close_conn", "<builtin>.len", "<builtin>.memoryview", "http.client.HTTPResponse._readinto_chunked"], "_compression.BaseStream._check_can_read": ["io.UnsupportedOperation", "bz2.BZ2File.readable", "gzip.GzipFile.readable", "lzma.LZMAFile.readable"], "gzip.GzipFile.write": ["<builtin>.memoryview", "_compression.BaseStream._check_not_closed", "gzip.GzipFile.write", "<builtin>.isinstance", "sys.base_prefix.write", "<builtin>.ValueError", "<builtin>.len", "sys.stdout.buffer.write", "sys.stdin.buffer.write", "sys.path.write", "<builtin>.OSError"], "sys.base_prefix.write": [], "gzip.write32u": ["gzip.GzipFile.write", "sys.base_prefix.write", "sys.stdout.buffer.write", "sys.stdin.buffer.write", "sys.path.write"], "sys.stdin.buffer.write": [], "sys.path.write": [], "subprocess.Popen._try_wait": [], "_winapi.GetExitCodeProcess": [], "subprocess.Popen._handle_exitstatus": [], "_winapi.WaitForSingleObject": [], "subprocess.TimeoutExpired.__init__": [], "selectors.SelectSelector.__init__": ["<builtin>.set", "<builtin>.super"], "selectors._PollLikeSelector.__init__": ["<builtin>.super"], "subprocess.Popen._translate_newlines": [], "http.client.HTTPResponse.flush": ["<builtin>.super"], "gzip.GzipFile.flush": ["_compression.BaseStream._check_not_closed", "gzip.GzipFile.write", "sys.stdout.buffer.flush", "sys.path.flush", "sys.stdin.buffer.flush", "sys.base_prefix.write", "logging.StreamHandler.flush", "sys.stdout.buffer.write", "sys.stdin.buffer.write", "gzip.GzipFile.flush", "sys.path.write", "sys.base_prefix.flush"], "sys.stdout.flush": [], "subprocess.Popen._save_input": [], "_io._BufferedIOBase.flush": [], "subprocess.Popen._check_timeout": ["subprocess.TimeoutExpired.__init__", "time.monotonic"], "_io._IOBase.flush": [], "sys.path.read": [], "_io._RawIOBase.readall": [], "<builtin>.EOFError": [], "sys.base_prefix.read": [], "zipfile.ZipExtFile._read1": ["zipfile.ZipExtFile._read2", "zipfile.LZMADecompressor.decompress", "<builtin>.len", "<builtin>.max", "zipfile.ZipExtFile._update_crc"], "sys.path.prepend": [], "gzip._GzipReader._read_gzip_header": ["sys.base_prefix.read", "sys.path.read", "gzip._GzipReader._read_exact"], "sys.base_prefix.prepend": [], "gzip._GzipReader._add_read_data": ["<builtin>.len"], "gzip._GzipReader._read_eof": ["sys.path.prepend", "sys.base_prefix.prepend", "sys.path.read", "<builtin>.hex", "sys.base_prefix.read", "gzip._GzipReader._read_exact"], "gzip._GzipReader._init_read": [], "_compression.BaseStream._check_not_closed": ["<builtin>.ValueError"], "<builtin>.OSError": [], "tarfile.TarFile.close": ["gzip.GzipFile.write", "tarfile._Stream.write", "bz2.BZ2File.close", "bz2.BZ2File.write", "lzma.LZMAFile.close", "tarfile._Stream.close", "lzma.LZMAFile.write", "<builtin>.divmod", "gzip.GzipFile.close"], "logging.FileHandler.close": ["<builtin>.hasattr", "logging.StreamHandler.flush", "logging.Handler.acquire", "logging.FileHandler.close", "logging.Handler.close", "logging.Handler.release"], "sys.path.close": [], "sys.base_prefix.close": [], "zipfile.ZipInfo.FileHeader": ["<builtin>.len", "zipfile.ZipInfo._encodeFilenameFlags", "<builtin>.max"], "sys.path.FileHeader": [], "zipfile.LZMACompressor.flush": ["zipfile.LZMACompressor._init"], "sys.base_prefix.FileHeader": [], "zipfile._ZipWriteFile.write": ["<builtin>.len", "<builtin>.ValueError", "zipfile.LZMACompressor.compress"], "xml.etree.ElementTree._ListDataStream.write": [], "bz2.BZ2File.write": ["sys.base_prefix.write", "sys.path.write", "_compression.BaseStream._check_can_write", "<builtin>.len"], "lzma.LZMAFile.write": ["sys.base_prefix.write", "sys.path.write", "_compression.BaseStream._check_can_write", "<builtin>.len"], "zipfile._SharedFile.close": ["zipfile.ZipFile._fpclose"], "_winapi.CreateProcess": [], "_winapi.CloseHandle": [], "os.get_exec_path": ["<builtin>.isinstance", "warnings.catch_warnings.__init__", "<builtin>.ValueError", "warnings", "warnings.simplefilter"], "subprocess.STARTUPINFO.copy": ["subprocess.STARTUPINFO.__init__", "<builtin>.list"], "subprocess.Popen._filter_handle_list": ["_winapi.GetFileType", "<builtin>.list"], "subprocess.list2cmdline": ["<builtin>.len", "<builtin>.map"], "sys.audit": [], "subprocess.Popen._posix_spawn": ["<builtin>.getattr", "subprocess.Popen._close_pipe_fds"], "subprocess.STARTUPINFO.__init__": [], "subprocess.Popen._close_pipe_fds": ["contextlib._BaseExitStack.__init__", "<builtin>.getattr"], "sys.__dict__.setdefault": [], "warnings._next_external_frame": ["warnings._is_internal_frame"], "warnings._is_internal_frame": [], "_warnings.warn_explicit": [], "_winapi.CreatePipe": [], "subprocess.Popen._get_devnull": ["<builtin>.hasattr"], "msvcrt.get_osfhandle": [], "_winapi.GetStdHandle": [], "subprocess.Popen._make_inheritable": ["_winapi.DuplicateHandle", "_winapi.GetCurrentProcess"], "tokenize._tokenize": ["<builtin>.len", "tokenize._compile", "sys.stdin.readline", "<builtin>.IndentationError"], "tokenize.main.perror": ["sys.stderr.write"], "tokenize.main.error": ["tokenize.main.perror", "sys.exit"], "tokenize.tokenize": ["tokenize._tokenize", "itertools.repeat", "itertools.chain", "<builtin>.iter", "tokenize.detect_encoding"], "builtins.open": [], "itertools.product": [], "itertools.permutations": [], "locale.normalize": ["locale._replace_encoding", "locale._append_modifier"], "locale._build_localename": ["<builtin>.TypeError"], "locale._parse_localename": ["locale.normalize", "<builtin>.tuple", "<builtin>.ValueError"], "_locale._getdefaultlocale": [], "locale._format": ["locale._group", "locale.localeconv", "locale._strip_padding"], "locale.delocalize": ["locale.localeconv"], "logging.NullHandler.emit": [], "logging.Handler.acquire": [], "unittest.case._CapturingHandler.emit": ["logging.Handler.format"], "logging.StreamHandler.emit": ["logging.StreamHandler.flush", "logging.Handler.format", "logging.Handler.handleError", "sys.stderr.write"], "logging.Handler.emit": ["<builtin>.NotImplementedError"], "logging.FileHandler.emit": ["logging.FileHandler._open", "logging.StreamHandler.emit", "logging.FileHandler.emit"], "logging.Handler.release": [], "traceback.StackSummary.from_list": ["traceback.FrameSummary.__init__", "<builtin>.isinstance"], "traceback.StackSummary.format": ["<builtin>.sorted"], "traceback.walk_stack": ["sys._getframe"], "traceback.StackSummary.extract": ["linecache.lazycache", "itertools.islice", "<builtin>.getattr", "traceback.FrameSummary.__init__", "<builtin>.set", "linecache.checkcache", "collections.deque"], "genericpath._splitext": ["sys.base_prefix.rfind", "sys.path.rfind", "<builtin>.max"], "gettext._expand_lang": ["locale.normalize", "<builtin>.range"], "gettext.NullTranslations._parse": [], "pprint._recursion": ["<builtin>.type", "<builtin>.id"], "<builtin>.id": [], "_io.StringIO": [], "pprint.PrettyPrinter._format": ["pprint.PrettyPrinter._pprint_dict", "<builtin>.isinstance", "pprint._recursion", "<builtin>.type", "<builtin>.len", "pprint.PrettyPrinter._repr", "<builtin>.id", "sys.stdout.write"], "argparse.HelpFormatter._dedent": [], "argparse.HelpFormatter._Section.format_help": ["argparse.HelpFormatter._indent", "argparse.HelpFormatter._join_parts", "argparse.HelpFormatter._dedent"], "argparse.HelpFormatter._add_item": [], "argparse.HelpFormatter.add_argument": ["argparse.HelpFormatter._format_action_invocation", "argparse.HelpFormatter._iter_indented_subactions", "<builtin>.len", "<builtin>.max", "argparse.HelpFormatter._add_item"], "argparse.HelpFormatter._indent": [], "email._parseaddr.AddrlistClass": [], "email._parseaddr.AddressList": [], "calendar": ["calendar.Calendar", "calendar.IllegalWeekdayError", "calendar._localized_day.__init__", "calendar.LocaleTextCalendar", "calendar.main", "calendar.TextCalendar", "datetime.datetime.date", "calendar.IllegalMonthError", "locale", "calendar.HTMLCalendar", "calendar.LocaleHTMLCalendar", "calendar.Calendar.__init__", "<builtin>.range", "calendar._localized_day", "calendar.different_locale", "calendar._localized_month.__init__", "calendar._localized_month", "datetime"], "email.charset.Charset.__init__": ["<builtin>.str", "<builtin>.isinstance"], "email.header.Header": [], "email.header._ValueFormatter": [], "email.header._Accumulator": [], "quopri.decode": ["sys.stdin.buffer.readline", "quopri.ishex", "quopri.unhex", "<builtin>.len", "sys.stdout.buffer.write", "<builtin>.bytes", "sys.stdin.buffer.read"], "quopri.encode": ["sys.stdin.buffer.readline", "quopri.needsquoting", "<builtin>.len", "sys.stdout.buffer.write", "<builtin>.bytes", "quopri.quote", "sys.stdin.buffer.read", "quopri.encode.write"], "sys.stdin.buffer.close": [], "uu.decode": ["<builtin>.isinstance", "sys.stdin.buffer.readline", "<builtin>.int", "ntpath.exists", "sys.stderr.write", "posixpath.exists", "<builtin>.len", "sys.stdout.buffer.write", "<builtin>.open"], "uu.encode": ["posixpath.basename", "<builtin>.isinstance", "<builtin>.len", "sys.stdout.buffer.write", "ntpath.basename", "<builtin>.open", "sys.stdin.buffer.read"], "optparse.OptionContainer.add_option": ["<builtin>.isinstance", "optparse.OptionGroup.__init__", "optparse.OptionContainer._check_conflict", "<builtin>.TypeError", "<builtin>.len", "optparse.OptionParser.__init__"], "optparse": ["gettext", "optparse.OptionValueError", "optparse.AmbiguousOptionError", "optparse.BadOptionError", "optparse.IndentedHelpFormatter", "gettext.gettext", "optparse.OptionContainer", "optparse.OptionParser", "optparse.OptionError", "optparse.OptionConflictError", "os", "textwrap", "optparse.OptionGroup", "optparse.Option", "optparse.Values", "optparse.HelpFormatter", "optparse.OptParseError", "optparse.TitledHelpFormatter"], "optparse.OptionParser.error": ["optparse.OptionParser.exit", "optparse.OptionParser.get_prog_name", "optparse.OptionParser.print_usage"], "optparse.OptionParser.parse_args": ["optparse.OptionParser._process_args", "<builtin>.str", "optparse.OptionParser._get_args", "optparse.OptionParser.error", "optparse.OptionParser.get_default_values", "optparse.OptionParser.check_values"], "optparse.OptionParser.__init__": ["optparse.OptionParser._populate_option_list", "optparse.OptionParser._init_parsing_state", "optparse.HelpFormatter.set_parser", "optparse.OptionParser.set_usage", "optparse.OptionContainer.__init__", "optparse.IndentedHelpFormatter.__init__"], "getopt.do_longs": ["getopt.long_has_args", "gettext.gettext", "getopt.GetoptError.__init__"], "getopt.do_shorts": ["getopt.short_has_arg", "gettext.gettext", "getopt.GetoptError.__init__"], "base64._input_type_check": ["<builtin>.memoryview", "<builtin>.TypeError"], "logging.Handler.close": ["logging._releaseLock", "logging._acquireLock"], "logging.Logger.removeHandler": ["logging._releaseLock", "logging._acquireLock"], "_psutil_bsd.proc_oneshot_info": [], "_common.AccessDenied": [], "_psutil_sunos.proc_basic_info": [], "_psutil_sunos.proc_cred": [], "_psutil_aix.proc_cred": [], "psutil._psbsd._pid_0_exists": ["psutil._psbsd.Process.name", "psutil._psbsd.Process.__init__"], "_psutil_bsd.pids": [], "_compat.b": [], "psutil.Process._init": ["psutil._pssunos.Process.__init__", "<builtin>.isinstance", "threading.RLock", "psutil._pslinux.Process.__init__", "psutil.Process.create_time", "<builtin>.ValueError", "<builtin>.TypeError", "psutil._pswindows.Process.__init__", "psutil._psaix.Process.__init__", "_common.NoSuchProcess", "_psosx.Process", "psutil._psbsd.Process.__init__"], "psutil.Process.oneshot": ["<builtin>.hasattr", "psutil._pssunos.Process.oneshot_exit", "psutil._psaix.Process.oneshot_exit", "psutil._psbsd.Process.oneshot_enter", "psutil._psaix.Process.oneshot_enter", "psutil._psbsd.Process.oneshot_exit", "psutil._pswindows.Process.oneshot_enter", "psutil._pssunos.Process.oneshot_enter", "psutil._pswindows.Process.oneshot_exit", "psutil._pslinux.Process.oneshot_enter", "psutil._pslinux.Process.oneshot_exit"], "traceback.walk_tb": [], "traceback._some_str": ["<builtin>.str", "<builtin>.type"], "traceback.TracebackException._load_lines": ["traceback.TracebackException._load_lines"], "traceback.TracebackException.format_exception_only": ["<builtin>.issubclass", "<builtin>.min", "traceback._format_final_exc_line", "<builtin>.str", "<builtin>.len"], "argparse.ArgumentParser._get_values": ["argparse.ArgumentParser._check_value", "<builtin>.len", "<builtin>.isinstance", "argparse.ArgumentParser._get_value"], "argparse.ArgumentParser._get_nargs_pattern": [], "gettext.ngettext": ["gettext.dngettext"], "inspect.getsource": ["inspect.getsourcelines"], "importlib": ["types", "_bootstrap._setup", "_frozen_importlib_external._setup", "warnings", "importlib._bootstrap_external", "_frozen_importlib._setup", "_bootstrap_external._setup"], "inspect.findsource": ["<builtin>.hasattr", "linecache.getlines", "inspect.ismodule", "inspect.isfunction", "inspect.isclass", "inspect.istraceback", "re.compile", "inspect.getsourcefile", "<builtin>.len", "<builtin>.range", "inspect.getfile", "inspect.ismethod", "inspect.iscode", "inspect.isframe", "inspect.getmodule", "linecache.checkcache", "<builtin>.OSError"], "importlib.import_module": ["<builtin>.TypeError", "_frozen_importlib._gcd_import", "_bootstrap._gcd_import"], "dis.Instruction": [], "dis.Bytecode": [], "dis._test": ["argparse", "argparse.FileType.__init__", "<builtin>.compile", "dis.dis", "argparse._ActionsContainer.add_argument", "argparse.ArgumentParser.parse_args", "argparse.ArgumentParser.__init__"], "opcode": ["opcode.def_op", "_opcode", "opcode.name_op", "<builtin>.range", "opcode.jrel_op", "opcode.jabs_op"], "doctest.DocTestParser.get_doctest": ["doctest.DocTestParser.get_examples", "doctest.DocTest.__init__"], "doctest._load_testfile": ["<builtin>.hasattr", "doctest._module_relative_path", "doctest._newline_convert", "<builtin>.getattr", "<builtin>.open", "doctest._normalize_module"], "unittest.main.TestProgram": [], "asyncio": ["asyncio.windows_events"], "unittest.async_case.IsolatedAsyncioTestCase": [], "unittest.util": ["posixpath", "collections", "collections.namedtuple"], "unittest.suite.BaseTestSuite": [], "unittest.suite.TestSuite": [], "unittest.suite._DebugResult": [], "unittest.suite._ErrorHolder": [], "unittest.result.TestResult": ["unittest.main.TestProgram.__init__.failfast", "unittest.result.TestResult.failfast", "unittest.runner.TextTestRunner.failfast"], "unittest.case._BaseTestCaseContext": [], "unittest.case._AssertLogsContext": [], "unittest.case._ShouldStop": [], "unittest.case.SkipTest": [], "unittest.case._OrderedChainMap": [], "unittest.case._CapturingHandler": [], "unittest.case._Outcome": ["contextlib.contextmanager"], "unittest.case._AssertRaisesBaseContext": [], "unittest.case.FunctionTestCase": [], "unittest.case._AssertRaisesContext": [], "unittest.case._SubTest": [], "unittest.case._AssertWarnsContext": [], "unittest.case._UnexpectedSuccess": [], "unittest.case.TestCase": ["contextlib.contextmanager", "unittest.case.TestCase._deprecate"], "unittest.runner._WritelnDecorator": [], "unittest.runner.TextTestResult": [], "unittest.runner.TextTestRunner": [], "unittest.loader.TestLoader.__init__": ["<builtin>.set", "<builtin>.super"], "unittest.loader._FailedTest": [], "unittest.loader.TestLoader": ["<builtin>.staticmethod"], "weakref.WeakKeyDictionary.__init__": ["weakref.WeakKeyDictionary.update", "_weakrefset.WeakSet.update", "<builtin>.set"], "unittest.signals._InterruptHandler": [], "doctest.DebugRunner.report_unexpected_exception": ["doctest.UnexpectedException.__init__"], "doctest._strip_exception_details": ["<builtin>.len"], "traceback.format_exception_only": ["traceback.TracebackException.__init__", "traceback.TracebackException.format_exception_only", "<builtin>.list"], "doctest.DebugRunner.report_failure": ["doctest.DocTestFailure.__init__"], "doctest.DocTestRunner.report_unexpected_exception": ["doctest.SkipDocTestCase.__init__", "doctest._indent", "doctest.DocTest.__init__", "doctest.DocTestRunner.__init__", "doctest.DocTestRunner._failure_header", "sys.stdout.write", "doctest._exception_traceback"], "doctest._SpoofOut.getvalue": ["_io.StringIO.getvalue"], "doctest._SpoofOut.truncate": ["_io.StringIO.seek", "_io.StringIO.truncate"], "doctest.DocTestRunner.report_start": ["doctest.SkipDocTestCase.__init__", "doctest._indent", "doctest.DocTest.__init__", "doctest.DocTestRunner.__init__", "sys.stdout.write"], "doctest.DocTestRunner.__record_outcome": [], "doctest.DocTestRunner.report_success": ["doctest.DocTest.__init__", "sys.stdout.write", "doctest.SkipDocTestCase.__init__", "doctest.DocTestRunner.__init__"], "doctest._OutputRedirectingPdb.set_continue": ["pdb.Pdb.set_continue"], "doctest.DocTestRunner.report_failure": ["doctest.SkipDocTestCase.__init__", "doctest.DocTest.__init__", "doctest.DocTestRunner.__init__", "doctest.DocTestRunner._failure_header", "sys.stdout.write"], "doctest._exception_traceback": ["_io.StringIO", "traceback.print_exception"], "pdb.Pdb.__init__": [], "linecache.clearcache": [], "linecache.updatecache": ["linecache.lazycache", "posixpath.join", "ntpath.isabs", "ntpath.join", "<builtin>.len", "posixpath.isabs"], "inspect.isfunction": ["<builtin>.isinstance"], "inspect.isclass": ["<builtin>.isinstance"], "inspect.istraceback": ["<builtin>.isinstance"], "inspect.iscode": ["<builtin>.isinstance"], "inspect.isframe": ["<builtin>.isinstance"], "inspect.ismethod": ["<builtin>.isinstance"], "sys.modules.copy": [], "inspect.getabsfile": ["posixpath.abspath", "posixpath.normcase", "inspect.getsourcefile", "ntpath.normcase", "inspect.getfile", "ntpath.abspath"], "ntpath.realpath": ["ntpath.isabs", "<builtin>.isinstance", "ntpath.join", "sys.base_prefix.startswith", "ntpath.normcase", "<builtin>.len", "nt._getfinalpathname", "ntpath._getfinalpathname_nonstrict", "sys.path.startswith", "ntpath.normpath"], "posixpath.realpath": ["posixpath.abspath", "posixpath._joinrealpath"], "doctest.DocTestFinder._get_test": ["doctest.DocTestFinder._find_lineno", "doctest.DocTestParser.get_doctest", "<builtin>.isinstance", "<builtin>.str", "<builtin>.getattr"], "inspect.unwrap": ["inspect.unwrap._is_wrapper", "<builtin>.ValueError", "<builtin>.len", "sys.getrecursionlimit", "<builtin>.id"], "doctest.DocTestFinder._from_module": ["<builtin>.hasattr", "inspect.isfunction", "<builtin>.isinstance", "inspect.isclass", "inspect.ismethoddescriptor", "<builtin>.ValueError", "inspect.getmodule"], "inspect.isroutine": ["inspect.ismethoddescriptor", "inspect.isfunction", "inspect.isbuiltin", "inspect.ismethod"], "sys.base_prefix.startswith": [], "sys.path.startswith": [], "sys.path.split": [], "sys.base_prefix.split": [], "ntpath.isabs": ["<builtin>.isinstance", "ntpath._get_bothseps", "sys.path.replace", "<builtin>.len", "ntpath.splitdrive", "sys.base_prefix.replace"], "sys.path.lstrip": [], "sys.base_prefix.lstrip": [], "psutil._pslinux.sensors_battery.multi_bcat": ["<builtin>.int", "_common.bcat"], "_common.sbattery": [], "_psutil_bsd.sensors_battery": [], "_psutil_windows.sensors_battery": [], "threading._DummyThread._stop": [], "threading.Thread._stop": [], "_psposix.pid_exists": [], "sre_compile._bytes_to_codes": ["<builtin>.memoryview", "<builtin>.len"], "sre_compile._mk_bitmap": ["<builtin>.len", "<builtin>.range"], "sre_compile._get_iscased": [], "<builtin>.AssertionError": [], "sre_parse._escape": ["sre_parse.Tokenizer.getwhile", "sre_parse.Tokenizer.error", "<builtin>.int", "<builtin>.ord", "<builtin>.len", "sre_parse.Tokenizer.getuntil", "sre_parse.Tokenizer.get", "sre_parse.Tokenizer.match", "sre_parse.State.checklookbehindgroup", "unicodedata", "<builtin>.chr", "sre_parse.State.checkgroup"], "sre_parse.State.opengroup": ["sre_constants.error.__init__"], "sre_parse.State.closegroup": ["sre_parse.SubPattern.getwidth"], "sre_parse.Tokenizer.get": ["sre_parse.Tokenizer.__next"], "sre_parse.State.checklookbehindgroup": ["sre_parse.State.checkgroup", "sre_parse.Tokenizer.error"], "sre_parse.State.checkgroup": [], "sre_parse._parse_flags": ["<builtin>.len", "sre_parse.Tokenizer.get", "sre_parse.Tokenizer.error"], "sre_parse._uniq": ["<builtin>.list"], "sre_parse.Tokenizer.getuntil": ["<builtin>.len", "sre_parse.Tokenizer.__next", "sre_parse.Tokenizer.error"], "sre_parse._class_escape": ["sre_parse.Tokenizer.getwhile", "sre_parse.Tokenizer.error", "<builtin>.int", "<builtin>.ord", "<builtin>.len", "sre_parse.Tokenizer.getuntil", "sre_parse.Tokenizer.match", "unicodedata", "<builtin>.chr"], "<builtin>.OverflowError": [], "weakref.WeakValueDictionary._commit_removals": ["_weakref._remove_dead_weakref"], "functools._c3_mro": ["<builtin>.hasattr", "<builtin>.issubclass", "<builtin>.reversed", "<builtin>.any", "<builtin>.list", "<builtin>.len", "functools._c3_mro", "<builtin>.enumerate", "functools._c3_merge"], "functools._compose_mro.is_related": ["<builtin>.hasattr", "<builtin>.issubclass"], "functools._compose_mro.is_strict_base": [], "socket.socket.close": ["socket.socket._real_close"], "http.client.HTTPResponse._get_chunk_left": ["http.client.HTTPResponse._close_conn", "http.client.HTTPResponse._safe_read", "http.client.HTTPResponse._read_next_chunk_size", "http.client.IncompleteRead.__init__", "http.client.HTTPResponse._read_and_discard_trailer"], "http.client.IncompleteRead.__init__": [], "http.client.HTTPResponse._readinto_chunked": ["<builtin>.memoryview", "http.client.HTTPResponse._safe_readinto", "<builtin>.len", "http.client.HTTPResponse._get_chunk_left", "<builtin>.bytes", "http.client.IncompleteRead.__init__"], "io.UnsupportedOperation": [], "bz2.BZ2File.readable": ["_compression.BaseStream._check_not_closed"], "gzip.GzipFile.readable": [], "lzma.LZMAFile.readable": ["_compression.BaseStream._check_not_closed"], "sys.stdout.buffer.flush": [], "sys.path.flush": [], "sys.stdin.buffer.flush": [], "logging.StreamHandler.flush": ["<builtin>.hasattr", "sys.stderr.flush", "logging.StreamHandler.flush", "logging.Handler.acquire", "logging.Handler.release"], "sys.base_prefix.flush": [], "zipfile.ZipExtFile._read2": ["<builtin>.min", "zipfile._ZipDecrypter.decrypter", "<builtin>.len", "<builtin>.max", "zipfile._SharedFile.read"], "zipfile.LZMADecompressor.decompress": ["<builtin>.len"], "zipfile.ZipExtFile._update_crc": [], "gzip._GzipReader._read_exact": ["sys.base_prefix.read", "<builtin>.len", "<builtin>.EOFError", "sys.path.read"], "tarfile._Stream.write": ["<builtin>.len", "tarfile._Stream.__write"], "tarfile._Stream.close": ["tarfile._LowLevelFile.close", "tarfile._StreamProxy.close", "tarfile._LowLevelFile.write"], "<builtin>.divmod": [], "zipfile.ZipInfo._encodeFilenameFlags": ["sys.path.encode", "sys.base_prefix.encode"], "zipfile.LZMACompressor._init": ["<builtin>.len"], "zipfile.LZMACompressor.compress": ["zipfile.LZMACompressor._init"], "_compression.BaseStream._check_can_write": ["io.UnsupportedOperation", "gzip.GzipFile.writable", "bz2.BZ2File.writable", "lzma.LZMAFile.writable"], "zipfile.ZipFile._fpclose": ["zipfile._Tellable.close", "zipfile.ZipFile.close"], "_winapi.GetFileType": [], "contextlib._BaseExitStack.__init__": [], "_winapi.DuplicateHandle": [], "_winapi.GetCurrentProcess": [], "tokenize._compile": ["re.compile"], "sys.stdin.readline": [], "<builtin>.IndentationError": [], "itertools.repeat": [], "itertools.chain": [], "tokenize.detect_encoding": ["tokenize.detect_encoding.find_cookie", "tokenize.detect_encoding.read_or_stop"], "locale._replace_encoding": ["encodings.aliases.aliases.get", "encodings.normalize_encoding"], "locale._append_modifier": ["locale._replace_encoding"], "locale._group": ["<builtin>.len", "locale._grouping_intervals", "locale.localeconv"], "locale.localeconv": ["locale.localeconv"], "locale._strip_padding": ["<builtin>.len"], "logging.Handler.format": ["logging.Formatter.format"], "logging.Handler.handleError": ["ntpath.dirname", "traceback.print_exception", "sys.stderr.write", "posixpath.dirname", "traceback.print_stack", "sys.exc_info"], "traceback.FrameSummary.__init__": ["<builtin>.repr"], "linecache.lazycache": ["<builtin>.len", "<builtin>.getattr"], "linecache.checkcache": ["<builtin>.len", "<builtin>.list"], "collections.deque": [], "pprint.PrettyPrinter._pprint_dict": ["<builtin>.len", "pprint.PrettyPrinter._format_dict_items", "<builtin>.sorted", "sys.stdout.write"], "pprint.PrettyPrinter._repr": ["pprint.PrettyPrinter.format"], "argparse.HelpFormatter._join_parts": [], "argparse.HelpFormatter._format_action_invocation": ["argparse.HelpFormatter._metavar_formatter.format", "argparse.HelpFormatter._get_default_metavar_for_optional", "argparse.HelpFormatter._get_default_metavar_for_positional", "argparse.HelpFormatter._format_args", "argparse.HelpFormatter._metavar_formatter"], "argparse.HelpFormatter._iter_indented_subactions": ["argparse.HelpFormatter._indent", "argparse.HelpFormatter._dedent"], "calendar.Calendar": ["<builtin>.property"], "calendar.IllegalWeekdayError": [], "calendar._localized_day.__init__": [], "calendar.LocaleTextCalendar": [], "calendar.main": ["argparse", "argparse.ArgumentParser.error", "<builtin>.dict", "calendar.Calendar.__init__", "calendar.HTMLCalendar.formatmonth", "argparse._ActionsContainer.add_argument_group", "calendar.LocaleTextCalendar.__init__", "sys.stdout.buffer.write", "calendar.TextCalendar.formatmonth", "sys.exit", "sys.getdefaultencoding", "calendar.HTMLCalendar.formatyear", "calendar.HTMLCalendar.formatyearpage", "argparse.ArgumentParser.parse_args", "calendar.LocaleHTMLCalendar.__init__", "argparse._ActionsContainer.add_argument", "calendar.TextCalendar.formatyear", "argparse.ArgumentParser.__init__", "sys.stdout.write"], "calendar.TextCalendar": [], "datetime.datetime.date": ["datetime.datetime.date"], "calendar.IllegalMonthError": [], "calendar.HTMLCalendar": [], "calendar.LocaleHTMLCalendar": [], "calendar.Calendar.__init__": [], "calendar._localized_day": ["datetime.datetime.date", "<builtin>.range"], "calendar.different_locale": [], "calendar._localized_month.__init__": [], "calendar._localized_month": ["datetime.datetime.date", "<builtin>.range"], "quopri.ishex": ["<builtin>.isinstance"], "quopri.unhex": ["<builtin>.ord", "<builtin>.bytes", "<builtin>.repr"], "quopri.needsquoting": ["<builtin>.isinstance"], "quopri.quote": ["<builtin>.ord", "<builtin>.len", "<builtin>.bytes", "<builtin>.isinstance"], "quopri.encode.write": ["sys.stdout.buffer.write", "quopri.quote"], "optparse.OptionGroup.__init__": ["optparse.OptionContainer.__init__"], "optparse.OptionContainer._check_conflict": ["optparse.OptionError.__init__"], "optparse.OptionValueError": [], "optparse.AmbiguousOptionError": [], "optparse.BadOptionError": [], "optparse.IndentedHelpFormatter": [], "optparse.OptionContainer": [], "optparse.OptionParser": [], "optparse.OptionError": [], "optparse.OptionConflictError": [], "textwrap": ["textwrap.TextWrapper", "<builtin>.print", "re.compile", "textwrap.dedent", "re"], "optparse.OptionGroup": [], "optparse.Option": [], "optparse.Values": [], "optparse.HelpFormatter": [], "optparse.OptParseError": [], "optparse.TitledHelpFormatter": [], "optparse.OptionParser.exit": ["sys.stderr.write", "sys.exit"], "optparse.OptionParser.get_prog_name": ["posixpath.basename", "ntpath.basename"], "optparse.OptionParser.print_usage": ["<builtin>.print", "optparse.OptionParser.get_usage"], "optparse.OptionParser._process_args": ["optparse.OptionParser._process_long_opt", "<builtin>.len", "optparse.OptionParser._process_short_opts"], "optparse.OptionParser._get_args": [], "optparse.OptionParser.get_default_values": ["optparse.OptionParser._get_all_options", "<builtin>.isinstance", "optparse.Values.__init__"], "optparse.OptionParser.check_values": [], "optparse.OptionParser._populate_option_list": ["optparse.OptionParser._add_help_option", "optparse.OptionContainer.add_options", "optparse.OptionParser._add_version_option"], "optparse.OptionParser._init_parsing_state": [], "optparse.HelpFormatter.set_parser": [], "optparse.OptionParser.set_usage": ["gettext.gettext"], "optparse.OptionContainer.__init__": ["optparse.OptionParser._create_option_list", "optparse.OptionContainer.set_conflict_handler", "optparse.OptionContainer.set_description", "optparse.OptionGroup._create_option_list"], "optparse.IndentedHelpFormatter.__init__": ["optparse.HelpFormatter.__init__"], "getopt.long_has_args": ["<builtin>.len", "gettext.gettext", "getopt.GetoptError.__init__"], "getopt.GetoptError.__init__": [], "getopt.short_has_arg": ["<builtin>.len", "<builtin>.range", "gettext.gettext", "getopt.GetoptError.__init__"], "psutil._psbsd.Process.name": ["_psutil_bsd.proc_name", "psutil._psbsd.Process.oneshot"], "psutil._psbsd.Process.__init__": [], "psutil._pssunos.Process.__init__": ["_common.get_procfs_path"], "psutil._pslinux.Process.__init__": ["_common.get_procfs_path"], "psutil.Process.create_time": ["psutil._pslinux.Process.create_time", "psutil._psaix.Process.create_time", "psutil._pswindows.Process.create_time", "psutil._psbsd.Process.create_time", "psutil._pssunos.Process.create_time"], "psutil._pswindows.Process.__init__": [], "psutil._psaix.Process.__init__": ["_common.get_procfs_path"], "_common.NoSuchProcess": [], "_psosx.Process": [], "psutil._pssunos.Process.oneshot_exit": [], "psutil._psaix.Process.oneshot_exit": [], "psutil._psbsd.Process.oneshot_enter": [], "psutil._psaix.Process.oneshot_enter": [], "psutil._psbsd.Process.oneshot_exit": [], "psutil._pswindows.Process.oneshot_enter": [], "psutil._pssunos.Process.oneshot_enter": [], "psutil._pswindows.Process.oneshot_exit": [], "psutil._pslinux.Process.oneshot_enter": [], "psutil._pslinux.Process.oneshot_exit": [], "traceback._format_final_exc_line": ["traceback._some_str"], "argparse.ArgumentParser._check_value": ["<builtin>.map", "argparse.ArgumentError.__init__", "gettext.gettext"], "gettext.dngettext": ["gettext.NullTranslations.ngettext", "gettext.translation"], "inspect.getsourcelines": ["inspect.ismodule", "inspect.unwrap", "inspect.istraceback", "inspect.getblock", "inspect.isframe", "inspect.findsource"], "_bootstrap._setup": [], "_frozen_importlib_external._setup": ["_frozen_importlib_external._make_relax_case", "_frozen_importlib._builtin_from_name", "_bootstrap._builtin_from_name", "_bootstrap._imp.extension_suffixes", "<builtin>.len", "<builtin>.all", "<builtin>.setattr"], "importlib._bootstrap_external": ["importlib._bootstrap_external.FileLoader", "importlib._bootstrap_external._NamespaceLoader", "importlib._bootstrap_external._LoaderBasics", "importlib._bootstrap_external._NamespacePath", "importlib._bootstrap_external.PathFinder", "importlib._bootstrap_external.SourceFileLoader", "importlib._bootstrap_external.FileFinder", "<builtin>.type", "importlib._bootstrap_external.SourceLoader", "importlib._bootstrap_external.SourcelessFileLoader", "importlib._bootstrap_external.WindowsRegistryFinder", "<builtin>.object", "importlib._bootstrap_external.ExtensionFileLoader"], "_frozen_importlib._setup": ["<builtin>.isinstance", "<builtin>.type", "_frozen_importlib._builtin_from_name", "_imp.is_frozen", "_frozen_importlib._spec_from_module", "sys.modules.items", "_frozen_importlib._init_module_attrs", "<builtin>.setattr"], "_bootstrap_external._setup": [], "_frozen_importlib._gcd_import": ["_frozen_importlib._sanity_check", "_frozen_importlib._find_and_load", "_frozen_importlib._resolve_name"], "_bootstrap._gcd_import": [], "dis.dis": ["<builtin>.hasattr", "dis.distb", "<builtin>.isinstance", "dis._disassemble_str", "<builtin>.print", "dis._disassemble_recursive", "<builtin>.type", "dis._disassemble_bytes", "<builtin>.TypeError", "<builtin>.sorted", "dis.dis"], "opcode.def_op": [], "_opcode": [], "opcode.name_op": ["opcode.def_op"], "opcode.jrel_op": ["opcode.def_op"], "opcode.jabs_op": ["opcode.def_op"], "doctest.DocTestParser.get_examples": ["<builtin>.isinstance", "doctest.DocTestParser.parse"], "doctest.DocTest.__init__": ["<builtin>.isinstance"], "doctest._module_relative_path": ["<builtin>.hasattr", "inspect.ismodule", "posixpath.join", "ntpath.join", "sys.path.split", "ntpath.split", "posixpath.split", "sys.base_prefix.startswith", "ntpath.exists", "sys.base_prefix.split", "<builtin>.ValueError", "posixpath.exists", "<builtin>.TypeError", "<builtin>.len", "sys.path.startswith"], "doctest._newline_convert": [], "doctest._normalize_module": ["<builtin>.locals", "inspect.ismodule", "<builtin>.__import__", "<builtin>.isinstance", "sys._getframe", "<builtin>.TypeError", "<builtin>.globals"], "asyncio.windows_events": ["socket", "struct", "asyncio.windows_events._BaseWaitHandleFuture", "asyncio.windows_events.IocpProactor", "asyncio.windows_events.WindowsProactorEventLoopPolicy", "asyncio.windows_events._WindowsSubprocessTransport", "asyncio.windows_events._WaitCancelFuture", "asyncio.windows_events._WindowsSelectorEventLoop", "asyncio.windows_events.WindowsSelectorEventLoopPolicy", "asyncio.windows_events.ProactorEventLoop", "weakref", "asyncio.proactor_events", "asyncio.windows_events._WaitHandleFuture", "asyncio.windows_events._OverlappedFuture", "math", "asyncio.windows_events.PipeServer", "asyncio.windows_utils"], "unittest.main.TestProgram.__init__.failfast": [], "unittest.result.TestResult.failfast": [], "unittest.runner.TextTestRunner.failfast": [], "unittest.case.TestCase._deprecate": [], "<builtin>.staticmethod": [], "doctest.UnexpectedException.__init__": [], "doctest.DocTestFailure.__init__": [], "doctest.SkipDocTestCase.__init__": ["doctest.DocTestCase.__init__"], "doctest._indent": ["re.sub"], "doctest.DocTestRunner._failure_header": ["doctest._indent"], "_io.StringIO.getvalue": [], "_io.StringIO.seek": [], "_io.StringIO.truncate": [], "pdb.Pdb.set_continue": [], "nt._getfinalpathname": [], "ntpath._getfinalpathname_nonstrict": ["ntpath._readlink_deep", "ntpath.join", "nt._getfinalpathname", "ntpath.split"], "posixpath._joinrealpath": ["posixpath._joinrealpath", "posixpath.join", "<builtin>.isinstance", "posixpath.split", "posixpath.islink", "sys.path.partition", "sys.base_prefix.partition", "posixpath.isabs"], "doctest.DocTestFinder._find_lineno": ["inspect.ismodule", "inspect.isfunction", "inspect.isclass", "inspect.istraceback", "re.compile", "<builtin>.len", "<builtin>.range", "<builtin>.enumerate", "<builtin>.getattr", "inspect.iscode", "inspect.isframe", "inspect.ismethod"], "inspect.unwrap._is_wrapper": ["<builtin>.hasattr", "inspect._signature_from_callable.<lambda1>"], "sys.getrecursionlimit": [], "inspect.ismethoddescriptor": ["<builtin>.hasattr", "inspect.isfunction", "inspect.isclass", "<builtin>.type", "inspect.ismethod"], "inspect.isbuiltin": ["<builtin>.isinstance"], "sre_parse.Tokenizer.getwhile": ["sre_parse.Tokenizer.__next", "<builtin>.range"], "unicodedata": [], "_weakref._remove_dead_weakref": [], "functools._c3_merge": ["<builtin>.RuntimeError"], "socket.socket._real_close": [], "http.client.HTTPResponse._read_next_chunk_size": ["http.client.LineTooLong.__init__", "<builtin>.len", "<builtin>.int", "http.client.HTTPResponse._close_conn"], "http.client.HTTPResponse._read_and_discard_trailer": ["http.client.LineTooLong.__init__", "<builtin>.len"], "http.client.HTTPResponse._safe_readinto": ["<builtin>.len", "<builtin>.bytes", "http.client.IncompleteRead.__init__"], "sys.stderr.flush": [], "zipfile._ZipDecrypter.decrypter": ["<builtin>.bytearray", "<builtin>.bytes", "zipfile._ZipDecrypter.update_keys"], "zipfile._SharedFile.read": ["zipfile.ZipFile.read", "zipfile.ZipFile.open.<lambda1>", "<builtin>.ValueError", "zipfile._Tellable.tell"], "tarfile._Stream.__write": ["<builtin>.len", "tarfile._LowLevelFile.write"], "tarfile._LowLevelFile.close": [], "tarfile._StreamProxy.close": ["tarfile._LowLevelFile.close", "tarfile._StreamProxy.close"], "tarfile._LowLevelFile.write": [], "sys.path.encode": [], "sys.base_prefix.encode": [], "gzip.GzipFile.writable": [], "bz2.BZ2File.writable": ["_compression.BaseStream._check_not_closed"], "lzma.LZMAFile.writable": ["_compression.BaseStream._check_not_closed"], "zipfile._Tellable.close": ["zipfile._Tellable.close", "zipfile.ZipFile.close"], "zipfile.ZipFile.close": ["zipfile.ZipFile._write_end_record", "zipfile.ZipFile._fpclose", "<builtin>.ValueError"], "tokenize.detect_encoding.find_cookie": ["<builtin>.SyntaxError", "tokenize._get_normal_name"], "tokenize.detect_encoding.read_or_stop": ["_io._BufferedIOBase.readline", "http.client.HTTPResponse.readline", "lzma.LZMAFile.readline", "gzip.GzipFile.readline", "zipfile.ZipExtFile.readline", "sys.stdout.readline", "_io._IOBase.readline", "bz2.BZ2File.readline"], "encodings.aliases.aliases.get": [], "encodings.normalize_encoding": ["<builtin>.str", "<builtin>.isinstance"], "locale._grouping_intervals": ["<builtin>.ValueError"], "logging.Formatter.format": ["logging.Formatter.usesTime", "logging.Formatter.formatTime", "logging.Formatter.formatStack", "logging.Formatter.formatException", "logging.Formatter.formatMessage"], "pprint.PrettyPrinter._format_dict_items": ["<builtin>.len", "<builtin>.enumerate", "pprint.PrettyPrinter._format", "pprint.PrettyPrinter._repr", "sys.stdout.write"], "pprint.PrettyPrinter.format": ["pprint._safe_repr"], "argparse.HelpFormatter._get_default_metavar_for_optional": [], "argparse.HelpFormatter._get_default_metavar_for_positional": [], "calendar.HTMLCalendar.formatmonth": ["calendar.HTMLCalendar.formatweekheader", "calendar.LocaleHTMLCalendar.formatmonthname", "calendar.HTMLCalendar.formatmonthname", "calendar.Calendar.monthdays2calendar", "calendar.HTMLCalendar.formatweek"], "calendar.LocaleTextCalendar.__init__": ["locale.getdefaultlocale", "calendar.Calendar.__init__"], "calendar.TextCalendar.formatmonth": ["calendar.TextCalendar.formatweek", "calendar.Calendar.monthdays2calendar", "calendar.LocaleTextCalendar.formatmonthname", "<builtin>.max", "calendar.TextCalendar.formatweekheader", "calendar.TextCalendar.formatmonthname"], "sys.getdefaultencoding": [], "calendar.HTMLCalendar.formatyear": ["<builtin>.range", "calendar.HTMLCalendar.formatmonth", "<builtin>.min", "<builtin>.max"], "calendar.HTMLCalendar.formatyearpage": ["sys.getdefaultencoding", "calendar.HTMLCalendar.formatyear"], "calendar.LocaleHTMLCalendar.__init__": ["locale.getdefaultlocale", "calendar.Calendar.__init__"], "calendar.TextCalendar.formatyear": ["calendar.TextCalendar.formatweek", "<builtin>.min", "calendar.formatstring", "<builtin>.range", "<builtin>.enumerate", "calendar.LocaleTextCalendar.formatmonthname", "<builtin>.len", "<builtin>.repr", "<builtin>.max", "calendar.TextCalendar.formatweekheader", "calendar.Calendar.yeardays2calendar", "calendar.TextCalendar.formatmonthname"], "optparse.OptionError.__init__": ["<builtin>.str"], "textwrap.TextWrapper": ["<builtin>.ord", "re.compile", "re.escape"], "textwrap.dedent": ["<builtin>.enumerate", "<builtin>.zip", "re.sub"], "optparse.OptionParser.get_usage": ["optparse.OptionParser.expand_prog_name", "optparse.IndentedHelpFormatter.format_usage"], "optparse.OptionParser._process_long_opt": ["gettext.gettext", "optparse.OptionParser._match_long_opt", "<builtin>.tuple", "optparse.OptionParser.error", "<builtin>.len", "gettext.ngettext"], "optparse.OptionParser._process_short_opts": ["optparse.BadOptionError.__init__", "<builtin>.tuple", "optparse.OptionParser.error", "<builtin>.len", "gettext.ngettext"], "optparse.OptionParser._get_all_options": [], "optparse.Values.__init__": ["<builtin>.setattr"], "optparse.OptionParser._add_help_option": ["optparse.OptionContainer.add_option", "gettext.gettext"], "optparse.OptionContainer.add_options": ["optparse.OptionContainer.add_option"], "optparse.OptionParser._add_version_option": ["optparse.OptionContainer.add_option", "gettext.gettext"], "optparse.OptionParser._create_option_list": ["optparse.OptionContainer._create_option_mappings"], "optparse.OptionContainer.set_conflict_handler": ["<builtin>.ValueError"], "optparse.OptionContainer.set_description": [], "optparse.OptionGroup._create_option_list": ["optparse.OptionContainer._share_option_mappings"], "optparse.HelpFormatter.__init__": ["<builtin>.int", "<builtin>.min", "<builtin>.max"], "_psutil_bsd.proc_name": [], "psutil._pslinux.Process.create_time": ["psutil._pslinux.boot_time", "<builtin>.float", "psutil._pslinux.Process._parse_stat_file"], "psutil._psaix.Process.create_time": ["psutil._psaix.Process._proc_basic_info"], "psutil._pswindows.Process.create_time": ["psutil._pswindows.Process._proc_info", "_psutil_windows.proc_times", "psutil._pswindows.is_permission_err"], "psutil._psbsd.Process.create_time": ["psutil._psbsd.Process.oneshot"], "psutil._pssunos.Process.create_time": ["psutil._pssunos.Process._proc_basic_info"], "gettext.NullTranslations.ngettext": [], "inspect.getblock": ["inspect.BlockFinder.tokeneater", "inspect.BlockFinder.__init__", "<builtin>.iter"], "_frozen_importlib_external._make_relax_case": [], "_frozen_importlib._builtin_from_name": ["_frozen_importlib.BuiltinImporter.find_spec", "<builtin>.ImportError", "_frozen_importlib._load_unlocked"], "_bootstrap._builtin_from_name": [], "_bootstrap._imp.extension_suffixes": [], "importlib._bootstrap_external.FileLoader": ["importlib._bootstrap_external._check_name"], "importlib._bootstrap_external._NamespaceLoader": [], "importlib._bootstrap_external._LoaderBasics": [], "importlib._bootstrap_external._NamespacePath": [], "importlib._bootstrap_external.PathFinder": [], "importlib._bootstrap_external.SourceFileLoader": [], "importlib._bootstrap_external.FileFinder": [], "importlib._bootstrap_external.SourceLoader": [], "importlib._bootstrap_external.SourcelessFileLoader": [], "importlib._bootstrap_external.WindowsRegistryFinder": [], "importlib._bootstrap_external.ExtensionFileLoader": ["importlib._bootstrap_external._check_name"], "_imp.is_frozen": [], "_frozen_importlib._spec_from_module": ["_frozen_importlib.ModuleSpec.__init__", "<builtin>.list"], "sys.modules.items": [], "_frozen_importlib._init_module_attrs": ["<builtin>.getattr"], "_frozen_importlib._sanity_check": ["<builtin>.isinstance", "<builtin>.type", "<builtin>.ValueError", "<builtin>.TypeError", "<builtin>.ImportError"], "_frozen_importlib._find_and_load": ["_frozen_importlib._find_and_load_unlocked", "_frozen_importlib._ModuleLockManager.__init__", "<builtin>.ModuleNotFoundError", "_frozen_importlib._lock_unlock_module"], "_frozen_importlib._resolve_name": ["<builtin>.len", "<builtin>.ValueError"], "dis.distb": ["<builtin>.RuntimeError", "dis.disassemble"], "dis._disassemble_str": ["dis._disassemble_recursive", "dis._try_compile"], "dis._disassemble_recursive": ["<builtin>.hasattr", "<builtin>.print", "dis._disassemble_recursive", "dis.disassemble"], "dis._disassemble_bytes": ["dis._get_instructions_bytes", "dis.Instruction._disassemble", "<builtin>.str", "<builtin>.print", "<builtin>.len", "<builtin>.max"], "doctest.DocTestParser.parse": ["<builtin>.len", "doctest.Example.__init__", "doctest.DocTestParser._min_indent", "doctest.DocTestParser._parse_example"], "asyncio.windows_events._BaseWaitHandleFuture": [], "asyncio.windows_events.IocpProactor": [], "asyncio.windows_events.WindowsProactorEventLoopPolicy": [], "asyncio.windows_events._WindowsSubprocessTransport": [], "asyncio.windows_events._WaitCancelFuture": [], "asyncio.windows_events._WindowsSelectorEventLoop": [], "asyncio.windows_events.WindowsSelectorEventLoopPolicy": [], "asyncio.windows_events.ProactorEventLoop": [], "asyncio.proactor_events": ["threading", "asyncio.proactor_events._ProactorWritePipeTransport", "socket", "io", "collections", "asyncio.proactor_events._ProactorBasePipeTransport", "asyncio.proactor_events._ProactorDatagramTransport", "asyncio.proactor_events._ProactorReadPipeTransport", "asyncio.proactor_events._ProactorDuplexPipeTransport", "asyncio.proactor_events._ProactorSocketTransport", "asyncio.proactor_events._ProactorBaseWritePipeTransport", "os", "warnings", "asyncio.proactor_events.BaseProactorEventLoop", "signal"], "asyncio.windows_events._WaitHandleFuture": [], "asyncio.windows_events._OverlappedFuture": [], "asyncio.windows_events.PipeServer": [], "asyncio.windows_utils": ["asyncio.windows_utils.PipeHandle", "asyncio.windows_utils.Popen", "tempfile", "itertools.count", "subprocess", "os", "<builtin>.ImportError", "warnings"], "doctest.DocTestCase.__init__": ["unittest.case.TestCase.__init__"], "ntpath._readlink_deep": ["ntpath.dirname", "ntpath.isabs", "ntpath.join", "ntpath.islink", "ntpath.normcase", "nt.readlink", "<builtin>.set", "ntpath.normpath"], "posixpath.islink": ["stat.S_ISLNK"], "sys.path.partition": [], "sys.base_prefix.partition": [], "inspect._signature_from_callable.<lambda1>": ["<builtin>.hasattr"], "http.client.LineTooLong.__init__": [], "zipfile._ZipDecrypter.update_keys": ["zipfile._ZipDecrypter.crc32"], "zipfile.ZipFile.read": ["zipfile.ZipFile.read", "zipfile.ZipFile.open"], "zipfile.ZipFile.open.<lambda1>": [], "zipfile._Tellable.tell": [], "zipfile.ZipFile._write_end_record": ["<builtin>.min", "<builtin>.print", "zipfile._Tellable.write", "zipfile._strip_extra", "zipfile.ZipFile.write", "<builtin>.len", "<builtin>.max", "zipfile._Tellable.flush", "zipfile._Tellable.tell"], "tokenize._get_normal_name": [], "_io._BufferedIOBase.readline": [], "http.client.HTTPResponse.readline": ["http.client.HTTPResponse._close_conn", "<builtin>.len", "<builtin>.super"], "lzma.LZMAFile.readline": ["_compression.BaseStream._check_can_read"], "gzip.GzipFile.readline": ["_compression.BaseStream._check_not_closed"], "zipfile.ZipExtFile.readline": ["_io._BufferedIOBase.readline", "http.client.HTTPResponse.readline", "lzma.LZMAFile.readline", "gzip.GzipFile.readline", "zipfile.ZipExtFile.readline", "_io._IOBase.readline", "bz2.BZ2File.readline"], "sys.stdout.readline": [], "_io._IOBase.readline": [], "bz2.BZ2File.readline": ["<builtin>.hasattr", "_compression.BaseStream._check_can_read", "<builtin>.isinstance", "_io._BufferedIOBase.__index__", "<builtin>.TypeError", "_io._IOBase.__index__"], "logging.Formatter.usesTime": [], "logging.Formatter.formatTime": ["time.strftime", "time.localtime"], "logging.Formatter.formatStack": [], "logging.Formatter.formatException": ["traceback.print_exception", "io.StringIO"], "logging.Formatter.formatMessage": [], "calendar.HTMLCalendar.formatweekheader": ["calendar.LocaleHTMLCalendar.formatweekday", "calendar.HTMLCalendar.formatweekday", "calendar.Calendar.iterweekdays"], "calendar.LocaleHTMLCalendar.formatmonthname": ["calendar.different_locale.__init__"], "calendar.HTMLCalendar.formatmonthname": [], "calendar.Calendar.monthdays2calendar": ["<builtin>.len", "<builtin>.range", "calendar.Calendar.itermonthdays2", "<builtin>.list"], "calendar.HTMLCalendar.formatweek": ["calendar.HTMLCalendar.formatday"], "calendar.TextCalendar.formatweek": ["calendar.TextCalendar.formatday"], "calendar.LocaleTextCalendar.formatmonthname": ["calendar.different_locale.__init__"], "calendar.TextCalendar.formatweekheader": ["calendar.TextCalendar.formatweekday", "calendar.LocaleTextCalendar.formatweekday", "calendar.Calendar.iterweekdays"], "calendar.TextCalendar.formatmonthname": [], "calendar.formatstring": [], "calendar.Calendar.yeardays2calendar": ["calendar.Calendar.monthdays2calendar", "<builtin>.range", "<builtin>.len"], "optparse.OptionParser.expand_prog_name": ["optparse.OptionParser.get_prog_name"], "optparse.IndentedHelpFormatter.format_usage": ["gettext.gettext"], "optparse.OptionParser._match_long_opt": ["optparse._match_abbrev"], "optparse.BadOptionError.__init__": [], "optparse.OptionContainer._create_option_mappings": [], "optparse.OptionContainer._share_option_mappings": [], "psutil._pslinux.boot_time": ["_common.open_binary", "<builtin>.float", "_common.get_procfs_path", "<builtin>.RuntimeError"], "psutil._pslinux.Process._parse_stat_file": ["_common.bcat"], "psutil._psaix.Process._proc_basic_info": ["_psutil_aix.proc_basic_info"], "psutil._pswindows.Process._proc_info": ["<builtin>.len", "_psutil_windows.proc_info"], "_psutil_windows.proc_times": [], "psutil._pswindows.is_permission_err": ["<builtin>.getattr", "<builtin>.isinstance"], "inspect.BlockFinder.tokeneater": [], "inspect.BlockFinder.__init__": [], "_frozen_importlib.BuiltinImporter.find_spec": ["_frozen_importlib.spec_from_loader"], "_frozen_importlib._load_unlocked": ["<builtin>.hasattr", "_frozen_importlib.module_from_spec", "_frozen_importlib.BuiltinImporter.exec_module", "_frozen_importlib.FrozenImporter.exec_module", "_frozen_importlib._load_backward_compatible", "<builtin>.ImportError", "_frozen_importlib._verbose_message"], "importlib._bootstrap_external._check_name": ["importlib._bootstrap_external._check_name._wrap"], "_frozen_importlib.ModuleSpec.__init__": [], "_frozen_importlib._find_and_load_unlocked": ["_frozen_importlib._find_spec", "_frozen_importlib._call_with_frames_removed", "<builtin>.ModuleNotFoundError", "_frozen_importlib._load_unlocked", "<builtin>.setattr"], "_frozen_importlib._ModuleLockManager.__init__": [], "<builtin>.ModuleNotFoundError": [], "_frozen_importlib._lock_unlock_module": ["_frozen_importlib._get_module_lock", "_frozen_importlib._DummyModuleLock.release", "_frozen_importlib._DummyModuleLock.acquire", "_frozen_importlib._ModuleLock.release", "_frozen_importlib._ModuleLock.acquire"], "dis.disassemble": ["dis.findlinestarts", "<builtin>.dict", "dis._disassemble_bytes"], "dis._try_compile": ["<builtin>.compile"], "dis._get_instructions_bytes": ["dis._unpack_opargs", "dis._get_const_info", "dis._get_name_info", "<builtin>.enumerate", "<builtin>.bool", "<builtin>.repr", "dis.findlabels"], "dis.Instruction._disassemble": ["<builtin>.repr"], "doctest.Example.__init__": [], "doctest.DocTestParser._min_indent": ["<builtin>.len", "<builtin>.min"], "doctest.DocTestParser._parse_example": ["re.match", "doctest.DocTestParser._check_prefix", "<builtin>.len", "doctest.DocTestParser._check_prompt_blank", "doctest.DocTestParser._find_options"], "asyncio.proactor_events._ProactorWritePipeTransport": [], "asyncio.proactor_events._ProactorBasePipeTransport": [], "asyncio.proactor_events._ProactorDatagramTransport": [], "asyncio.proactor_events._ProactorReadPipeTransport": [], "asyncio.proactor_events._ProactorDuplexPipeTransport": [], "asyncio.proactor_events._ProactorSocketTransport": [], "asyncio.proactor_events._ProactorBaseWritePipeTransport": [], "asyncio.proactor_events.BaseProactorEventLoop": [], "asyncio.windows_utils.PipeHandle": [], "asyncio.windows_utils.Popen": [], "unittest.case.TestCase.__init__": ["unittest.case.TestCase.addTypeEqualityFunc", "<builtin>.getattr", "<builtin>.ValueError"], "ntpath.islink": ["stat.S_ISLNK"], "nt.readlink": [], "stat.S_ISLNK": ["stat.S_IFMT"], "zipfile._ZipDecrypter.crc32": [], "zipfile.ZipFile.open": ["zipfile.ZipInfo.__init__", "zipfile._SharedFile.close", "zipfile.ZipFile.getinfo", "<builtin>.isinstance", "zipfile.ZipExtFile.__init__", "<builtin>.type", "<builtin>.ValueError", "zipfile.ZipFile._open_to_write", "zipfile._SharedFile.__init__", "<builtin>.TypeError", "<builtin>.len", "<builtin>.NotImplementedError", "<builtin>.RuntimeError", "zipfile._SharedFile.read"], "zipfile._Tellable.write": ["zipfile._Tellable.write", "zipfile.ZipFile.write"], "zipfile._strip_extra": ["<builtin>.len"], "zipfile.ZipFile.write": ["zipfile.ZipFile.open", "zipfile._Tellable.write", "<builtin>.ValueError", "zipfile.ZipFile.write", "zipfile.ZipFile._writecheck", "zipfile.ZipInfo.from_file", "shutil.copyfileobj", "zipfile._Tellable.tell"], "zipfile._Tellable.flush": ["zipfile._Tellable.flush"], "_io._BufferedIOBase.__index__": [], "_io._IOBase.__index__": [], "calendar.LocaleHTMLCalendar.formatweekday": ["calendar.different_locale.__init__"], "calendar.HTMLCalendar.formatweekday": [], "calendar.Calendar.iterweekdays": ["<builtin>.range"], "calendar.different_locale.__init__": [], "calendar.Calendar.itermonthdays2": ["<builtin>.enumerate", "calendar.Calendar.itermonthdays"], "calendar.HTMLCalendar.formatday": [], "calendar.TextCalendar.formatday": [], "calendar.TextCalendar.formatweekday": [], "calendar.LocaleTextCalendar.formatweekday": ["calendar.different_locale.__init__"], "optparse._match_abbrev": ["<builtin>.len", "optparse.AmbiguousOptionError.__init__", "optparse.BadOptionError.__init__"], "_psutil_aix.proc_basic_info": [], "_psutil_windows.proc_info": [], "_frozen_importlib.spec_from_loader": ["<builtin>.hasattr", "_frozen_importlib.FrozenImporter.is_package", "_frozen_importlib.BuiltinImporter.is_package", "_frozen_importlib.ModuleSpec.__init__"], "_frozen_importlib.module_from_spec": ["<builtin>.hasattr", "_frozen_importlib._init_module_attrs", "<builtin>.ImportError", "_frozen_importlib.FrozenImporter.create_module", "_frozen_importlib._new_module", "_frozen_importlib.BuiltinImporter.create_module"], "_frozen_importlib.BuiltinImporter.exec_module": ["_frozen_importlib._call_with_frames_removed"], "_frozen_importlib.FrozenImporter.exec_module": ["<builtin>.ImportError", "<builtin>.exec", "_frozen_importlib._call_with_frames_removed"], "_frozen_importlib._load_backward_compatible": ["_frozen_importlib.FrozenImporter.load_module", "<builtin>.getattr", "<builtin>.hasattr"], "_frozen_importlib._verbose_message": ["<builtin>.print"], "importlib._bootstrap_external._check_name._wrap": ["<builtin>.hasattr", "<builtin>.getattr", "<builtin>.setattr"], "_frozen_importlib._find_spec": ["_frozen_importlib._find_spec_legacy", "<builtin>.ImportError"], "_frozen_importlib._call_with_frames_removed": ["_frozen_importlib._gcd_import"], "_frozen_importlib._get_module_lock": ["_frozen_importlib._ModuleLock.__init__", "_frozen_importlib._DummyModuleLock.__init__"], "_frozen_importlib._DummyModuleLock.release": ["<builtin>.RuntimeError"], "_frozen_importlib._DummyModuleLock.acquire": [], "_frozen_importlib._ModuleLock.release": ["<builtin>.RuntimeError"], "_frozen_importlib._ModuleLock.acquire": ["_frozen_importlib._ModuleLock.has_deadlock"], "dis.findlinestarts": ["<builtin>.len", "<builtin>.zip"], "dis._unpack_opargs": ["<builtin>.len", "<builtin>.range"], "dis._get_const_info": ["<builtin>.repr"], "dis._get_name_info": ["<builtin>.repr"], "dis.findlabels": ["dis._unpack_opargs"], "doctest.DocTestParser._check_prefix": ["<builtin>.enumerate", "<builtin>.ValueError"], "doctest.DocTestParser._check_prompt_blank": ["<builtin>.len", "<builtin>.enumerate", "<builtin>.ValueError"], "doctest.DocTestParser._find_options": ["<builtin>.ValueError"], "unittest.case.TestCase.addTypeEqualityFunc": [], "stat.S_IFMT": [], "zipfile.ZipInfo.__init__": ["<builtin>.ValueError", "sys.path.replace", "<builtin>.chr", "sys.base_prefix.replace", "sys.base_prefix.find", "sys.path.find"], "zipfile.ZipFile.getinfo": ["<builtin>.KeyError"], "zipfile.ZipExtFile.__init__": ["<builtin>.hasattr", "<builtin>.RuntimeError", "zipfile._get_decompressor", "zipfile.ZipExtFile._init_decrypter", "zipfile._Tellable.tell"], "zipfile.ZipFile._open_to_write": ["<builtin>.hasattr", "zipfile.ZipInfo.FileHeader", "sys.path.FileHeader", "zipfile._Tellable.write", "<builtin>.ValueError", "zipfile.ZipFile.write", "zipfile.ZipFile._writecheck", "zipfile._ZipWriteFile.__init__", "sys.base_prefix.FileHeader", "zipfile._Tellable.tell"], "zipfile._SharedFile.__init__": [], "zipfile.ZipFile._writecheck": ["zipfile._check_compression", "warnings.warn", "<builtin>.ValueError", "<builtin>.len", "warnings"], "zipfile.ZipInfo.from_file": ["zipfile.ZipInfo.__init__", "<builtin>.isinstance", "posixpath.splitdrive", "posixpath.normpath", "stat.S_ISDIR", "time.localtime", "ntpath.splitdrive", "ntpath.normpath"], "shutil.copyfileobj": ["gzip.GzipFile.write", "tarfile._Stream.write", "bz2.BZ2File.write", "tarfile._Stream.read", "lzma.LZMAFile.read", "bz2.BZ2File.read", "lzma.LZMAFile.write", "gzip.GzipFile.read"], "calendar.Calendar.itermonthdays": ["itertools.repeat", "<builtin>.range", "calendar.monthrange"], "optparse.AmbiguousOptionError.__init__": ["optparse.BadOptionError.__init__"], "_frozen_importlib.FrozenImporter.is_package": [], "_frozen_importlib.BuiltinImporter.is_package": [], "_frozen_importlib.FrozenImporter.create_module": [], "_frozen_importlib._new_module": ["<builtin>.type"], "_frozen_importlib.BuiltinImporter.create_module": ["<builtin>.ImportError", "_frozen_importlib._call_with_frames_removed"], "_frozen_importlib.FrozenImporter.load_module": ["_frozen_importlib._load_module_shim"], "_frozen_importlib._find_spec_legacy": ["_frozen_importlib.spec_from_loader"], "_frozen_importlib._ModuleLock.__init__": [], "_frozen_importlib._DummyModuleLock.__init__": [], "_frozen_importlib._ModuleLock.has_deadlock": [], "sys.base_prefix.find": [], "sys.path.find": [], "zipfile._get_decompressor": ["zipfile._check_compression", "<builtin>.NotImplementedError", "zipfile.LZMADecompressor.__init__"], "zipfile.ZipExtFile._init_decrypter": ["zipfile._SharedFile.read", "zipfile._ZipDecrypter", "zipfile._ZipDecrypter.decrypter"], "zipfile._ZipWriteFile.__init__": ["zipfile._get_compressor"], "zipfile._check_compression": ["<builtin>.RuntimeError", "<builtin>.NotImplementedError"], "posixpath.splitdrive": [], "stat.S_ISDIR": ["stat.S_IFMT"], "tarfile._Stream.read": ["tarfile._Stream._read", "<builtin>.len"], "calendar.monthrange": ["calendar.isleap", "calendar.IllegalMonthError.__init__", "calendar.weekday"], "_frozen_importlib._load_module_shim": ["_frozen_importlib._load", "_frozen_importlib.spec_from_loader", "_frozen_importlib._exec"], "zipfile.LZMADecompressor.__init__": [], "zipfile._ZipDecrypter": ["<builtin>.range", "zipfile._ZipDecrypter.update_keys", "<builtin>.map", "<builtin>.list"], "zipfile._get_compressor": ["zipfile.LZMACompressor.__init__"], "tarfile._Stream._read": ["tarfile._Stream.__read", "tarfile._StreamProxy.read", "tarfile._LowLevelFile.read", "<builtin>.len"], "calendar.isleap": [], "calendar.IllegalMonthError.__init__": [], "calendar.weekday": ["datetime.datetime.date"], "_frozen_importlib._load": ["_frozen_importlib._load_unlocked", "_frozen_importlib._ModuleLockManager.__init__"], "_frozen_importlib._exec": ["<builtin>.hasattr", "_frozen_importlib.BuiltinImporter.exec_module", "_frozen_importlib.FrozenImporter.exec_module", "<builtin>.ImportError", "_frozen_importlib.FrozenImporter.load_module", "_frozen_importlib._ModuleLockManager.__init__", "_frozen_importlib._init_module_attrs"], "zipfile.LZMACompressor.__init__": [], "tarfile._Stream.__read": ["<builtin>.len", "tarfile._StreamProxy.read", "tarfile._LowLevelFile.read"], "tarfile._StreamProxy.read": [], "tarfile._LowLevelFile.read": []}